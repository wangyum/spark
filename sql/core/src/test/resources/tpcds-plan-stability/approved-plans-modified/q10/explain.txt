== Physical Plan ==
TakeOrderedAndProject (46)
+- * HashAggregate (45)
   +- Exchange (44)
      +- * HashAggregate (43)
         +- * Project (42)
            +- * BroadcastHashJoin Inner BuildRight (41)
               :- * Project (36)
               :  +- * BroadcastHashJoin Inner BuildRight (35)
               :     :- * Project (29)
               :     :  +- * BroadcastHashJoin LeftSemi BuildRight (28)
               :     :     :- * BroadcastHashJoin LeftSemi BuildRight (19)
               :     :     :  :- * Filter (3)
               :     :     :  :  +- * ColumnarToRow (2)
               :     :     :  :     +- Scan parquet default.customer (1)
               :     :     :  +- BroadcastExchange (18)
               :     :     :     +- * HashAggregate (17)
               :     :     :        +- Union (16)
               :     :     :           :- * Project (9)
               :     :     :           :  +- * BroadcastHashJoin Inner BuildRight (8)
               :     :     :           :     :- * Filter (6)
               :     :     :           :     :  +- * ColumnarToRow (5)
               :     :     :           :     :     +- Scan parquet default.web_sales (4)
               :     :     :           :     +- ReusedExchange (7)
               :     :     :           +- * Project (15)
               :     :     :              +- * BroadcastHashJoin Inner BuildRight (14)
               :     :     :                 :- * Filter (12)
               :     :     :                 :  +- * ColumnarToRow (11)
               :     :     :                 :     +- Scan parquet default.catalog_sales (10)
               :     :     :                 +- ReusedExchange (13)
               :     :     +- BroadcastExchange (27)
               :     :        +- * HashAggregate (26)
               :     :           +- * Project (25)
               :     :              +- * BroadcastHashJoin Inner BuildRight (24)
               :     :                 :- * Filter (22)
               :     :                 :  +- * ColumnarToRow (21)
               :     :                 :     +- Scan parquet default.store_sales (20)
               :     :                 +- ReusedExchange (23)
               :     +- BroadcastExchange (34)
               :        +- * Project (33)
               :           +- * Filter (32)
               :              +- * ColumnarToRow (31)
               :                 +- Scan parquet default.customer_address (30)
               +- BroadcastExchange (40)
                  +- * Filter (39)
                     +- * ColumnarToRow (38)
                        +- Scan parquet default.customer_demographics (37)


(1) Scan parquet default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) ColumnarToRow [codegen id : 10]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(3) Filter [codegen id : 10]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : ((isnotnull(c_customer_sk#1) AND isnotnull(c_current_addr_sk#3)) AND isnotnull(c_current_cdemo_sk#2))

(4) Scan parquet default.web_sales
Output [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#5), dynamicpruningexpression(ws_sold_date_sk#5 IN dynamicpruning#6)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int>

(5) ColumnarToRow [codegen id : 2]
Input [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]

(6) Filter [codegen id : 2]
Input [2]: [ws_bill_customer_sk#4, ws_sold_date_sk#5]
Condition : isnotnull(ws_bill_customer_sk#4)

(7) ReusedExchange [Reuses operator id: 51]
Output [1]: [d_date_sk#7]

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ws_sold_date_sk#5]
Right keys [1]: [d_date_sk#7]
Join condition: None

(9) Project [codegen id : 2]
Output [1]: [ws_bill_customer_sk#4 AS customer_sk#8]
Input [3]: [ws_bill_customer_sk#4, ws_sold_date_sk#5, d_date_sk#7]

(10) Scan parquet default.catalog_sales
Output [2]: [cs_ship_customer_sk#9, cs_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#10), dynamicpruningexpression(cs_sold_date_sk#10 IN dynamicpruning#6)]
PushedFilters: [IsNotNull(cs_ship_customer_sk)]
ReadSchema: struct<cs_ship_customer_sk:int>

(11) ColumnarToRow [codegen id : 4]
Input [2]: [cs_ship_customer_sk#9, cs_sold_date_sk#10]

(12) Filter [codegen id : 4]
Input [2]: [cs_ship_customer_sk#9, cs_sold_date_sk#10]
Condition : isnotnull(cs_ship_customer_sk#9)

(13) ReusedExchange [Reuses operator id: 51]
Output [1]: [d_date_sk#11]

(14) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_sold_date_sk#10]
Right keys [1]: [d_date_sk#11]
Join condition: None

(15) Project [codegen id : 4]
Output [1]: [cs_ship_customer_sk#9 AS customer_sk#12]
Input [3]: [cs_ship_customer_sk#9, cs_sold_date_sk#10, d_date_sk#11]

(16) Union

(17) HashAggregate [codegen id : 5]
Input [1]: [customer_sk#8]
Keys [1]: [customer_sk#8]
Functions: []
Aggregate Attributes: []
Results [1]: [customer_sk#8]

(18) BroadcastExchange
Input [1]: [customer_sk#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#13]

(19) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [customer_sk#8]
Join condition: None

(20) Scan parquet default.store_sales
Output [2]: [ss_customer_sk#14, ss_sold_date_sk#15]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#15), dynamicpruningexpression(ss_sold_date_sk#15 IN dynamicpruning#6)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int>

(21) ColumnarToRow [codegen id : 7]
Input [2]: [ss_customer_sk#14, ss_sold_date_sk#15]

(22) Filter [codegen id : 7]
Input [2]: [ss_customer_sk#14, ss_sold_date_sk#15]
Condition : isnotnull(ss_customer_sk#14)

(23) ReusedExchange [Reuses operator id: 51]
Output [1]: [d_date_sk#16]

(24) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ss_sold_date_sk#15]
Right keys [1]: [d_date_sk#16]
Join condition: None

(25) Project [codegen id : 7]
Output [1]: [ss_customer_sk#14 AS customer_sk#17]
Input [3]: [ss_customer_sk#14, ss_sold_date_sk#15, d_date_sk#16]

(26) HashAggregate [codegen id : 7]
Input [1]: [customer_sk#17]
Keys [1]: [customer_sk#17]
Functions: []
Aggregate Attributes: []
Results [1]: [customer_sk#17]

(27) BroadcastExchange
Input [1]: [customer_sk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#18]

(28) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [customer_sk#17]
Join condition: None

(29) Project [codegen id : 10]
Output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(30) Scan parquet default.customer_address
Output [2]: [ca_address_sk#19, ca_county#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(31) ColumnarToRow [codegen id : 8]
Input [2]: [ca_address_sk#19, ca_county#20]

(32) Filter [codegen id : 8]
Input [2]: [ca_address_sk#19, ca_county#20]
Condition : (ca_county#20 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#19))

(33) Project [codegen id : 8]
Output [1]: [ca_address_sk#19]
Input [2]: [ca_address_sk#19, ca_county#20]

(34) BroadcastExchange
Input [1]: [ca_address_sk#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#21]

(35) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_current_addr_sk#3]
Right keys [1]: [ca_address_sk#19]
Join condition: None

(36) Project [codegen id : 10]
Output [1]: [c_current_cdemo_sk#2]
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#19]

(37) Scan parquet default.customer_demographics
Output [9]: [cd_demo_sk#22, cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(38) ColumnarToRow [codegen id : 9]
Input [9]: [cd_demo_sk#22, cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]

(39) Filter [codegen id : 9]
Input [9]: [cd_demo_sk#22, cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Condition : isnotnull(cd_demo_sk#22)

(40) BroadcastExchange
Input [9]: [cd_demo_sk#22, cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#31]

(41) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_current_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#22]
Join condition: None

(42) Project [codegen id : 10]
Output [8]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Input [10]: [c_current_cdemo_sk#2, cd_demo_sk#22, cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]

(43) HashAggregate [codegen id : 10]
Input [8]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Keys [8]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#32]
Results [9]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30, count#33]

(44) Exchange
Input [9]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30, count#33]
Arguments: hashpartitioning(cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30, 5), ENSURE_REQUIREMENTS, [id=#34]

(45) HashAggregate [codegen id : 11]
Input [9]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30, count#33]
Keys [8]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cd_purchase_estimate#26, cd_credit_rating#27, cd_dep_count#28, cd_dep_employed_count#29, cd_dep_college_count#30]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#35]
Results [14]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, count(1)#35 AS cnt1#36, cd_purchase_estimate#26, count(1)#35 AS cnt2#37, cd_credit_rating#27, count(1)#35 AS cnt3#38, cd_dep_count#28, count(1)#35 AS cnt4#39, cd_dep_employed_count#29, count(1)#35 AS cnt5#40, cd_dep_college_count#30, count(1)#35 AS cnt6#41]

(46) TakeOrderedAndProject
Input [14]: [cd_gender#23, cd_marital_status#24, cd_education_status#25, cnt1#36, cd_purchase_estimate#26, cnt2#37, cd_credit_rating#27, cnt3#38, cd_dep_count#28, cnt4#39, cd_dep_employed_count#29, cnt5#40, cd_dep_college_count#30, cnt6#41]
Arguments: 100, [cd_gender#23 ASC NULLS FIRST, cd_marital_status#24 ASC NULLS FIRST, cd_education_status#25 ASC NULLS FIRST, cd_purchase_estimate#26 ASC NULLS FIRST, cd_credit_rating#27 ASC NULLS FIRST, cd_dep_count#28 ASC NULLS FIRST, cd_dep_employed_count#29 ASC NULLS FIRST, cd_dep_college_count#30 ASC NULLS FIRST], [cd_gender#23, cd_marital_status#24, cd_education_status#25, cnt1#36, cd_purchase_estimate#26, cnt2#37, cd_credit_rating#27, cnt3#38, cd_dep_count#28, cnt4#39, cd_dep_employed_count#29, cnt5#40, cd_dep_college_count#30, cnt6#41]

===== Subqueries =====

Subquery:1 Hosting operator id = 4 Hosting Expression = ws_sold_date_sk#5 IN dynamicpruning#6
BroadcastExchange (51)
+- * Project (50)
   +- * Filter (49)
      +- * ColumnarToRow (48)
         +- Scan parquet default.date_dim (47)


(47) Scan parquet default.date_dim
Output [3]: [d_date_sk#7, d_year#42, d_moy#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(48) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#7, d_year#42, d_moy#43]

(49) Filter [codegen id : 1]
Input [3]: [d_date_sk#7, d_year#42, d_moy#43]
Condition : (((((isnotnull(d_year#42) AND isnotnull(d_moy#43)) AND (d_year#42 = 2002)) AND (d_moy#43 >= 4)) AND (d_moy#43 <= 7)) AND isnotnull(d_date_sk#7))

(50) Project [codegen id : 1]
Output [1]: [d_date_sk#7]
Input [3]: [d_date_sk#7, d_year#42, d_moy#43]

(51) BroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#44]

Subquery:2 Hosting operator id = 10 Hosting Expression = cs_sold_date_sk#10 IN dynamicpruning#6

Subquery:3 Hosting operator id = 20 Hosting Expression = ss_sold_date_sk#15 IN dynamicpruning#6


