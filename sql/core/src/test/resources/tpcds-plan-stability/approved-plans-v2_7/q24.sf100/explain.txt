== Physical Plan ==
* Sort (51)
+- Exchange (50)
   +- * Filter (49)
      +- * HashAggregate (48)
         +- Exchange (47)
            +- * HashAggregate (46)
               +- * HashAggregate (45)
                  +- Exchange (44)
                     +- * HashAggregate (43)
                        +- * Project (42)
                           +- * SortMergeJoin Inner (41)
                              :- * Sort (34)
                              :  +- Exchange (33)
                              :     +- * Project (32)
                              :        +- HashAggregate (31)
                              :           +- Project (30)
                              :              +- SortMergeJoin Inner (29)
                              :                 :- * Sort (23)
                              :                 :  +- Exchange (22)
                              :                 :     +- * BroadcastHashJoin Inner BuildRight (21)
                              :                 :        :- * SortMergeJoin Inner (16)
                              :                 :        :  :- * Sort (10)
                              :                 :        :  :  +- Exchange (9)
                              :                 :        :  :     +- * BroadcastHashJoin Inner BuildRight (8)
                              :                 :        :  :        :- * Filter (3)
                              :                 :        :  :        :  +- * ColumnarToRow (2)
                              :                 :        :  :        :     +- Scan parquet default.store_sales (1)
                              :                 :        :  :        +- BroadcastExchange (7)
                              :                 :        :  :           +- * Filter (6)
                              :                 :        :  :              +- * ColumnarToRow (5)
                              :                 :        :  :                 +- Scan parquet default.item (4)
                              :                 :        :  +- * Sort (15)
                              :                 :        :     +- Exchange (14)
                              :                 :        :        +- * Filter (13)
                              :                 :        :           +- * ColumnarToRow (12)
                              :                 :        :              +- Scan parquet default.customer (11)
                              :                 :        +- BroadcastExchange (20)
                              :                 :           +- * Filter (19)
                              :                 :              +- * ColumnarToRow (18)
                              :                 :                 +- Scan parquet default.store (17)
                              :                 +- * Sort (28)
                              :                    +- Exchange (27)
                              :                       +- * Filter (26)
                              :                          +- * ColumnarToRow (25)
                              :                             +- Scan parquet default.store_returns (24)
                              +- * Sort (40)
                                 +- Exchange (39)
                                    +- * HashAggregate (38)
                                       +- * Filter (37)
                                          +- * ColumnarToRow (36)
                                             +- Scan parquet default.customer_address (35)


(1) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(3) Filter [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : (((isnotnull(ss_ticket_number#9) AND isnotnull(ss_item_sk#2)) AND isnotnull(ss_store_sk#7)) AND isnotnull(ss_customer_sk#3))

(4) Scan parquet default.item
Output [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_color), EqualTo(i_color,pale                ), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(5) ColumnarToRow [codegen id : 1]
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]

(6) Filter [codegen id : 1]
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Condition : ((isnotnull(i_color#41) AND (i_color#41 = pale                )) AND isnotnull(i_item_sk#24))

(7) BroadcastExchange
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#46]

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#24]
Join condition: None

(9) Exchange
Input [45]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: hashpartitioning(ss_customer_sk#3, 5), ENSURE_REQUIREMENTS, [id=#47]

(10) Sort [codegen id : 3]
Input [45]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: [ss_customer_sk#3 ASC NULLS FIRST], false, 0

(11) Scan parquet default.customer
Output [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(12) ColumnarToRow [codegen id : 4]
Input [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]

(13) Filter [codegen id : 4]
Input [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Condition : ((isnotnull(c_customer_sk#48) AND isnotnull(c_current_addr_sk#52)) AND isnotnull(c_birth_country#62))

(14) Exchange
Input [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Arguments: hashpartitioning(c_customer_sk#48, 5), ENSURE_REQUIREMENTS, [id=#66]

(15) Sort [codegen id : 5]
Input [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Arguments: [c_customer_sk#48 ASC NULLS FIRST], false, 0

(16) SortMergeJoin [codegen id : 7]
Left keys [1]: [ss_customer_sk#3]
Right keys [1]: [c_customer_sk#48]
Join condition: None

(17) Scan parquet default.store
Output [29]: [s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)]
ReadSchema: struct<s_store_sk:int,s_store_id:string,s_rec_start_date:date,s_rec_end_date:date,s_closed_date_sk:int,s_store_name:string,s_number_employees:int,s_floor_space:int,s_hours:string,s_manager:string,s_market_id:int,s_geography_class:string,s_market_desc:string,s_market_manager:string,s_division_id:int,s_division_name:string,s_company_id:int,s_company_name:string,s_street_number:string,s_street_name:string,s_street_type:string,s_suite_number:string,s_city:string,s_county:string,s_state:string,s_zip:string,s_country:string,s_gmt_offset:decimal(5,2),s_tax_percentage:decimal(5,2)>

(18) ColumnarToRow [codegen id : 6]
Input [29]: [s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]

(19) Filter [codegen id : 6]
Input [29]: [s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Condition : (((isnotnull(s_market_id#77) AND (s_market_id#77 = 8)) AND isnotnull(s_store_sk#67)) AND isnotnull(s_zip#92))

(20) BroadcastExchange
Input [29]: [s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#96]

(21) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#67]
Join condition: None

(22) Exchange
Input [92]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Arguments: hashpartitioning(ss_ticket_number#9, ss_item_sk#2, 5), ENSURE_REQUIREMENTS, [id=#97]

(23) Sort [codegen id : 8]
Input [92]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Arguments: [ss_ticket_number#9 ASC NULLS FIRST, ss_item_sk#2 ASC NULLS FIRST], false, 0

(24) Scan parquet default.store_returns
Output [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_returns]
PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_return_time_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_cdemo_sk:int,sr_hdemo_sk:int,sr_addr_sk:int,sr_store_sk:int,sr_reason_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2),sr_return_tax:decimal(7,2),sr_return_amt_inc_tax:decimal(7,2),sr_fee:decimal(7,2),sr_return_ship_cost:decimal(7,2),sr_refunded_cash:decimal(7,2),sr_reversed_charge:decimal(7,2),sr_store_credit:decimal(7,2),sr_net_loss:decimal(7,2)>

(25) ColumnarToRow [codegen id : 9]
Input [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]

(26) Filter [codegen id : 9]
Input [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]
Condition : (isnotnull(sr_ticket_number#106) AND isnotnull(sr_item_sk#99))

(27) Exchange
Input [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]
Arguments: hashpartitioning(sr_ticket_number#106, sr_item_sk#99, 5), ENSURE_REQUIREMENTS, [id=#118]

(28) Sort [codegen id : 10]
Input [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]
Arguments: [sr_ticket_number#106 ASC NULLS FIRST, sr_item_sk#99 ASC NULLS FIRST], false, 0

(29) SortMergeJoin
Left keys [2]: [ss_ticket_number#9, ss_item_sk#2]
Right keys [2]: [sr_ticket_number#106, sr_item_sk#99]
Join condition: None

(30) Project
Output [112]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Input [112]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]

(31) HashAggregate
Input [112]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Keys [12]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39]
Functions [1]: [partial_sum(UnscaledValue(ss_net_paid#20))]
Aggregate Attributes [1]: [sum#119]
Results [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#120]

(32) Project [codegen id : 11]
Output [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#120 AS _pushedexpression#121]
Input [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#120]

(33) Exchange
Input [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#121]
Arguments: hashpartitioning(c_current_addr_sk#52, c_birth_country#62, s_zip#92, 5), ENSURE_REQUIREMENTS, [id=#122]

(34) Sort [codegen id : 12]
Input [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#121]
Arguments: [c_current_addr_sk#52 ASC NULLS FIRST, c_birth_country#62 ASC NULLS FIRST, s_zip#92 ASC NULLS FIRST], false, 0

(35) Scan parquet default.customer_address
Output [13]: [ca_address_sk#123, ca_address_id#124, ca_street_number#125, ca_street_name#126, ca_street_type#127, ca_suite_number#128, ca_city#129, ca_county#130, ca_state#131, ca_zip#132, ca_country#133, ca_gmt_offset#134, ca_location_type#135]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)]
ReadSchema: struct<ca_address_sk:int,ca_address_id:string,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string>

(36) ColumnarToRow [codegen id : 13]
Input [13]: [ca_address_sk#123, ca_address_id#124, ca_street_number#125, ca_street_name#126, ca_street_type#127, ca_suite_number#128, ca_city#129, ca_county#130, ca_state#131, ca_zip#132, ca_country#133, ca_gmt_offset#134, ca_location_type#135]

(37) Filter [codegen id : 13]
Input [13]: [ca_address_sk#123, ca_address_id#124, ca_street_number#125, ca_street_name#126, ca_street_type#127, ca_suite_number#128, ca_city#129, ca_county#130, ca_state#131, ca_zip#132, ca_country#133, ca_gmt_offset#134, ca_location_type#135]
Condition : ((isnotnull(ca_address_sk#123) AND isnotnull(ca_country#133)) AND isnotnull(ca_zip#132))

(38) HashAggregate [codegen id : 13]
Input [13]: [ca_address_sk#123, ca_address_id#124, ca_street_number#125, ca_street_name#126, ca_street_type#127, ca_suite_number#128, ca_city#129, ca_county#130, ca_state#131, ca_zip#132, ca_country#133, ca_gmt_offset#134, ca_location_type#135]
Keys [4]: [ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]
Functions: []
Aggregate Attributes: []
Results [4]: [ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]

(39) Exchange
Input [4]: [ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]
Arguments: hashpartitioning(ca_address_sk#123, upper(ca_country#133), ca_zip#132, 5), ENSURE_REQUIREMENTS, [id=#136]

(40) Sort [codegen id : 14]
Input [4]: [ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]
Arguments: [ca_address_sk#123 ASC NULLS FIRST, upper(ca_country#133) ASC NULLS FIRST, ca_zip#132 ASC NULLS FIRST], false, 0

(41) SortMergeJoin [codegen id : 15]
Left keys [3]: [c_current_addr_sk#52, c_birth_country#62, s_zip#92]
Right keys [3]: [ca_address_sk#123, upper(ca_country#133), ca_zip#132]
Join condition: None

(42) Project [codegen id : 15]
Output [11]: [c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#137, ca_state#131]
Input [17]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#121, ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]

(43) HashAggregate [codegen id : 15]
Input [11]: [c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#137, ca_state#131]
Keys [10]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39]
Functions [1]: [partial_sum(_pushedexpression#137)]
Aggregate Attributes [2]: [sum#138, isEmpty#139]
Results [12]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#140, isEmpty#141]

(44) Exchange
Input [12]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#140, isEmpty#141]
Arguments: hashpartitioning(c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, 5), ENSURE_REQUIREMENTS, [id=#142]

(45) HashAggregate [codegen id : 16]
Input [12]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#140, isEmpty#141]
Keys [10]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39]
Functions [1]: [sum(_pushedexpression#137)]
Aggregate Attributes [1]: [sum(_pushedexpression#137)#143]
Results [4]: [c_last_name#57, c_first_name#56, s_store_name#72, cast(sum(_pushedexpression#137)#143 as decimal(17,2)) AS netpaid#144]

(46) HashAggregate [codegen id : 16]
Input [4]: [c_last_name#57, c_first_name#56, s_store_name#72, netpaid#144]
Keys [3]: [c_last_name#57, c_first_name#56, s_store_name#72]
Functions [1]: [partial_sum(netpaid#144)]
Aggregate Attributes [2]: [sum#145, isEmpty#146]
Results [5]: [c_last_name#57, c_first_name#56, s_store_name#72, sum#147, isEmpty#148]

(47) Exchange
Input [5]: [c_last_name#57, c_first_name#56, s_store_name#72, sum#147, isEmpty#148]
Arguments: hashpartitioning(c_last_name#57, c_first_name#56, s_store_name#72, 5), ENSURE_REQUIREMENTS, [id=#149]

(48) HashAggregate [codegen id : 17]
Input [5]: [c_last_name#57, c_first_name#56, s_store_name#72, sum#147, isEmpty#148]
Keys [3]: [c_last_name#57, c_first_name#56, s_store_name#72]
Functions [1]: [sum(netpaid#144)]
Aggregate Attributes [1]: [sum(netpaid#144)#150]
Results [4]: [c_last_name#57, c_first_name#56, s_store_name#72, sum(netpaid#144)#150 AS paid#151]

(49) Filter [codegen id : 17]
Input [4]: [c_last_name#57, c_first_name#56, s_store_name#72, paid#151]
Condition : (isnotnull(paid#151) AND (cast(paid#151 as decimal(33,8)) > cast(Subquery scalar-subquery#152, [id=#153] as decimal(33,8))))

(50) Exchange
Input [4]: [c_last_name#57, c_first_name#56, s_store_name#72, paid#151]
Arguments: rangepartitioning(c_last_name#57 ASC NULLS FIRST, c_first_name#56 ASC NULLS FIRST, s_store_name#72 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [id=#154]

(51) Sort [codegen id : 18]
Input [4]: [c_last_name#57, c_first_name#56, s_store_name#72, paid#151]
Arguments: [c_last_name#57 ASC NULLS FIRST, c_first_name#56 ASC NULLS FIRST, s_store_name#72 ASC NULLS FIRST], true, 0

===== Subqueries =====

Subquery:1 Hosting operator id = 49 Hosting Expression = Subquery scalar-subquery#152, [id=#153]
* HashAggregate (89)
+- Exchange (88)
   +- * HashAggregate (87)
      +- * HashAggregate (86)
         +- Exchange (85)
            +- * HashAggregate (84)
               +- * Project (83)
                  +- * SortMergeJoin Inner (82)
                     :- * Sort (79)
                     :  +- Exchange (78)
                     :     +- * Project (77)
                     :        +- HashAggregate (76)
                     :           +- Project (75)
                     :              +- SortMergeJoin Inner (74)
                     :                 :- * Sort (71)
                     :                 :  +- Exchange (70)
                     :                 :     +- * SortMergeJoin Inner (69)
                     :                 :        :- * Sort (63)
                     :                 :        :  +- Exchange (62)
                     :                 :        :     +- * SortMergeJoin Inner (61)
                     :                 :        :        :- * Sort (58)
                     :                 :        :        :  +- Exchange (57)
                     :                 :        :        :     +- * BroadcastHashJoin Inner BuildRight (56)
                     :                 :        :        :        :- * Filter (54)
                     :                 :        :        :        :  +- * ColumnarToRow (53)
                     :                 :        :        :        :     +- Scan parquet default.store_sales (52)
                     :                 :        :        :        +- ReusedExchange (55)
                     :                 :        :        +- * Sort (60)
                     :                 :        :           +- ReusedExchange (59)
                     :                 :        +- * Sort (68)
                     :                 :           +- Exchange (67)
                     :                 :              +- * Filter (66)
                     :                 :                 +- * ColumnarToRow (65)
                     :                 :                    +- Scan parquet default.item (64)
                     :                 +- * Sort (73)
                     :                    +- ReusedExchange (72)
                     +- * Sort (81)
                        +- ReusedExchange (80)


(52) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(53) ColumnarToRow [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(54) Filter [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : (((isnotnull(ss_ticket_number#9) AND isnotnull(ss_item_sk#2)) AND isnotnull(ss_store_sk#7)) AND isnotnull(ss_customer_sk#3))

(55) ReusedExchange [Reuses operator id: 20]
Output [29]: [s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]

(56) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#67]
Join condition: None

(57) Exchange
Input [52]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Arguments: hashpartitioning(ss_customer_sk#3, 5), ENSURE_REQUIREMENTS, [id=#155]

(58) Sort [codegen id : 3]
Input [52]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95]
Arguments: [ss_customer_sk#3 ASC NULLS FIRST], false, 0

(59) ReusedExchange [Reuses operator id: 14]
Output [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]

(60) Sort [codegen id : 5]
Input [18]: [c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Arguments: [c_customer_sk#48 ASC NULLS FIRST], false, 0

(61) SortMergeJoin [codegen id : 6]
Left keys [1]: [ss_customer_sk#3]
Right keys [1]: [c_customer_sk#48]
Join condition: None

(62) Exchange
Input [70]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Arguments: hashpartitioning(ss_item_sk#2, 5), ENSURE_REQUIREMENTS, [id=#156]

(63) Sort [codegen id : 7]
Input [70]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Arguments: [ss_item_sk#2 ASC NULLS FIRST], false, 0

(64) Scan parquet default.item
Output [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(65) ColumnarToRow [codegen id : 8]
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]

(66) Filter [codegen id : 8]
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Condition : isnotnull(i_item_sk#24)

(67) Exchange
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: hashpartitioning(i_item_sk#24, 5), ENSURE_REQUIREMENTS, [id=#157]

(68) Sort [codegen id : 9]
Input [22]: [i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: [i_item_sk#24 ASC NULLS FIRST], false, 0

(69) SortMergeJoin [codegen id : 10]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#24]
Join condition: None

(70) Exchange
Input [92]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: hashpartitioning(ss_ticket_number#9, ss_item_sk#2, 5), ENSURE_REQUIREMENTS, [id=#158]

(71) Sort [codegen id : 11]
Input [92]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45]
Arguments: [ss_ticket_number#9 ASC NULLS FIRST, ss_item_sk#2 ASC NULLS FIRST], false, 0

(72) ReusedExchange [Reuses operator id: 27]
Output [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]

(73) Sort [codegen id : 13]
Input [20]: [sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]
Arguments: [sr_ticket_number#106 ASC NULLS FIRST, sr_item_sk#99 ASC NULLS FIRST], false, 0

(74) SortMergeJoin
Left keys [2]: [ss_ticket_number#9, ss_item_sk#2]
Right keys [2]: [sr_ticket_number#106, sr_item_sk#99]
Join condition: None

(75) Project
Output [112]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Input [112]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117]

(76) HashAggregate
Input [112]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, sr_return_time_sk#98, sr_item_sk#99, sr_customer_sk#100, sr_cdemo_sk#101, sr_hdemo_sk#102, sr_addr_sk#103, sr_store_sk#104, sr_reason_sk#105, sr_ticket_number#106, sr_return_quantity#107, sr_return_amt#108, sr_return_tax#109, sr_return_amt_inc_tax#110, sr_fee#111, sr_return_ship_cost#112, sr_refunded_cash#113, sr_reversed_charge#114, sr_store_credit#115, sr_net_loss#116, sr_returned_date_sk#117, s_store_sk#67, s_store_id#68, s_rec_start_date#69, s_rec_end_date#70, s_closed_date_sk#71, s_store_name#72, s_number_employees#73, s_floor_space#74, s_hours#75, s_manager#76, s_market_id#77, s_geography_class#78, s_market_desc#79, s_market_manager#80, s_division_id#81, s_division_name#82, s_company_id#83, s_company_name#84, s_street_number#85, s_street_name#86, s_street_type#87, s_suite_number#88, s_city#89, s_county#90, s_state#91, s_zip#92, s_country#93, s_gmt_offset#94, s_tax_percentage#95, i_item_sk#24, i_item_id#25, i_rec_start_date#26, i_rec_end_date#27, i_item_desc#28, i_current_price#29, i_wholesale_cost#30, i_brand_id#31, i_brand#32, i_class_id#33, i_class#34, i_category_id#35, i_category#36, i_manufact_id#37, i_manufact#38, i_size#39, i_formulation#40, i_color#41, i_units#42, i_container#43, i_manager_id#44, i_product_name#45, c_customer_sk#48, c_customer_id#49, c_current_cdemo_sk#50, c_current_hdemo_sk#51, c_current_addr_sk#52, c_first_shipto_date_sk#53, c_first_sales_date_sk#54, c_salutation#55, c_first_name#56, c_last_name#57, c_preferred_cust_flag#58, c_birth_day#59, c_birth_month#60, c_birth_year#61, c_birth_country#62, c_login#63, c_email_address#64, c_last_review_date#65]
Keys [12]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39]
Functions [1]: [partial_sum(UnscaledValue(ss_net_paid#20))]
Aggregate Attributes [1]: [sum#159]
Results [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#160]

(77) Project [codegen id : 14]
Output [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#160 AS _pushedexpression#161]
Input [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#160]

(78) Exchange
Input [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#161]
Arguments: hashpartitioning(c_current_addr_sk#52, c_birth_country#62, s_zip#92, 5), ENSURE_REQUIREMENTS, [id=#162]

(79) Sort [codegen id : 15]
Input [13]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#161]
Arguments: [c_current_addr_sk#52 ASC NULLS FIRST, c_birth_country#62 ASC NULLS FIRST, s_zip#92 ASC NULLS FIRST], false, 0

(80) ReusedExchange [Reuses operator id: 39]
Output [4]: [ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]

(81) Sort [codegen id : 17]
Input [4]: [ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]
Arguments: [ca_address_sk#123 ASC NULLS FIRST, upper(ca_country#133) ASC NULLS FIRST, ca_zip#132 ASC NULLS FIRST], false, 0

(82) SortMergeJoin [codegen id : 18]
Left keys [3]: [c_current_addr_sk#52, c_birth_country#62, s_zip#92]
Right keys [3]: [ca_address_sk#123, upper(ca_country#133), ca_zip#132]
Join condition: None

(83) Project [codegen id : 18]
Output [11]: [c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#163, ca_state#131]
Input [17]: [c_birth_country#62, c_current_addr_sk#52, s_zip#92, c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#161, ca_address_sk#123, ca_country#133, ca_zip#132, ca_state#131]

(84) HashAggregate [codegen id : 18]
Input [11]: [c_last_name#57, c_first_name#56, s_store_name#72, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, _pushedexpression#163, ca_state#131]
Keys [10]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39]
Functions [1]: [partial_sum(_pushedexpression#163)]
Aggregate Attributes [2]: [sum#164, isEmpty#165]
Results [12]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#166, isEmpty#167]

(85) Exchange
Input [12]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#166, isEmpty#167]
Arguments: hashpartitioning(c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, 5), ENSURE_REQUIREMENTS, [id=#168]

(86) HashAggregate [codegen id : 19]
Input [12]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39, sum#166, isEmpty#167]
Keys [10]: [c_last_name#57, c_first_name#56, s_store_name#72, ca_state#131, s_state#91, i_color#41, i_current_price#29, i_manager_id#44, i_units#42, i_size#39]
Functions [1]: [sum(_pushedexpression#163)]
Aggregate Attributes [1]: [sum(_pushedexpression#163)#143]
Results [1]: [cast(sum(_pushedexpression#163)#143 as decimal(17,2)) AS netpaid#144]

(87) HashAggregate [codegen id : 19]
Input [1]: [netpaid#144]
Keys: []
Functions [1]: [partial_avg(netpaid#144)]
Aggregate Attributes [2]: [sum#169, count#170]
Results [2]: [sum#171, count#172]

(88) Exchange
Input [2]: [sum#171, count#172]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#173]

(89) HashAggregate [codegen id : 20]
Input [2]: [sum#171, count#172]
Keys: []
Functions [1]: [avg(netpaid#144)]
Aggregate Attributes [1]: [avg(netpaid#144)#174]
Results [1]: [CheckOverflow((0.050000 * promote_precision(avg(netpaid#144)#174)), DecimalType(24,8)) AS (0.05 * avg(netpaid))#175]


