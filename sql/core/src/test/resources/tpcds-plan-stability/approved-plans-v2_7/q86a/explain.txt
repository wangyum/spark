== Physical Plan ==
TakeOrderedAndProject (36)
+- * Project (35)
   +- Window (34)
      +- * Sort (33)
         +- Exchange (32)
            +- * HashAggregate (31)
               +- Exchange (30)
                  +- * HashAggregate (29)
                     +- Union (28)
                        :- * HashAggregate (17)
                        :  +- Exchange (16)
                        :     +- * HashAggregate (15)
                        :        +- * Project (14)
                        :           +- * BroadcastHashJoin Inner BuildRight (13)
                        :              :- * Project (7)
                        :              :  +- * HashAggregate (6)
                        :              :     +- * BroadcastHashJoin Inner BuildRight (5)
                        :              :        :- * Filter (3)
                        :              :        :  +- * ColumnarToRow (2)
                        :              :        :     +- Scan parquet default.web_sales (1)
                        :              :        +- ReusedExchange (4)
                        :              +- BroadcastExchange (12)
                        :                 +- * HashAggregate (11)
                        :                    +- * Filter (10)
                        :                       +- * ColumnarToRow (9)
                        :                          +- Scan parquet default.item (8)
                        :- * HashAggregate (22)
                        :  +- Exchange (21)
                        :     +- * HashAggregate (20)
                        :        +- * HashAggregate (19)
                        :           +- ReusedExchange (18)
                        +- * HashAggregate (27)
                           +- Exchange (26)
                              +- * HashAggregate (25)
                                 +- * HashAggregate (24)
                                    +- ReusedExchange (23)


(1) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#35)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]

(3) Filter [codegen id : 3]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Condition : isnotnull(ws_item_sk#3)

(4) ReusedExchange [Reuses operator id: 40]
Output [28]: [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, d_current_week#60, d_current_month#61, d_current_quarter#62, d_current_year#63]

(5) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#34]
Right keys [1]: [d_date_sk#36]
Join condition: None

(6) HashAggregate [codegen id : 3]
Input [62]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34, d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, d_current_week#60, d_current_month#61, d_current_quarter#62, d_current_year#63]
Keys [1]: [ws_item_sk#3]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#29))]
Aggregate Attributes [1]: [sum#64]
Results [2]: [ws_item_sk#3, sum#65]

(7) Project [codegen id : 3]
Output [2]: [ws_item_sk#3, sum#65 AS _pushedexpression#66]
Input [2]: [ws_item_sk#3, sum#65]

(8) Scan parquet default.item
Output [22]: [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(9) ColumnarToRow [codegen id : 2]
Input [22]: [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88]

(10) Filter [codegen id : 2]
Input [22]: [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88]
Condition : isnotnull(i_item_sk#67)

(11) HashAggregate [codegen id : 2]
Input [22]: [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88]
Keys [3]: [i_item_sk#67, i_category#79, i_class#77]
Functions: []
Aggregate Attributes: []
Results [3]: [i_item_sk#67, i_category#79, i_class#77]

(12) BroadcastExchange
Input [3]: [i_item_sk#67, i_category#79, i_class#77]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#89]

(13) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_item_sk#3]
Right keys [1]: [i_item_sk#67]
Join condition: None

(14) Project [codegen id : 3]
Output [3]: [_pushedexpression#90, i_category#79, i_class#77]
Input [5]: [ws_item_sk#3, _pushedexpression#66, i_item_sk#67, i_category#79, i_class#77]

(15) HashAggregate [codegen id : 3]
Input [3]: [_pushedexpression#90, i_category#79, i_class#77]
Keys [2]: [i_category#79, i_class#77]
Functions [1]: [partial_sum(_pushedexpression#90)]
Aggregate Attributes [2]: [sum#91, isEmpty#92]
Results [4]: [i_category#79, i_class#77, sum#93, isEmpty#94]

(16) Exchange
Input [4]: [i_category#79, i_class#77, sum#93, isEmpty#94]
Arguments: hashpartitioning(i_category#79, i_class#77, 5), ENSURE_REQUIREMENTS, [id=#95]

(17) HashAggregate [codegen id : 4]
Input [4]: [i_category#79, i_class#77, sum#93, isEmpty#94]
Keys [2]: [i_category#79, i_class#77]
Functions [1]: [sum(_pushedexpression#90)]
Aggregate Attributes [1]: [sum(_pushedexpression#90)#96]
Results [6]: [cast(cast(sum(_pushedexpression#90)#96 as decimal(17,2)) as decimal(27,2)) AS total_sum#97, i_category#79, i_class#77, 0 AS g_category#98, 0 AS g_class#99, 0 AS lochierarchy#100]

(18) ReusedExchange [Reuses operator id: 16]
Output [4]: [i_category#79, i_class#77, sum#101, isEmpty#102]

(19) HashAggregate [codegen id : 8]
Input [4]: [i_category#79, i_class#77, sum#101, isEmpty#102]
Keys [2]: [i_category#79, i_class#77]
Functions [1]: [sum(_pushedexpression#103)]
Aggregate Attributes [1]: [sum(_pushedexpression#103)#96]
Results [2]: [cast(sum(_pushedexpression#103)#96 as decimal(17,2)) AS total_sum#104, i_category#79]

(20) HashAggregate [codegen id : 8]
Input [2]: [total_sum#104, i_category#79]
Keys [1]: [i_category#79]
Functions [1]: [partial_sum(total_sum#104)]
Aggregate Attributes [2]: [sum#105, isEmpty#106]
Results [3]: [i_category#79, sum#107, isEmpty#108]

(21) Exchange
Input [3]: [i_category#79, sum#107, isEmpty#108]
Arguments: hashpartitioning(i_category#79, 5), ENSURE_REQUIREMENTS, [id=#109]

(22) HashAggregate [codegen id : 9]
Input [3]: [i_category#79, sum#107, isEmpty#108]
Keys [1]: [i_category#79]
Functions [1]: [sum(total_sum#104)]
Aggregate Attributes [1]: [sum(total_sum#104)#110]
Results [6]: [sum(total_sum#104)#110 AS total_sum#111, i_category#79, null AS i_class#112, 0 AS g_category#113, 1 AS g_class#114, 1 AS lochierarchy#115]

(23) ReusedExchange [Reuses operator id: 16]
Output [4]: [i_category#79, i_class#77, sum#116, isEmpty#117]

(24) HashAggregate [codegen id : 13]
Input [4]: [i_category#79, i_class#77, sum#116, isEmpty#117]
Keys [2]: [i_category#79, i_class#77]
Functions [1]: [sum(_pushedexpression#118)]
Aggregate Attributes [1]: [sum(_pushedexpression#118)#96]
Results [1]: [cast(sum(_pushedexpression#118)#96 as decimal(17,2)) AS total_sum#104]

(25) HashAggregate [codegen id : 13]
Input [1]: [total_sum#104]
Keys: []
Functions [1]: [partial_sum(total_sum#104)]
Aggregate Attributes [2]: [sum#119, isEmpty#120]
Results [2]: [sum#121, isEmpty#122]

(26) Exchange
Input [2]: [sum#121, isEmpty#122]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#123]

(27) HashAggregate [codegen id : 14]
Input [2]: [sum#121, isEmpty#122]
Keys: []
Functions [1]: [sum(total_sum#104)]
Aggregate Attributes [1]: [sum(total_sum#104)#124]
Results [6]: [sum(total_sum#104)#124 AS total_sum#125, null AS i_category#126, null AS i_class#127, 1 AS g_category#128, 1 AS g_class#129, 2 AS lochierarchy#130]

(28) Union

(29) HashAggregate [codegen id : 15]
Input [6]: [total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100]
Keys [6]: [total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100]
Functions: []
Aggregate Attributes: []
Results [6]: [total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100]

(30) Exchange
Input [6]: [total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100]
Arguments: hashpartitioning(total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100, 5), ENSURE_REQUIREMENTS, [id=#131]

(31) HashAggregate [codegen id : 16]
Input [6]: [total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100]
Keys [6]: [total_sum#97, i_category#79, i_class#77, g_category#98, g_class#99, lochierarchy#100]
Functions: []
Aggregate Attributes: []
Results [5]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, CASE WHEN (g_class#99 = 0) THEN i_category#79 END AS _w0#132]

(32) Exchange
Input [5]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, _w0#132]
Arguments: hashpartitioning(lochierarchy#100, _w0#132, 5), ENSURE_REQUIREMENTS, [id=#133]

(33) Sort [codegen id : 17]
Input [5]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, _w0#132]
Arguments: [lochierarchy#100 ASC NULLS FIRST, _w0#132 ASC NULLS FIRST, total_sum#97 DESC NULLS LAST], false, 0

(34) Window
Input [5]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, _w0#132]
Arguments: [rank(total_sum#97) windowspecdefinition(lochierarchy#100, _w0#132, total_sum#97 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#134], [lochierarchy#100, _w0#132], [total_sum#97 DESC NULLS LAST]

(35) Project [codegen id : 18]
Output [5]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, rank_within_parent#134]
Input [6]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, _w0#132, rank_within_parent#134]

(36) TakeOrderedAndProject
Input [5]: [total_sum#97, i_category#79, i_class#77, lochierarchy#100, rank_within_parent#134]
Arguments: 100, [lochierarchy#100 DESC NULLS LAST, CASE WHEN (lochierarchy#100 = 0) THEN i_category#79 END ASC NULLS FIRST, rank_within_parent#134 ASC NULLS FIRST], [total_sum#97, i_category#79, i_class#77, lochierarchy#100, rank_within_parent#134]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#34 IN dynamicpruning#35
BroadcastExchange (40)
+- * Filter (39)
   +- * ColumnarToRow (38)
      +- Scan parquet default.date_dim (37)


(37) Scan parquet default.date_dim
Output [28]: [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, d_current_week#60, d_current_month#61, d_current_quarter#62, d_current_year#63]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(38) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, d_current_week#60, d_current_month#61, d_current_quarter#62, d_current_year#63]

(39) Filter [codegen id : 1]
Input [28]: [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, d_current_week#60, d_current_month#61, d_current_quarter#62, d_current_year#63]
Condition : (((isnotnull(d_month_seq#39) AND (d_month_seq#39 >= 1212)) AND (d_month_seq#39 <= 1223)) AND isnotnull(d_date_sk#36))

(40) BroadcastExchange
Input [28]: [d_date_sk#36, d_date_id#37, d_date#38, d_month_seq#39, d_week_seq#40, d_quarter_seq#41, d_year#42, d_dow#43, d_moy#44, d_dom#45, d_qoy#46, d_fy_year#47, d_fy_quarter_seq#48, d_fy_week_seq#49, d_day_name#50, d_quarter_name#51, d_holiday#52, d_weekend#53, d_following_holiday#54, d_first_dom#55, d_last_dom#56, d_same_day_ly#57, d_same_day_lq#58, d_current_day#59, d_current_week#60, d_current_month#61, d_current_quarter#62, d_current_year#63]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#135]


