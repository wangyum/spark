== Physical Plan ==
TakeOrderedAndProject (43)
+- * HashAggregate (42)
   +- Exchange (41)
      +- * HashAggregate (40)
         +- * Project (39)
            +- * BroadcastHashJoin Inner BuildRight (38)
               :- * Project (33)
               :  +- * BroadcastHashJoin Inner BuildRight (32)
               :     :- * Project (26)
               :     :  +- * BroadcastHashJoin LeftSemi BuildRight (25)
               :     :     :- * BroadcastHashJoin LeftSemi BuildRight (11)
               :     :     :  :- * Filter (3)
               :     :     :  :  +- * ColumnarToRow (2)
               :     :     :  :     +- Scan parquet default.customer (1)
               :     :     :  +- BroadcastExchange (10)
               :     :     :     +- * HashAggregate (9)
               :     :     :        +- * Project (8)
               :     :     :           +- * BroadcastHashJoin Inner BuildRight (7)
               :     :     :              :- * ColumnarToRow (5)
               :     :     :              :  +- Scan parquet default.store_sales (4)
               :     :     :              +- ReusedExchange (6)
               :     :     +- BroadcastExchange (24)
               :     :        +- * HashAggregate (23)
               :     :           +- Union (22)
               :     :              :- * Project (16)
               :     :              :  +- * BroadcastHashJoin Inner BuildRight (15)
               :     :              :     :- * ColumnarToRow (13)
               :     :              :     :  +- Scan parquet default.web_sales (12)
               :     :              :     +- ReusedExchange (14)
               :     :              +- * Project (21)
               :     :                 +- * BroadcastHashJoin Inner BuildRight (20)
               :     :                    :- * ColumnarToRow (18)
               :     :                    :  +- Scan parquet default.catalog_sales (17)
               :     :                    +- ReusedExchange (19)
               :     +- BroadcastExchange (31)
               :        +- * Project (30)
               :           +- * Filter (29)
               :              +- * ColumnarToRow (28)
               :                 +- Scan parquet default.customer_address (27)
               +- BroadcastExchange (37)
                  +- * Filter (36)
                     +- * ColumnarToRow (35)
                        +- Scan parquet default.customer_demographics (34)


(1) Scan parquet default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) ColumnarToRow [codegen id : 10]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(3) Filter [codegen id : 10]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : (isnotnull(c_current_addr_sk#3) AND isnotnull(c_current_cdemo_sk#2))

(4) Scan parquet default.store_sales
Output [2]: [ss_customer_sk#4, ss_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#5), dynamicpruningexpression(ss_sold_date_sk#5 IN dynamicpruning#6)]
ReadSchema: struct<ss_customer_sk:int>

(5) ColumnarToRow [codegen id : 2]
Input [2]: [ss_customer_sk#4, ss_sold_date_sk#5]

(6) ReusedExchange [Reuses operator id: 48]
Output [1]: [d_date_sk#7]

(7) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_sold_date_sk#5]
Right keys [1]: [d_date_sk#7]
Join condition: None

(8) Project [codegen id : 2]
Output [1]: [ss_customer_sk#4]
Input [3]: [ss_customer_sk#4, ss_sold_date_sk#5, d_date_sk#7]

(9) HashAggregate [codegen id : 2]
Input [1]: [ss_customer_sk#4]
Keys [1]: [ss_customer_sk#4]
Functions: []
Aggregate Attributes: []
Results [1]: [ss_customer_sk#4]

(10) BroadcastExchange
Input [1]: [ss_customer_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#8]

(11) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ss_customer_sk#4]
Join condition: None

(12) Scan parquet default.web_sales
Output [2]: [ws_bill_customer_sk#9, ws_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#10), dynamicpruningexpression(ws_sold_date_sk#10 IN dynamicpruning#6)]
ReadSchema: struct<ws_bill_customer_sk:int>

(13) ColumnarToRow [codegen id : 4]
Input [2]: [ws_bill_customer_sk#9, ws_sold_date_sk#10]

(14) ReusedExchange [Reuses operator id: 48]
Output [1]: [d_date_sk#11]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ws_sold_date_sk#10]
Right keys [1]: [d_date_sk#11]
Join condition: None

(16) Project [codegen id : 4]
Output [1]: [ws_bill_customer_sk#9 AS customer_sk#12]
Input [3]: [ws_bill_customer_sk#9, ws_sold_date_sk#10, d_date_sk#11]

(17) Scan parquet default.catalog_sales
Output [2]: [cs_ship_customer_sk#13, cs_sold_date_sk#14]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#14), dynamicpruningexpression(cs_sold_date_sk#14 IN dynamicpruning#6)]
ReadSchema: struct<cs_ship_customer_sk:int>

(18) ColumnarToRow [codegen id : 6]
Input [2]: [cs_ship_customer_sk#13, cs_sold_date_sk#14]

(19) ReusedExchange [Reuses operator id: 48]
Output [1]: [d_date_sk#15]

(20) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_sold_date_sk#14]
Right keys [1]: [d_date_sk#15]
Join condition: None

(21) Project [codegen id : 6]
Output [1]: [cs_ship_customer_sk#13 AS customer_sk#16]
Input [3]: [cs_ship_customer_sk#13, cs_sold_date_sk#14, d_date_sk#15]

(22) Union

(23) HashAggregate [codegen id : 7]
Input [1]: [customer_sk#12]
Keys [1]: [customer_sk#12]
Functions: []
Aggregate Attributes: []
Results [1]: [customer_sk#12]

(24) BroadcastExchange
Input [1]: [customer_sk#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#17]

(25) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [customer_sk#12]
Join condition: None

(26) Project [codegen id : 10]
Output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(27) Scan parquet default.customer_address
Output [2]: [ca_address_sk#18, ca_county#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(28) ColumnarToRow [codegen id : 8]
Input [2]: [ca_address_sk#18, ca_county#19]

(29) Filter [codegen id : 8]
Input [2]: [ca_address_sk#18, ca_county#19]
Condition : (ca_county#19 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#18))

(30) Project [codegen id : 8]
Output [1]: [ca_address_sk#18]
Input [2]: [ca_address_sk#18, ca_county#19]

(31) BroadcastExchange
Input [1]: [ca_address_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#20]

(32) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_current_addr_sk#3]
Right keys [1]: [ca_address_sk#18]
Join condition: None

(33) Project [codegen id : 10]
Output [1]: [c_current_cdemo_sk#2]
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#18]

(34) Scan parquet default.customer_demographics
Output [9]: [cd_demo_sk#21, cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(35) ColumnarToRow [codegen id : 9]
Input [9]: [cd_demo_sk#21, cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]

(36) Filter [codegen id : 9]
Input [9]: [cd_demo_sk#21, cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Condition : isnotnull(cd_demo_sk#21)

(37) BroadcastExchange
Input [9]: [cd_demo_sk#21, cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#30]

(38) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [c_current_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#21]
Join condition: None

(39) Project [codegen id : 10]
Output [8]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Input [10]: [c_current_cdemo_sk#2, cd_demo_sk#21, cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]

(40) HashAggregate [codegen id : 10]
Input [8]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Keys [8]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#31]
Results [9]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29, count#32]

(41) Exchange
Input [9]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29, count#32]
Arguments: hashpartitioning(cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29, 5), ENSURE_REQUIREMENTS, [id=#33]

(42) HashAggregate [codegen id : 11]
Input [9]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29, count#32]
Keys [8]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cd_purchase_estimate#25, cd_credit_rating#26, cd_dep_count#27, cd_dep_employed_count#28, cd_dep_college_count#29]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#34]
Results [14]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, count(1)#34 AS cnt1#35, cd_purchase_estimate#25, count(1)#34 AS cnt2#36, cd_credit_rating#26, count(1)#34 AS cnt3#37, cd_dep_count#27, count(1)#34 AS cnt4#38, cd_dep_employed_count#28, count(1)#34 AS cnt5#39, cd_dep_college_count#29, count(1)#34 AS cnt6#40]

(43) TakeOrderedAndProject
Input [14]: [cd_gender#22, cd_marital_status#23, cd_education_status#24, cnt1#35, cd_purchase_estimate#25, cnt2#36, cd_credit_rating#26, cnt3#37, cd_dep_count#27, cnt4#38, cd_dep_employed_count#28, cnt5#39, cd_dep_college_count#29, cnt6#40]
Arguments: 100, [cd_gender#22 ASC NULLS FIRST, cd_marital_status#23 ASC NULLS FIRST, cd_education_status#24 ASC NULLS FIRST, cd_purchase_estimate#25 ASC NULLS FIRST, cd_credit_rating#26 ASC NULLS FIRST, cd_dep_count#27 ASC NULLS FIRST, cd_dep_employed_count#28 ASC NULLS FIRST, cd_dep_college_count#29 ASC NULLS FIRST], [cd_gender#22, cd_marital_status#23, cd_education_status#24, cnt1#35, cd_purchase_estimate#25, cnt2#36, cd_credit_rating#26, cnt3#37, cd_dep_count#27, cnt4#38, cd_dep_employed_count#28, cnt5#39, cd_dep_college_count#29, cnt6#40]

===== Subqueries =====

Subquery:1 Hosting operator id = 4 Hosting Expression = ss_sold_date_sk#5 IN dynamicpruning#6
BroadcastExchange (48)
+- * Project (47)
   +- * Filter (46)
      +- * ColumnarToRow (45)
         +- Scan parquet default.date_dim (44)


(44) Scan parquet default.date_dim
Output [3]: [d_date_sk#7, d_year#41, d_moy#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(45) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#7, d_year#41, d_moy#42]

(46) Filter [codegen id : 1]
Input [3]: [d_date_sk#7, d_year#41, d_moy#42]
Condition : (((((isnotnull(d_year#41) AND isnotnull(d_moy#42)) AND (d_year#41 = 2002)) AND (d_moy#42 >= 4)) AND (d_moy#42 <= 7)) AND isnotnull(d_date_sk#7))

(47) Project [codegen id : 1]
Output [1]: [d_date_sk#7]
Input [3]: [d_date_sk#7, d_year#41, d_moy#42]

(48) BroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#43]

Subquery:2 Hosting operator id = 12 Hosting Expression = ws_sold_date_sk#10 IN dynamicpruning#6

Subquery:3 Hosting operator id = 17 Hosting Expression = cs_sold_date_sk#14 IN dynamicpruning#6


