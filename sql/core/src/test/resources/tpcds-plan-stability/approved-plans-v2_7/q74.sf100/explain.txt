== Physical Plan ==
TakeOrderedAndProject (135)
+- * Project (134)
   +- * SortMergeJoin Inner (133)
      :- * Project (103)
      :  +- * SortMergeJoin Inner (102)
      :     :- * SortMergeJoin Inner (67)
      :     :  :- * Sort (37)
      :     :  :  +- Exchange (36)
      :     :  :     +- Union (35)
      :     :  :        :- * Filter (20)
      :     :  :        :  +- * HashAggregate (19)
      :     :  :        :     +- Exchange (18)
      :     :  :        :        +- * HashAggregate (17)
      :     :  :        :           +- * Project (16)
      :     :  :        :              +- * BroadcastHashJoin Inner BuildRight (15)
      :     :  :        :                 :- * Project (13)
      :     :  :        :                 :  +- * HashAggregate (12)
      :     :  :        :                 :     +- * SortMergeJoin Inner (11)
      :     :  :        :                 :        :- * Sort (5)
      :     :  :        :                 :        :  +- Exchange (4)
      :     :  :        :                 :        :     +- * Filter (3)
      :     :  :        :                 :        :        +- * ColumnarToRow (2)
      :     :  :        :                 :        :           +- Scan parquet default.customer (1)
      :     :  :        :                 :        +- * Sort (10)
      :     :  :        :                 :           +- Exchange (9)
      :     :  :        :                 :              +- * Filter (8)
      :     :  :        :                 :                 +- * ColumnarToRow (7)
      :     :  :        :                 :                    +- Scan parquet default.store_sales (6)
      :     :  :        :                 +- ReusedExchange (14)
      :     :  :        +- * Filter (34)
      :     :  :           +- * HashAggregate (33)
      :     :  :              +- Exchange (32)
      :     :  :                 +- * HashAggregate (31)
      :     :  :                    +- * Project (30)
      :     :  :                       +- * BroadcastHashJoin Inner BuildLeft (29)
      :     :  :                          :- BroadcastExchange (24)
      :     :  :                          :  +- * Project (23)
      :     :  :                          :     +- * HashAggregate (22)
      :     :  :                          :        +- * LocalTableScan (21)
      :     :  :                          +- * HashAggregate (28)
      :     :  :                             +- * Filter (27)
      :     :  :                                +- * ColumnarToRow (26)
      :     :  :                                   +- Scan parquet default.date_dim (25)
      :     :  +- * Sort (66)
      :     :     +- Exchange (65)
      :     :        +- Union (64)
      :     :           :- * HashAggregate (53)
      :     :           :  +- Exchange (52)
      :     :           :     +- * HashAggregate (51)
      :     :           :        +- * Project (50)
      :     :           :           +- * BroadcastHashJoin Inner BuildRight (49)
      :     :           :              :- * Project (47)
      :     :           :              :  +- * HashAggregate (46)
      :     :           :              :     +- * SortMergeJoin Inner (45)
      :     :           :              :        :- * Sort (39)
      :     :           :              :        :  +- ReusedExchange (38)
      :     :           :              :        +- * Sort (44)
      :     :           :              :           +- Exchange (43)
      :     :           :              :              +- * Filter (42)
      :     :           :              :                 +- * ColumnarToRow (41)
      :     :           :              :                    +- Scan parquet default.store_sales (40)
      :     :           :              +- ReusedExchange (48)
      :     :           +- * HashAggregate (63)
      :     :              +- Exchange (62)
      :     :                 +- * HashAggregate (61)
      :     :                    +- * Project (60)
      :     :                       +- * BroadcastHashJoin Inner BuildLeft (59)
      :     :                          :- ReusedExchange (54)
      :     :                          +- * HashAggregate (58)
      :     :                             +- * Filter (57)
      :     :                                +- * ColumnarToRow (56)
      :     :                                   +- Scan parquet default.date_dim (55)
      :     +- * Sort (101)
      :        +- Exchange (100)
      :           +- Union (99)
      :              :- * Filter (81)
      :              :  +- * HashAggregate (80)
      :              :     +- Exchange (79)
      :              :        +- * HashAggregate (78)
      :              :           +- * Project (77)
      :              :              +- * BroadcastHashJoin Inner BuildLeft (76)
      :              :                 :- BroadcastExchange (71)
      :              :                 :  +- * Project (70)
      :              :                 :     +- * HashAggregate (69)
      :              :                 :        +- * LocalTableScan (68)
      :              :                 +- * HashAggregate (75)
      :              :                    +- * Filter (74)
      :              :                       +- * ColumnarToRow (73)
      :              :                          +- Scan parquet default.date_dim (72)
      :              +- * Filter (98)
      :                 +- * HashAggregate (97)
      :                    +- Exchange (96)
      :                       +- * HashAggregate (95)
      :                          +- * Project (94)
      :                             +- * BroadcastHashJoin Inner BuildRight (93)
      :                                :- * Project (91)
      :                                :  +- * HashAggregate (90)
      :                                :     +- * SortMergeJoin Inner (89)
      :                                :        :- * Sort (83)
      :                                :        :  +- ReusedExchange (82)
      :                                :        +- * Sort (88)
      :                                :           +- Exchange (87)
      :                                :              +- * Filter (86)
      :                                :                 +- * ColumnarToRow (85)
      :                                :                    +- Scan parquet default.web_sales (84)
      :                                +- ReusedExchange (92)
      +- * Sort (132)
         +- Exchange (131)
            +- Union (130)
               :- * HashAggregate (113)
               :  +- Exchange (112)
               :     +- * HashAggregate (111)
               :        +- * Project (110)
               :           +- * BroadcastHashJoin Inner BuildLeft (109)
               :              :- ReusedExchange (104)
               :              +- * HashAggregate (108)
               :                 +- * Filter (107)
               :                    +- * ColumnarToRow (106)
               :                       +- Scan parquet default.date_dim (105)
               +- * HashAggregate (129)
                  +- Exchange (128)
                     +- * HashAggregate (127)
                        +- * Project (126)
                           +- * BroadcastHashJoin Inner BuildRight (125)
                              :- * Project (123)
                              :  +- * HashAggregate (122)
                              :     +- * SortMergeJoin Inner (121)
                              :        :- * Sort (115)
                              :        :  +- ReusedExchange (114)
                              :        +- * Sort (120)
                              :           +- Exchange (119)
                              :              +- * Filter (118)
                              :                 +- * ColumnarToRow (117)
                              :                    +- Scan parquet default.web_sales (116)
                              +- ReusedExchange (124)


(1) Scan parquet default.customer
Output [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(2) ColumnarToRow [codegen id : 1]
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]

(3) Filter [codegen id : 1]
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(c_customer_id#2))

(4) Exchange
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Arguments: hashpartitioning(c_customer_sk#1, 5), ENSURE_REQUIREMENTS, [id=#19]

(5) Sort [codegen id : 2]
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Arguments: [c_customer_sk#1 ASC NULLS FIRST], false, 0

(6) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#20, ss_item_sk#21, ss_customer_sk#22, ss_cdemo_sk#23, ss_hdemo_sk#24, ss_addr_sk#25, ss_store_sk#26, ss_promo_sk#27, ss_ticket_number#28, ss_quantity#29, ss_wholesale_cost#30, ss_list_price#31, ss_sales_price#32, ss_ext_discount_amt#33, ss_ext_sales_price#34, ss_ext_wholesale_cost#35, ss_ext_list_price#36, ss_ext_tax#37, ss_coupon_amt#38, ss_net_paid#39, ss_net_paid_inc_tax#40, ss_net_profit#41, ss_sold_date_sk#42]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#42), dynamicpruningexpression(ss_sold_date_sk#42 IN dynamicpruning#43)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(7) ColumnarToRow [codegen id : 3]
Input [23]: [ss_sold_time_sk#20, ss_item_sk#21, ss_customer_sk#22, ss_cdemo_sk#23, ss_hdemo_sk#24, ss_addr_sk#25, ss_store_sk#26, ss_promo_sk#27, ss_ticket_number#28, ss_quantity#29, ss_wholesale_cost#30, ss_list_price#31, ss_sales_price#32, ss_ext_discount_amt#33, ss_ext_sales_price#34, ss_ext_wholesale_cost#35, ss_ext_list_price#36, ss_ext_tax#37, ss_coupon_amt#38, ss_net_paid#39, ss_net_paid_inc_tax#40, ss_net_profit#41, ss_sold_date_sk#42]

(8) Filter [codegen id : 3]
Input [23]: [ss_sold_time_sk#20, ss_item_sk#21, ss_customer_sk#22, ss_cdemo_sk#23, ss_hdemo_sk#24, ss_addr_sk#25, ss_store_sk#26, ss_promo_sk#27, ss_ticket_number#28, ss_quantity#29, ss_wholesale_cost#30, ss_list_price#31, ss_sales_price#32, ss_ext_discount_amt#33, ss_ext_sales_price#34, ss_ext_wholesale_cost#35, ss_ext_list_price#36, ss_ext_tax#37, ss_coupon_amt#38, ss_net_paid#39, ss_net_paid_inc_tax#40, ss_net_profit#41, ss_sold_date_sk#42]
Condition : isnotnull(ss_customer_sk#22)

(9) Exchange
Input [23]: [ss_sold_time_sk#20, ss_item_sk#21, ss_customer_sk#22, ss_cdemo_sk#23, ss_hdemo_sk#24, ss_addr_sk#25, ss_store_sk#26, ss_promo_sk#27, ss_ticket_number#28, ss_quantity#29, ss_wholesale_cost#30, ss_list_price#31, ss_sales_price#32, ss_ext_discount_amt#33, ss_ext_sales_price#34, ss_ext_wholesale_cost#35, ss_ext_list_price#36, ss_ext_tax#37, ss_coupon_amt#38, ss_net_paid#39, ss_net_paid_inc_tax#40, ss_net_profit#41, ss_sold_date_sk#42]
Arguments: hashpartitioning(ss_customer_sk#22, 5), ENSURE_REQUIREMENTS, [id=#44]

(10) Sort [codegen id : 4]
Input [23]: [ss_sold_time_sk#20, ss_item_sk#21, ss_customer_sk#22, ss_cdemo_sk#23, ss_hdemo_sk#24, ss_addr_sk#25, ss_store_sk#26, ss_promo_sk#27, ss_ticket_number#28, ss_quantity#29, ss_wholesale_cost#30, ss_list_price#31, ss_sales_price#32, ss_ext_discount_amt#33, ss_ext_sales_price#34, ss_ext_wholesale_cost#35, ss_ext_list_price#36, ss_ext_tax#37, ss_coupon_amt#38, ss_net_paid#39, ss_net_paid_inc_tax#40, ss_net_profit#41, ss_sold_date_sk#42]
Arguments: [ss_customer_sk#22 ASC NULLS FIRST], false, 0

(11) SortMergeJoin [codegen id : 6]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ss_customer_sk#22]
Join condition: None

(12) HashAggregate [codegen id : 6]
Input [41]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18, ss_sold_time_sk#20, ss_item_sk#21, ss_customer_sk#22, ss_cdemo_sk#23, ss_hdemo_sk#24, ss_addr_sk#25, ss_store_sk#26, ss_promo_sk#27, ss_ticket_number#28, ss_quantity#29, ss_wholesale_cost#30, ss_list_price#31, ss_sales_price#32, ss_ext_discount_amt#33, ss_ext_sales_price#34, ss_ext_wholesale_cost#35, ss_ext_list_price#36, ss_ext_tax#37, ss_coupon_amt#38, ss_net_paid#39, ss_net_paid_inc_tax#40, ss_net_profit#41, ss_sold_date_sk#42]
Keys [4]: [ss_sold_date_sk#42, c_customer_id#2, c_first_name#9, c_last_name#10]
Functions [1]: [partial_sum(UnscaledValue(ss_net_paid#39))]
Aggregate Attributes [1]: [sum#45]
Results [5]: [ss_sold_date_sk#42, c_customer_id#2, c_first_name#9, c_last_name#10, sum#46]

(13) Project [codegen id : 6]
Output [5]: [ss_sold_date_sk#42, c_customer_id#2, c_first_name#9, c_last_name#10, sum#46 AS _pushedexpression#47]
Input [5]: [ss_sold_date_sk#42, c_customer_id#2, c_first_name#9, c_last_name#10, sum#46]

(14) ReusedExchange [Reuses operator id: 140]
Output [3]: [d_date_sk#48, d_year#49, d_year#49]

(15) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#42]
Right keys [1]: [d_date_sk#48]
Join condition: None

(16) Project [codegen id : 6]
Output [6]: [c_customer_id#2, c_first_name#9, c_last_name#10, _pushedexpression#50, d_year#49, d_year#49]
Input [8]: [ss_sold_date_sk#42, c_customer_id#2, c_first_name#9, c_last_name#10, _pushedexpression#47, d_date_sk#48, d_year#49, d_year#49]

(17) HashAggregate [codegen id : 6]
Input [6]: [c_customer_id#2, c_first_name#9, c_last_name#10, _pushedexpression#50, d_year#49, d_year#49]
Keys [4]: [c_customer_id#2, c_first_name#9, c_last_name#10, d_year#49]
Functions [1]: [partial_sum(_pushedexpression#50)]
Aggregate Attributes [2]: [sum#51, isEmpty#52]
Results [6]: [c_customer_id#2, c_first_name#9, c_last_name#10, d_year#49, sum#53, isEmpty#54]

(18) Exchange
Input [6]: [c_customer_id#2, c_first_name#9, c_last_name#10, d_year#49, sum#53, isEmpty#54]
Arguments: hashpartitioning(c_customer_id#2, c_first_name#9, c_last_name#10, d_year#49, 5), ENSURE_REQUIREMENTS, [id=#55]

(19) HashAggregate [codegen id : 7]
Input [6]: [c_customer_id#2, c_first_name#9, c_last_name#10, d_year#49, sum#53, isEmpty#54]
Keys [4]: [c_customer_id#2, c_first_name#9, c_last_name#10, d_year#49]
Functions [1]: [sum(_pushedexpression#50)]
Aggregate Attributes [1]: [sum(_pushedexpression#50)#56]
Results [2]: [c_customer_id#2 AS customer_id#57, cast(sum(_pushedexpression#50)#56 as decimal(17,2)) AS year_total#58]

(20) Filter [codegen id : 7]
Input [2]: [customer_id#57, year_total#58]
Condition : (isnotnull(year_total#58) AND (year_total#58 > 0.00))

(21) LocalTableScan [codegen id : 8]
Output [52]: [c_customer_sk#59, c_customer_id#60, c_current_cdemo_sk#61, c_current_hdemo_sk#62, c_current_addr_sk#63, c_first_shipto_date_sk#64, c_first_sales_date_sk#65, c_salutation#66, c_first_name#67, c_last_name#68, c_preferred_cust_flag#69, c_birth_day#70, c_birth_month#71, c_birth_year#72, c_birth_country#73, c_login#74, c_email_address#75, c_last_review_date#76, ws_sold_time_sk#77, ws_ship_date_sk#78, ws_item_sk#79, ws_bill_customer_sk#80, ws_bill_cdemo_sk#81, ws_bill_hdemo_sk#82, ws_bill_addr_sk#83, ws_ship_customer_sk#84, ws_ship_cdemo_sk#85, ws_ship_hdemo_sk#86, ws_ship_addr_sk#87, ws_web_page_sk#88, ws_web_site_sk#89, ws_ship_mode_sk#90, ws_warehouse_sk#91, ws_promo_sk#92, ws_order_number#93, ws_quantity#94, ws_wholesale_cost#95, ws_list_price#96, ws_sales_price#97, ws_ext_discount_amt#98, ws_ext_sales_price#99, ws_ext_wholesale_cost#100, ws_ext_list_price#101, ws_ext_tax#102, ws_coupon_amt#103, ws_ext_ship_cost#104, ws_net_paid#105, ws_net_paid_inc_tax#106, ws_net_paid_inc_ship#107, ws_net_paid_inc_ship_tax#108, ws_net_profit#109, ws_sold_date_sk#110]
Arguments: <empty>, [c_customer_sk#59, c_customer_id#60, c_current_cdemo_sk#61, c_current_hdemo_sk#62, c_current_addr_sk#63, c_first_shipto_date_sk#64, c_first_sales_date_sk#65, c_salutation#66, c_first_name#67, c_last_name#68, c_preferred_cust_flag#69, c_birth_day#70, c_birth_month#71, c_birth_year#72, c_birth_country#73, c_login#74, c_email_address#75, c_last_review_date#76, ws_sold_time_sk#77, ws_ship_date_sk#78, ws_item_sk#79, ws_bill_customer_sk#80, ws_bill_cdemo_sk#81, ws_bill_hdemo_sk#82, ws_bill_addr_sk#83, ws_ship_customer_sk#84, ws_ship_cdemo_sk#85, ws_ship_hdemo_sk#86, ws_ship_addr_sk#87, ws_web_page_sk#88, ws_web_site_sk#89, ws_ship_mode_sk#90, ws_warehouse_sk#91, ws_promo_sk#92, ws_order_number#93, ws_quantity#94, ws_wholesale_cost#95, ws_list_price#96, ws_sales_price#97, ws_ext_discount_amt#98, ws_ext_sales_price#99, ws_ext_wholesale_cost#100, ws_ext_list_price#101, ws_ext_tax#102, ws_coupon_amt#103, ws_ext_ship_cost#104, ws_net_paid#105, ws_net_paid_inc_tax#106, ws_net_paid_inc_ship#107, ws_net_paid_inc_ship_tax#108, ws_net_profit#109, ws_sold_date_sk#110]

(22) HashAggregate [codegen id : 8]
Input [52]: [c_customer_sk#59, c_customer_id#60, c_current_cdemo_sk#61, c_current_hdemo_sk#62, c_current_addr_sk#63, c_first_shipto_date_sk#64, c_first_sales_date_sk#65, c_salutation#66, c_first_name#67, c_last_name#68, c_preferred_cust_flag#69, c_birth_day#70, c_birth_month#71, c_birth_year#72, c_birth_country#73, c_login#74, c_email_address#75, c_last_review_date#76, ws_sold_time_sk#77, ws_ship_date_sk#78, ws_item_sk#79, ws_bill_customer_sk#80, ws_bill_cdemo_sk#81, ws_bill_hdemo_sk#82, ws_bill_addr_sk#83, ws_ship_customer_sk#84, ws_ship_cdemo_sk#85, ws_ship_hdemo_sk#86, ws_ship_addr_sk#87, ws_web_page_sk#88, ws_web_site_sk#89, ws_ship_mode_sk#90, ws_warehouse_sk#91, ws_promo_sk#92, ws_order_number#93, ws_quantity#94, ws_wholesale_cost#95, ws_list_price#96, ws_sales_price#97, ws_ext_discount_amt#98, ws_ext_sales_price#99, ws_ext_wholesale_cost#100, ws_ext_list_price#101, ws_ext_tax#102, ws_coupon_amt#103, ws_ext_ship_cost#104, ws_net_paid#105, ws_net_paid_inc_tax#106, ws_net_paid_inc_ship#107, ws_net_paid_inc_ship_tax#108, ws_net_profit#109, ws_sold_date_sk#110]
Keys [4]: [ws_sold_date_sk#110, c_customer_id#60, c_first_name#67, c_last_name#68]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#105))]
Aggregate Attributes [1]: [sum#111]
Results [5]: [ws_sold_date_sk#110, c_customer_id#60, c_first_name#67, c_last_name#68, sum#112]

(23) Project [codegen id : 8]
Output [5]: [ws_sold_date_sk#110, c_customer_id#60, c_first_name#67, c_last_name#68, sum#112 AS _pushedexpression#113]
Input [5]: [ws_sold_date_sk#110, c_customer_id#60, c_first_name#67, c_last_name#68, sum#112]

(24) BroadcastExchange
Input [5]: [ws_sold_date_sk#110, c_customer_id#60, c_first_name#67, c_last_name#68, _pushedexpression#113]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#114]

(25) Scan parquet default.date_dim
Output [28]: [d_date_sk#115, d_date_id#116, d_date#117, d_month_seq#118, d_week_seq#119, d_quarter_seq#120, d_year#121, d_dow#122, d_moy#123, d_dom#124, d_qoy#125, d_fy_year#126, d_fy_quarter_seq#127, d_fy_week_seq#128, d_day_name#129, d_quarter_name#130, d_holiday#131, d_weekend#132, d_following_holiday#133, d_first_dom#134, d_last_dom#135, d_same_day_ly#136, d_same_day_lq#137, d_current_day#138, d_current_week#139, d_current_month#140, d_current_quarter#141, d_current_year#142]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2001,2002]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(26) ColumnarToRow [codegen id : 8]
Input [28]: [d_date_sk#115, d_date_id#116, d_date#117, d_month_seq#118, d_week_seq#119, d_quarter_seq#120, d_year#121, d_dow#122, d_moy#123, d_dom#124, d_qoy#125, d_fy_year#126, d_fy_quarter_seq#127, d_fy_week_seq#128, d_day_name#129, d_quarter_name#130, d_holiday#131, d_weekend#132, d_following_holiday#133, d_first_dom#134, d_last_dom#135, d_same_day_ly#136, d_same_day_lq#137, d_current_day#138, d_current_week#139, d_current_month#140, d_current_quarter#141, d_current_year#142]

(27) Filter [codegen id : 8]
Input [28]: [d_date_sk#115, d_date_id#116, d_date#117, d_month_seq#118, d_week_seq#119, d_quarter_seq#120, d_year#121, d_dow#122, d_moy#123, d_dom#124, d_qoy#125, d_fy_year#126, d_fy_quarter_seq#127, d_fy_week_seq#128, d_day_name#129, d_quarter_name#130, d_holiday#131, d_weekend#132, d_following_holiday#133, d_first_dom#134, d_last_dom#135, d_same_day_ly#136, d_same_day_lq#137, d_current_day#138, d_current_week#139, d_current_month#140, d_current_quarter#141, d_current_year#142]
Condition : (((isnotnull(d_year#121) AND (d_year#121 = 2001)) AND d_year#121 IN (2001,2002)) AND isnotnull(d_date_sk#115))

(28) HashAggregate [codegen id : 8]
Input [28]: [d_date_sk#115, d_date_id#116, d_date#117, d_month_seq#118, d_week_seq#119, d_quarter_seq#120, d_year#121, d_dow#122, d_moy#123, d_dom#124, d_qoy#125, d_fy_year#126, d_fy_quarter_seq#127, d_fy_week_seq#128, d_day_name#129, d_quarter_name#130, d_holiday#131, d_weekend#132, d_following_holiday#133, d_first_dom#134, d_last_dom#135, d_same_day_ly#136, d_same_day_lq#137, d_current_day#138, d_current_week#139, d_current_month#140, d_current_quarter#141, d_current_year#142]
Keys [3]: [d_date_sk#115, d_year#121, d_year#121]
Functions: []
Aggregate Attributes: []
Results [3]: [d_date_sk#115, d_year#121, d_year#121]

(29) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [ws_sold_date_sk#110]
Right keys [1]: [d_date_sk#115]
Join condition: None

(30) Project [codegen id : 9]
Output [6]: [c_customer_id#60, c_first_name#67, c_last_name#68, _pushedexpression#143, d_year#121, d_year#121]
Input [8]: [ws_sold_date_sk#110, c_customer_id#60, c_first_name#67, c_last_name#68, _pushedexpression#113, d_date_sk#115, d_year#121, d_year#121]

(31) HashAggregate [codegen id : 9]
Input [6]: [c_customer_id#60, c_first_name#67, c_last_name#68, _pushedexpression#143, d_year#121, d_year#121]
Keys [4]: [c_customer_id#60, c_first_name#67, c_last_name#68, d_year#121]
Functions [1]: [partial_sum(_pushedexpression#143)]
Aggregate Attributes [2]: [sum#144, isEmpty#145]
Results [6]: [c_customer_id#60, c_first_name#67, c_last_name#68, d_year#121, sum#146, isEmpty#147]

(32) Exchange
Input [6]: [c_customer_id#60, c_first_name#67, c_last_name#68, d_year#121, sum#146, isEmpty#147]
Arguments: hashpartitioning(c_customer_id#60, c_first_name#67, c_last_name#68, d_year#121, 5), ENSURE_REQUIREMENTS, [id=#148]

(33) HashAggregate [codegen id : 10]
Input [6]: [c_customer_id#60, c_first_name#67, c_last_name#68, d_year#121, sum#146, isEmpty#147]
Keys [4]: [c_customer_id#60, c_first_name#67, c_last_name#68, d_year#121]
Functions [1]: [sum(_pushedexpression#143)]
Aggregate Attributes [1]: [sum(_pushedexpression#143)#149]
Results [2]: [c_customer_id#60 AS customer_id#150, cast(sum(_pushedexpression#143)#149 as decimal(17,2)) AS year_total#151]

(34) Filter [codegen id : 10]
Input [2]: [customer_id#150, year_total#151]
Condition : (isnotnull(year_total#151) AND (year_total#151 > 0.00))

(35) Union

(36) Exchange
Input [2]: [customer_id#57, year_total#58]
Arguments: hashpartitioning(customer_id#57, 5), ENSURE_REQUIREMENTS, [id=#152]

(37) Sort [codegen id : 11]
Input [2]: [customer_id#57, year_total#58]
Arguments: [customer_id#57 ASC NULLS FIRST], false, 0

(38) ReusedExchange [Reuses operator id: 4]
Output [18]: [c_customer_sk#153, c_customer_id#154, c_current_cdemo_sk#155, c_current_hdemo_sk#156, c_current_addr_sk#157, c_first_shipto_date_sk#158, c_first_sales_date_sk#159, c_salutation#160, c_first_name#161, c_last_name#162, c_preferred_cust_flag#163, c_birth_day#164, c_birth_month#165, c_birth_year#166, c_birth_country#167, c_login#168, c_email_address#169, c_last_review_date#170]

(39) Sort [codegen id : 13]
Input [18]: [c_customer_sk#153, c_customer_id#154, c_current_cdemo_sk#155, c_current_hdemo_sk#156, c_current_addr_sk#157, c_first_shipto_date_sk#158, c_first_sales_date_sk#159, c_salutation#160, c_first_name#161, c_last_name#162, c_preferred_cust_flag#163, c_birth_day#164, c_birth_month#165, c_birth_year#166, c_birth_country#167, c_login#168, c_email_address#169, c_last_review_date#170]
Arguments: [c_customer_sk#153 ASC NULLS FIRST], false, 0

(40) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#171, ss_item_sk#172, ss_customer_sk#173, ss_cdemo_sk#174, ss_hdemo_sk#175, ss_addr_sk#176, ss_store_sk#177, ss_promo_sk#178, ss_ticket_number#179, ss_quantity#180, ss_wholesale_cost#181, ss_list_price#182, ss_sales_price#183, ss_ext_discount_amt#184, ss_ext_sales_price#185, ss_ext_wholesale_cost#186, ss_ext_list_price#187, ss_ext_tax#188, ss_coupon_amt#189, ss_net_paid#190, ss_net_paid_inc_tax#191, ss_net_profit#192, ss_sold_date_sk#193]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#193), dynamicpruningexpression(ss_sold_date_sk#193 IN dynamicpruning#194)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(41) ColumnarToRow [codegen id : 14]
Input [23]: [ss_sold_time_sk#171, ss_item_sk#172, ss_customer_sk#173, ss_cdemo_sk#174, ss_hdemo_sk#175, ss_addr_sk#176, ss_store_sk#177, ss_promo_sk#178, ss_ticket_number#179, ss_quantity#180, ss_wholesale_cost#181, ss_list_price#182, ss_sales_price#183, ss_ext_discount_amt#184, ss_ext_sales_price#185, ss_ext_wholesale_cost#186, ss_ext_list_price#187, ss_ext_tax#188, ss_coupon_amt#189, ss_net_paid#190, ss_net_paid_inc_tax#191, ss_net_profit#192, ss_sold_date_sk#193]

(42) Filter [codegen id : 14]
Input [23]: [ss_sold_time_sk#171, ss_item_sk#172, ss_customer_sk#173, ss_cdemo_sk#174, ss_hdemo_sk#175, ss_addr_sk#176, ss_store_sk#177, ss_promo_sk#178, ss_ticket_number#179, ss_quantity#180, ss_wholesale_cost#181, ss_list_price#182, ss_sales_price#183, ss_ext_discount_amt#184, ss_ext_sales_price#185, ss_ext_wholesale_cost#186, ss_ext_list_price#187, ss_ext_tax#188, ss_coupon_amt#189, ss_net_paid#190, ss_net_paid_inc_tax#191, ss_net_profit#192, ss_sold_date_sk#193]
Condition : isnotnull(ss_customer_sk#173)

(43) Exchange
Input [23]: [ss_sold_time_sk#171, ss_item_sk#172, ss_customer_sk#173, ss_cdemo_sk#174, ss_hdemo_sk#175, ss_addr_sk#176, ss_store_sk#177, ss_promo_sk#178, ss_ticket_number#179, ss_quantity#180, ss_wholesale_cost#181, ss_list_price#182, ss_sales_price#183, ss_ext_discount_amt#184, ss_ext_sales_price#185, ss_ext_wholesale_cost#186, ss_ext_list_price#187, ss_ext_tax#188, ss_coupon_amt#189, ss_net_paid#190, ss_net_paid_inc_tax#191, ss_net_profit#192, ss_sold_date_sk#193]
Arguments: hashpartitioning(ss_customer_sk#173, 5), ENSURE_REQUIREMENTS, [id=#195]

(44) Sort [codegen id : 15]
Input [23]: [ss_sold_time_sk#171, ss_item_sk#172, ss_customer_sk#173, ss_cdemo_sk#174, ss_hdemo_sk#175, ss_addr_sk#176, ss_store_sk#177, ss_promo_sk#178, ss_ticket_number#179, ss_quantity#180, ss_wholesale_cost#181, ss_list_price#182, ss_sales_price#183, ss_ext_discount_amt#184, ss_ext_sales_price#185, ss_ext_wholesale_cost#186, ss_ext_list_price#187, ss_ext_tax#188, ss_coupon_amt#189, ss_net_paid#190, ss_net_paid_inc_tax#191, ss_net_profit#192, ss_sold_date_sk#193]
Arguments: [ss_customer_sk#173 ASC NULLS FIRST], false, 0

(45) SortMergeJoin [codegen id : 17]
Left keys [1]: [c_customer_sk#153]
Right keys [1]: [ss_customer_sk#173]
Join condition: None

(46) HashAggregate [codegen id : 17]
Input [41]: [c_customer_sk#153, c_customer_id#154, c_current_cdemo_sk#155, c_current_hdemo_sk#156, c_current_addr_sk#157, c_first_shipto_date_sk#158, c_first_sales_date_sk#159, c_salutation#160, c_first_name#161, c_last_name#162, c_preferred_cust_flag#163, c_birth_day#164, c_birth_month#165, c_birth_year#166, c_birth_country#167, c_login#168, c_email_address#169, c_last_review_date#170, ss_sold_time_sk#171, ss_item_sk#172, ss_customer_sk#173, ss_cdemo_sk#174, ss_hdemo_sk#175, ss_addr_sk#176, ss_store_sk#177, ss_promo_sk#178, ss_ticket_number#179, ss_quantity#180, ss_wholesale_cost#181, ss_list_price#182, ss_sales_price#183, ss_ext_discount_amt#184, ss_ext_sales_price#185, ss_ext_wholesale_cost#186, ss_ext_list_price#187, ss_ext_tax#188, ss_coupon_amt#189, ss_net_paid#190, ss_net_paid_inc_tax#191, ss_net_profit#192, ss_sold_date_sk#193]
Keys [4]: [ss_sold_date_sk#193, c_customer_id#154, c_first_name#161, c_last_name#162]
Functions [1]: [partial_sum(UnscaledValue(ss_net_paid#190))]
Aggregate Attributes [1]: [sum#196]
Results [5]: [ss_sold_date_sk#193, c_customer_id#154, c_first_name#161, c_last_name#162, sum#197]

(47) Project [codegen id : 17]
Output [5]: [ss_sold_date_sk#193, c_customer_id#154, c_first_name#161, c_last_name#162, sum#197 AS _pushedexpression#198]
Input [5]: [ss_sold_date_sk#193, c_customer_id#154, c_first_name#161, c_last_name#162, sum#197]

(48) ReusedExchange [Reuses operator id: 145]
Output [3]: [d_date_sk#199, d_year#200, d_year#200]

(49) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ss_sold_date_sk#193]
Right keys [1]: [d_date_sk#199]
Join condition: None

(50) Project [codegen id : 17]
Output [6]: [c_customer_id#154, c_first_name#161, c_last_name#162, _pushedexpression#201, d_year#200, d_year#200]
Input [8]: [ss_sold_date_sk#193, c_customer_id#154, c_first_name#161, c_last_name#162, _pushedexpression#198, d_date_sk#199, d_year#200, d_year#200]

(51) HashAggregate [codegen id : 17]
Input [6]: [c_customer_id#154, c_first_name#161, c_last_name#162, _pushedexpression#201, d_year#200, d_year#200]
Keys [4]: [c_customer_id#154, c_first_name#161, c_last_name#162, d_year#200]
Functions [1]: [partial_sum(_pushedexpression#201)]
Aggregate Attributes [2]: [sum#202, isEmpty#203]
Results [6]: [c_customer_id#154, c_first_name#161, c_last_name#162, d_year#200, sum#204, isEmpty#205]

(52) Exchange
Input [6]: [c_customer_id#154, c_first_name#161, c_last_name#162, d_year#200, sum#204, isEmpty#205]
Arguments: hashpartitioning(c_customer_id#154, c_first_name#161, c_last_name#162, d_year#200, 5), ENSURE_REQUIREMENTS, [id=#206]

(53) HashAggregate [codegen id : 18]
Input [6]: [c_customer_id#154, c_first_name#161, c_last_name#162, d_year#200, sum#204, isEmpty#205]
Keys [4]: [c_customer_id#154, c_first_name#161, c_last_name#162, d_year#200]
Functions [1]: [sum(_pushedexpression#201)]
Aggregate Attributes [1]: [sum(_pushedexpression#201)#56]
Results [4]: [c_customer_id#154 AS customer_id#207, c_first_name#161 AS customer_first_name#208, c_last_name#162 AS customer_last_name#209, cast(sum(_pushedexpression#201)#56 as decimal(17,2)) AS year_total#210]

(54) ReusedExchange [Reuses operator id: 24]
Output [5]: [ws_sold_date_sk#211, c_customer_id#212, c_first_name#213, c_last_name#214, _pushedexpression#215]

(55) Scan parquet default.date_dim
Output [28]: [d_date_sk#216, d_date_id#217, d_date#218, d_month_seq#219, d_week_seq#220, d_quarter_seq#221, d_year#222, d_dow#223, d_moy#224, d_dom#225, d_qoy#226, d_fy_year#227, d_fy_quarter_seq#228, d_fy_week_seq#229, d_day_name#230, d_quarter_name#231, d_holiday#232, d_weekend#233, d_following_holiday#234, d_first_dom#235, d_last_dom#236, d_same_day_ly#237, d_same_day_lq#238, d_current_day#239, d_current_week#240, d_current_month#241, d_current_quarter#242, d_current_year#243]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), In(d_year, [2001,2002]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(56) ColumnarToRow
Input [28]: [d_date_sk#216, d_date_id#217, d_date#218, d_month_seq#219, d_week_seq#220, d_quarter_seq#221, d_year#222, d_dow#223, d_moy#224, d_dom#225, d_qoy#226, d_fy_year#227, d_fy_quarter_seq#228, d_fy_week_seq#229, d_day_name#230, d_quarter_name#231, d_holiday#232, d_weekend#233, d_following_holiday#234, d_first_dom#235, d_last_dom#236, d_same_day_ly#237, d_same_day_lq#238, d_current_day#239, d_current_week#240, d_current_month#241, d_current_quarter#242, d_current_year#243]

(57) Filter
Input [28]: [d_date_sk#216, d_date_id#217, d_date#218, d_month_seq#219, d_week_seq#220, d_quarter_seq#221, d_year#222, d_dow#223, d_moy#224, d_dom#225, d_qoy#226, d_fy_year#227, d_fy_quarter_seq#228, d_fy_week_seq#229, d_day_name#230, d_quarter_name#231, d_holiday#232, d_weekend#233, d_following_holiday#234, d_first_dom#235, d_last_dom#236, d_same_day_ly#237, d_same_day_lq#238, d_current_day#239, d_current_week#240, d_current_month#241, d_current_quarter#242, d_current_year#243]
Condition : (((isnotnull(d_year#222) AND (d_year#222 = 2002)) AND d_year#222 IN (2001,2002)) AND isnotnull(d_date_sk#216))

(58) HashAggregate
Input [28]: [d_date_sk#216, d_date_id#217, d_date#218, d_month_seq#219, d_week_seq#220, d_quarter_seq#221, d_year#222, d_dow#223, d_moy#224, d_dom#225, d_qoy#226, d_fy_year#227, d_fy_quarter_seq#228, d_fy_week_seq#229, d_day_name#230, d_quarter_name#231, d_holiday#232, d_weekend#233, d_following_holiday#234, d_first_dom#235, d_last_dom#236, d_same_day_ly#237, d_same_day_lq#238, d_current_day#239, d_current_week#240, d_current_month#241, d_current_quarter#242, d_current_year#243]
Keys [3]: [d_date_sk#216, d_year#222, d_year#222]
Functions: []
Aggregate Attributes: []
Results [3]: [d_date_sk#216, d_year#222, d_year#222]

(59) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [ws_sold_date_sk#211]
Right keys [1]: [d_date_sk#216]
Join condition: None

(60) Project [codegen id : 20]
Output [6]: [c_customer_id#212, c_first_name#213, c_last_name#214, _pushedexpression#244, d_year#222, d_year#222]
Input [8]: [ws_sold_date_sk#211, c_customer_id#212, c_first_name#213, c_last_name#214, _pushedexpression#215, d_date_sk#216, d_year#222, d_year#222]

(61) HashAggregate [codegen id : 20]
Input [6]: [c_customer_id#212, c_first_name#213, c_last_name#214, _pushedexpression#244, d_year#222, d_year#222]
Keys [4]: [c_customer_id#212, c_first_name#213, c_last_name#214, d_year#222]
Functions [1]: [partial_sum(_pushedexpression#244)]
Aggregate Attributes [2]: [sum#245, isEmpty#246]
Results [6]: [c_customer_id#212, c_first_name#213, c_last_name#214, d_year#222, sum#247, isEmpty#248]

(62) Exchange
Input [6]: [c_customer_id#212, c_first_name#213, c_last_name#214, d_year#222, sum#247, isEmpty#248]
Arguments: hashpartitioning(c_customer_id#212, c_first_name#213, c_last_name#214, d_year#222, 5), ENSURE_REQUIREMENTS, [id=#249]

(63) HashAggregate [codegen id : 21]
Input [6]: [c_customer_id#212, c_first_name#213, c_last_name#214, d_year#222, sum#247, isEmpty#248]
Keys [4]: [c_customer_id#212, c_first_name#213, c_last_name#214, d_year#222]
Functions [1]: [sum(_pushedexpression#244)]
Aggregate Attributes [1]: [sum(_pushedexpression#244)#149]
Results [4]: [c_customer_id#212 AS customer_id#250, c_first_name#213 AS customer_first_name#251, c_last_name#214 AS customer_last_name#252, cast(sum(_pushedexpression#244)#149 as decimal(17,2)) AS year_total#253]

(64) Union

(65) Exchange
Input [4]: [customer_id#207, customer_first_name#208, customer_last_name#209, year_total#210]
Arguments: hashpartitioning(customer_id#207, 5), ENSURE_REQUIREMENTS, [id=#254]

(66) Sort [codegen id : 22]
Input [4]: [customer_id#207, customer_first_name#208, customer_last_name#209, year_total#210]
Arguments: [customer_id#207 ASC NULLS FIRST], false, 0

(67) SortMergeJoin [codegen id : 23]
Left keys [1]: [customer_id#57]
Right keys [1]: [customer_id#207]
Join condition: None

(68) LocalTableScan [codegen id : 24]
Output [41]: [c_customer_sk#255, c_customer_id#256, c_current_cdemo_sk#257, c_current_hdemo_sk#258, c_current_addr_sk#259, c_first_shipto_date_sk#260, c_first_sales_date_sk#261, c_salutation#262, c_first_name#263, c_last_name#264, c_preferred_cust_flag#265, c_birth_day#266, c_birth_month#267, c_birth_year#268, c_birth_country#269, c_login#270, c_email_address#271, c_last_review_date#272, ss_sold_time_sk#273, ss_item_sk#274, ss_customer_sk#275, ss_cdemo_sk#276, ss_hdemo_sk#277, ss_addr_sk#278, ss_store_sk#279, ss_promo_sk#280, ss_ticket_number#281, ss_quantity#282, ss_wholesale_cost#283, ss_list_price#284, ss_sales_price#285, ss_ext_discount_amt#286, ss_ext_sales_price#287, ss_ext_wholesale_cost#288, ss_ext_list_price#289, ss_ext_tax#290, ss_coupon_amt#291, ss_net_paid#292, ss_net_paid_inc_tax#293, ss_net_profit#294, ss_sold_date_sk#295]
Arguments: <empty>, [c_customer_sk#255, c_customer_id#256, c_current_cdemo_sk#257, c_current_hdemo_sk#258, c_current_addr_sk#259, c_first_shipto_date_sk#260, c_first_sales_date_sk#261, c_salutation#262, c_first_name#263, c_last_name#264, c_preferred_cust_flag#265, c_birth_day#266, c_birth_month#267, c_birth_year#268, c_birth_country#269, c_login#270, c_email_address#271, c_last_review_date#272, ss_sold_time_sk#273, ss_item_sk#274, ss_customer_sk#275, ss_cdemo_sk#276, ss_hdemo_sk#277, ss_addr_sk#278, ss_store_sk#279, ss_promo_sk#280, ss_ticket_number#281, ss_quantity#282, ss_wholesale_cost#283, ss_list_price#284, ss_sales_price#285, ss_ext_discount_amt#286, ss_ext_sales_price#287, ss_ext_wholesale_cost#288, ss_ext_list_price#289, ss_ext_tax#290, ss_coupon_amt#291, ss_net_paid#292, ss_net_paid_inc_tax#293, ss_net_profit#294, ss_sold_date_sk#295]

(69) HashAggregate [codegen id : 24]
Input [41]: [c_customer_sk#255, c_customer_id#256, c_current_cdemo_sk#257, c_current_hdemo_sk#258, c_current_addr_sk#259, c_first_shipto_date_sk#260, c_first_sales_date_sk#261, c_salutation#262, c_first_name#263, c_last_name#264, c_preferred_cust_flag#265, c_birth_day#266, c_birth_month#267, c_birth_year#268, c_birth_country#269, c_login#270, c_email_address#271, c_last_review_date#272, ss_sold_time_sk#273, ss_item_sk#274, ss_customer_sk#275, ss_cdemo_sk#276, ss_hdemo_sk#277, ss_addr_sk#278, ss_store_sk#279, ss_promo_sk#280, ss_ticket_number#281, ss_quantity#282, ss_wholesale_cost#283, ss_list_price#284, ss_sales_price#285, ss_ext_discount_amt#286, ss_ext_sales_price#287, ss_ext_wholesale_cost#288, ss_ext_list_price#289, ss_ext_tax#290, ss_coupon_amt#291, ss_net_paid#292, ss_net_paid_inc_tax#293, ss_net_profit#294, ss_sold_date_sk#295]
Keys [4]: [ss_sold_date_sk#295, c_customer_id#256, c_first_name#263, c_last_name#264]
Functions [1]: [partial_sum(UnscaledValue(ss_net_paid#292))]
Aggregate Attributes [1]: [sum#296]
Results [5]: [ss_sold_date_sk#295, c_customer_id#256, c_first_name#263, c_last_name#264, sum#297]

(70) Project [codegen id : 24]
Output [5]: [ss_sold_date_sk#295, c_customer_id#256, c_first_name#263, c_last_name#264, sum#297 AS _pushedexpression#298]
Input [5]: [ss_sold_date_sk#295, c_customer_id#256, c_first_name#263, c_last_name#264, sum#297]

(71) BroadcastExchange
Input [5]: [ss_sold_date_sk#295, c_customer_id#256, c_first_name#263, c_last_name#264, _pushedexpression#298]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#299]

(72) Scan parquet default.date_dim
Output [28]: [d_date_sk#300, d_date_id#301, d_date#302, d_month_seq#303, d_week_seq#304, d_quarter_seq#305, d_year#306, d_dow#307, d_moy#308, d_dom#309, d_qoy#310, d_fy_year#311, d_fy_quarter_seq#312, d_fy_week_seq#313, d_day_name#314, d_quarter_name#315, d_holiday#316, d_weekend#317, d_following_holiday#318, d_first_dom#319, d_last_dom#320, d_same_day_ly#321, d_same_day_lq#322, d_current_day#323, d_current_week#324, d_current_month#325, d_current_quarter#326, d_current_year#327]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2001,2002]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(73) ColumnarToRow [codegen id : 24]
Input [28]: [d_date_sk#300, d_date_id#301, d_date#302, d_month_seq#303, d_week_seq#304, d_quarter_seq#305, d_year#306, d_dow#307, d_moy#308, d_dom#309, d_qoy#310, d_fy_year#311, d_fy_quarter_seq#312, d_fy_week_seq#313, d_day_name#314, d_quarter_name#315, d_holiday#316, d_weekend#317, d_following_holiday#318, d_first_dom#319, d_last_dom#320, d_same_day_ly#321, d_same_day_lq#322, d_current_day#323, d_current_week#324, d_current_month#325, d_current_quarter#326, d_current_year#327]

(74) Filter [codegen id : 24]
Input [28]: [d_date_sk#300, d_date_id#301, d_date#302, d_month_seq#303, d_week_seq#304, d_quarter_seq#305, d_year#306, d_dow#307, d_moy#308, d_dom#309, d_qoy#310, d_fy_year#311, d_fy_quarter_seq#312, d_fy_week_seq#313, d_day_name#314, d_quarter_name#315, d_holiday#316, d_weekend#317, d_following_holiday#318, d_first_dom#319, d_last_dom#320, d_same_day_ly#321, d_same_day_lq#322, d_current_day#323, d_current_week#324, d_current_month#325, d_current_quarter#326, d_current_year#327]
Condition : (((isnotnull(d_year#306) AND (d_year#306 = 2001)) AND d_year#306 IN (2001,2002)) AND isnotnull(d_date_sk#300))

(75) HashAggregate [codegen id : 24]
Input [28]: [d_date_sk#300, d_date_id#301, d_date#302, d_month_seq#303, d_week_seq#304, d_quarter_seq#305, d_year#306, d_dow#307, d_moy#308, d_dom#309, d_qoy#310, d_fy_year#311, d_fy_quarter_seq#312, d_fy_week_seq#313, d_day_name#314, d_quarter_name#315, d_holiday#316, d_weekend#317, d_following_holiday#318, d_first_dom#319, d_last_dom#320, d_same_day_ly#321, d_same_day_lq#322, d_current_day#323, d_current_week#324, d_current_month#325, d_current_quarter#326, d_current_year#327]
Keys [3]: [d_date_sk#300, d_year#306, d_year#306]
Functions: []
Aggregate Attributes: []
Results [3]: [d_date_sk#300, d_year#306, d_year#306]

(76) BroadcastHashJoin [codegen id : 25]
Left keys [1]: [ss_sold_date_sk#295]
Right keys [1]: [d_date_sk#300]
Join condition: None

(77) Project [codegen id : 25]
Output [6]: [c_customer_id#256, c_first_name#263, c_last_name#264, _pushedexpression#328, d_year#306, d_year#306]
Input [8]: [ss_sold_date_sk#295, c_customer_id#256, c_first_name#263, c_last_name#264, _pushedexpression#298, d_date_sk#300, d_year#306, d_year#306]

(78) HashAggregate [codegen id : 25]
Input [6]: [c_customer_id#256, c_first_name#263, c_last_name#264, _pushedexpression#328, d_year#306, d_year#306]
Keys [4]: [c_customer_id#256, c_first_name#263, c_last_name#264, d_year#306]
Functions [1]: [partial_sum(_pushedexpression#328)]
Aggregate Attributes [2]: [sum#329, isEmpty#330]
Results [6]: [c_customer_id#256, c_first_name#263, c_last_name#264, d_year#306, sum#331, isEmpty#332]

(79) Exchange
Input [6]: [c_customer_id#256, c_first_name#263, c_last_name#264, d_year#306, sum#331, isEmpty#332]
Arguments: hashpartitioning(c_customer_id#256, c_first_name#263, c_last_name#264, d_year#306, 5), ENSURE_REQUIREMENTS, [id=#333]

(80) HashAggregate [codegen id : 26]
Input [6]: [c_customer_id#256, c_first_name#263, c_last_name#264, d_year#306, sum#331, isEmpty#332]
Keys [4]: [c_customer_id#256, c_first_name#263, c_last_name#264, d_year#306]
Functions [1]: [sum(_pushedexpression#328)]
Aggregate Attributes [1]: [sum(_pushedexpression#328)#56]
Results [2]: [c_customer_id#256 AS customer_id#334, cast(sum(_pushedexpression#328)#56 as decimal(17,2)) AS year_total#335]

(81) Filter [codegen id : 26]
Input [2]: [customer_id#334, year_total#335]
Condition : (isnotnull(year_total#335) AND (year_total#335 > 0.00))

(82) ReusedExchange [Reuses operator id: 4]
Output [18]: [c_customer_sk#336, c_customer_id#337, c_current_cdemo_sk#338, c_current_hdemo_sk#339, c_current_addr_sk#340, c_first_shipto_date_sk#341, c_first_sales_date_sk#342, c_salutation#343, c_first_name#344, c_last_name#345, c_preferred_cust_flag#346, c_birth_day#347, c_birth_month#348, c_birth_year#349, c_birth_country#350, c_login#351, c_email_address#352, c_last_review_date#353]

(83) Sort [codegen id : 28]
Input [18]: [c_customer_sk#336, c_customer_id#337, c_current_cdemo_sk#338, c_current_hdemo_sk#339, c_current_addr_sk#340, c_first_shipto_date_sk#341, c_first_sales_date_sk#342, c_salutation#343, c_first_name#344, c_last_name#345, c_preferred_cust_flag#346, c_birth_day#347, c_birth_month#348, c_birth_year#349, c_birth_country#350, c_login#351, c_email_address#352, c_last_review_date#353]
Arguments: [c_customer_sk#336 ASC NULLS FIRST], false, 0

(84) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#354, ws_ship_date_sk#355, ws_item_sk#356, ws_bill_customer_sk#357, ws_bill_cdemo_sk#358, ws_bill_hdemo_sk#359, ws_bill_addr_sk#360, ws_ship_customer_sk#361, ws_ship_cdemo_sk#362, ws_ship_hdemo_sk#363, ws_ship_addr_sk#364, ws_web_page_sk#365, ws_web_site_sk#366, ws_ship_mode_sk#367, ws_warehouse_sk#368, ws_promo_sk#369, ws_order_number#370, ws_quantity#371, ws_wholesale_cost#372, ws_list_price#373, ws_sales_price#374, ws_ext_discount_amt#375, ws_ext_sales_price#376, ws_ext_wholesale_cost#377, ws_ext_list_price#378, ws_ext_tax#379, ws_coupon_amt#380, ws_ext_ship_cost#381, ws_net_paid#382, ws_net_paid_inc_tax#383, ws_net_paid_inc_ship#384, ws_net_paid_inc_ship_tax#385, ws_net_profit#386, ws_sold_date_sk#387]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#387), dynamicpruningexpression(ws_sold_date_sk#387 IN dynamicpruning#43)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(85) ColumnarToRow [codegen id : 29]
Input [34]: [ws_sold_time_sk#354, ws_ship_date_sk#355, ws_item_sk#356, ws_bill_customer_sk#357, ws_bill_cdemo_sk#358, ws_bill_hdemo_sk#359, ws_bill_addr_sk#360, ws_ship_customer_sk#361, ws_ship_cdemo_sk#362, ws_ship_hdemo_sk#363, ws_ship_addr_sk#364, ws_web_page_sk#365, ws_web_site_sk#366, ws_ship_mode_sk#367, ws_warehouse_sk#368, ws_promo_sk#369, ws_order_number#370, ws_quantity#371, ws_wholesale_cost#372, ws_list_price#373, ws_sales_price#374, ws_ext_discount_amt#375, ws_ext_sales_price#376, ws_ext_wholesale_cost#377, ws_ext_list_price#378, ws_ext_tax#379, ws_coupon_amt#380, ws_ext_ship_cost#381, ws_net_paid#382, ws_net_paid_inc_tax#383, ws_net_paid_inc_ship#384, ws_net_paid_inc_ship_tax#385, ws_net_profit#386, ws_sold_date_sk#387]

(86) Filter [codegen id : 29]
Input [34]: [ws_sold_time_sk#354, ws_ship_date_sk#355, ws_item_sk#356, ws_bill_customer_sk#357, ws_bill_cdemo_sk#358, ws_bill_hdemo_sk#359, ws_bill_addr_sk#360, ws_ship_customer_sk#361, ws_ship_cdemo_sk#362, ws_ship_hdemo_sk#363, ws_ship_addr_sk#364, ws_web_page_sk#365, ws_web_site_sk#366, ws_ship_mode_sk#367, ws_warehouse_sk#368, ws_promo_sk#369, ws_order_number#370, ws_quantity#371, ws_wholesale_cost#372, ws_list_price#373, ws_sales_price#374, ws_ext_discount_amt#375, ws_ext_sales_price#376, ws_ext_wholesale_cost#377, ws_ext_list_price#378, ws_ext_tax#379, ws_coupon_amt#380, ws_ext_ship_cost#381, ws_net_paid#382, ws_net_paid_inc_tax#383, ws_net_paid_inc_ship#384, ws_net_paid_inc_ship_tax#385, ws_net_profit#386, ws_sold_date_sk#387]
Condition : isnotnull(ws_bill_customer_sk#357)

(87) Exchange
Input [34]: [ws_sold_time_sk#354, ws_ship_date_sk#355, ws_item_sk#356, ws_bill_customer_sk#357, ws_bill_cdemo_sk#358, ws_bill_hdemo_sk#359, ws_bill_addr_sk#360, ws_ship_customer_sk#361, ws_ship_cdemo_sk#362, ws_ship_hdemo_sk#363, ws_ship_addr_sk#364, ws_web_page_sk#365, ws_web_site_sk#366, ws_ship_mode_sk#367, ws_warehouse_sk#368, ws_promo_sk#369, ws_order_number#370, ws_quantity#371, ws_wholesale_cost#372, ws_list_price#373, ws_sales_price#374, ws_ext_discount_amt#375, ws_ext_sales_price#376, ws_ext_wholesale_cost#377, ws_ext_list_price#378, ws_ext_tax#379, ws_coupon_amt#380, ws_ext_ship_cost#381, ws_net_paid#382, ws_net_paid_inc_tax#383, ws_net_paid_inc_ship#384, ws_net_paid_inc_ship_tax#385, ws_net_profit#386, ws_sold_date_sk#387]
Arguments: hashpartitioning(ws_bill_customer_sk#357, 5), ENSURE_REQUIREMENTS, [id=#388]

(88) Sort [codegen id : 30]
Input [34]: [ws_sold_time_sk#354, ws_ship_date_sk#355, ws_item_sk#356, ws_bill_customer_sk#357, ws_bill_cdemo_sk#358, ws_bill_hdemo_sk#359, ws_bill_addr_sk#360, ws_ship_customer_sk#361, ws_ship_cdemo_sk#362, ws_ship_hdemo_sk#363, ws_ship_addr_sk#364, ws_web_page_sk#365, ws_web_site_sk#366, ws_ship_mode_sk#367, ws_warehouse_sk#368, ws_promo_sk#369, ws_order_number#370, ws_quantity#371, ws_wholesale_cost#372, ws_list_price#373, ws_sales_price#374, ws_ext_discount_amt#375, ws_ext_sales_price#376, ws_ext_wholesale_cost#377, ws_ext_list_price#378, ws_ext_tax#379, ws_coupon_amt#380, ws_ext_ship_cost#381, ws_net_paid#382, ws_net_paid_inc_tax#383, ws_net_paid_inc_ship#384, ws_net_paid_inc_ship_tax#385, ws_net_profit#386, ws_sold_date_sk#387]
Arguments: [ws_bill_customer_sk#357 ASC NULLS FIRST], false, 0

(89) SortMergeJoin [codegen id : 32]
Left keys [1]: [c_customer_sk#336]
Right keys [1]: [ws_bill_customer_sk#357]
Join condition: None

(90) HashAggregate [codegen id : 32]
Input [52]: [c_customer_sk#336, c_customer_id#337, c_current_cdemo_sk#338, c_current_hdemo_sk#339, c_current_addr_sk#340, c_first_shipto_date_sk#341, c_first_sales_date_sk#342, c_salutation#343, c_first_name#344, c_last_name#345, c_preferred_cust_flag#346, c_birth_day#347, c_birth_month#348, c_birth_year#349, c_birth_country#350, c_login#351, c_email_address#352, c_last_review_date#353, ws_sold_time_sk#354, ws_ship_date_sk#355, ws_item_sk#356, ws_bill_customer_sk#357, ws_bill_cdemo_sk#358, ws_bill_hdemo_sk#359, ws_bill_addr_sk#360, ws_ship_customer_sk#361, ws_ship_cdemo_sk#362, ws_ship_hdemo_sk#363, ws_ship_addr_sk#364, ws_web_page_sk#365, ws_web_site_sk#366, ws_ship_mode_sk#367, ws_warehouse_sk#368, ws_promo_sk#369, ws_order_number#370, ws_quantity#371, ws_wholesale_cost#372, ws_list_price#373, ws_sales_price#374, ws_ext_discount_amt#375, ws_ext_sales_price#376, ws_ext_wholesale_cost#377, ws_ext_list_price#378, ws_ext_tax#379, ws_coupon_amt#380, ws_ext_ship_cost#381, ws_net_paid#382, ws_net_paid_inc_tax#383, ws_net_paid_inc_ship#384, ws_net_paid_inc_ship_tax#385, ws_net_profit#386, ws_sold_date_sk#387]
Keys [4]: [ws_sold_date_sk#387, c_customer_id#337, c_first_name#344, c_last_name#345]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#382))]
Aggregate Attributes [1]: [sum#389]
Results [5]: [ws_sold_date_sk#387, c_customer_id#337, c_first_name#344, c_last_name#345, sum#390]

(91) Project [codegen id : 32]
Output [5]: [ws_sold_date_sk#387, c_customer_id#337, c_first_name#344, c_last_name#345, sum#390 AS _pushedexpression#391]
Input [5]: [ws_sold_date_sk#387, c_customer_id#337, c_first_name#344, c_last_name#345, sum#390]

(92) ReusedExchange [Reuses operator id: 140]
Output [3]: [d_date_sk#392, d_year#393, d_year#393]

(93) BroadcastHashJoin [codegen id : 32]
Left keys [1]: [ws_sold_date_sk#387]
Right keys [1]: [d_date_sk#392]
Join condition: None

(94) Project [codegen id : 32]
Output [6]: [c_customer_id#337, c_first_name#344, c_last_name#345, _pushedexpression#394, d_year#393, d_year#393]
Input [8]: [ws_sold_date_sk#387, c_customer_id#337, c_first_name#344, c_last_name#345, _pushedexpression#391, d_date_sk#392, d_year#393, d_year#393]

(95) HashAggregate [codegen id : 32]
Input [6]: [c_customer_id#337, c_first_name#344, c_last_name#345, _pushedexpression#394, d_year#393, d_year#393]
Keys [4]: [c_customer_id#337, c_first_name#344, c_last_name#345, d_year#393]
Functions [1]: [partial_sum(_pushedexpression#394)]
Aggregate Attributes [2]: [sum#395, isEmpty#396]
Results [6]: [c_customer_id#337, c_first_name#344, c_last_name#345, d_year#393, sum#397, isEmpty#398]

(96) Exchange
Input [6]: [c_customer_id#337, c_first_name#344, c_last_name#345, d_year#393, sum#397, isEmpty#398]
Arguments: hashpartitioning(c_customer_id#337, c_first_name#344, c_last_name#345, d_year#393, 5), ENSURE_REQUIREMENTS, [id=#399]

(97) HashAggregate [codegen id : 33]
Input [6]: [c_customer_id#337, c_first_name#344, c_last_name#345, d_year#393, sum#397, isEmpty#398]
Keys [4]: [c_customer_id#337, c_first_name#344, c_last_name#345, d_year#393]
Functions [1]: [sum(_pushedexpression#394)]
Aggregate Attributes [1]: [sum(_pushedexpression#394)#149]
Results [2]: [c_customer_id#337 AS customer_id#150, cast(sum(_pushedexpression#394)#149 as decimal(17,2)) AS year_total#151]

(98) Filter [codegen id : 33]
Input [2]: [customer_id#150, year_total#151]
Condition : (isnotnull(year_total#151) AND (year_total#151 > 0.00))

(99) Union

(100) Exchange
Input [2]: [customer_id#334, year_total#335]
Arguments: hashpartitioning(customer_id#334, 5), ENSURE_REQUIREMENTS, [id=#400]

(101) Sort [codegen id : 34]
Input [2]: [customer_id#334, year_total#335]
Arguments: [customer_id#334 ASC NULLS FIRST], false, 0

(102) SortMergeJoin [codegen id : 35]
Left keys [1]: [customer_id#57]
Right keys [1]: [customer_id#334]
Join condition: None

(103) Project [codegen id : 35]
Output [7]: [customer_id#57, year_total#58, customer_id#207, customer_first_name#208, customer_last_name#209, year_total#210, year_total#335]
Input [8]: [customer_id#57, year_total#58, customer_id#207, customer_first_name#208, customer_last_name#209, year_total#210, customer_id#334, year_total#335]

(104) ReusedExchange [Reuses operator id: 71]
Output [5]: [ss_sold_date_sk#401, c_customer_id#402, c_first_name#403, c_last_name#404, _pushedexpression#405]

(105) Scan parquet default.date_dim
Output [28]: [d_date_sk#406, d_date_id#407, d_date#408, d_month_seq#409, d_week_seq#410, d_quarter_seq#411, d_year#412, d_dow#413, d_moy#414, d_dom#415, d_qoy#416, d_fy_year#417, d_fy_quarter_seq#418, d_fy_week_seq#419, d_day_name#420, d_quarter_name#421, d_holiday#422, d_weekend#423, d_following_holiday#424, d_first_dom#425, d_last_dom#426, d_same_day_ly#427, d_same_day_lq#428, d_current_day#429, d_current_week#430, d_current_month#431, d_current_quarter#432, d_current_year#433]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), In(d_year, [2001,2002]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(106) ColumnarToRow
Input [28]: [d_date_sk#406, d_date_id#407, d_date#408, d_month_seq#409, d_week_seq#410, d_quarter_seq#411, d_year#412, d_dow#413, d_moy#414, d_dom#415, d_qoy#416, d_fy_year#417, d_fy_quarter_seq#418, d_fy_week_seq#419, d_day_name#420, d_quarter_name#421, d_holiday#422, d_weekend#423, d_following_holiday#424, d_first_dom#425, d_last_dom#426, d_same_day_ly#427, d_same_day_lq#428, d_current_day#429, d_current_week#430, d_current_month#431, d_current_quarter#432, d_current_year#433]

(107) Filter
Input [28]: [d_date_sk#406, d_date_id#407, d_date#408, d_month_seq#409, d_week_seq#410, d_quarter_seq#411, d_year#412, d_dow#413, d_moy#414, d_dom#415, d_qoy#416, d_fy_year#417, d_fy_quarter_seq#418, d_fy_week_seq#419, d_day_name#420, d_quarter_name#421, d_holiday#422, d_weekend#423, d_following_holiday#424, d_first_dom#425, d_last_dom#426, d_same_day_ly#427, d_same_day_lq#428, d_current_day#429, d_current_week#430, d_current_month#431, d_current_quarter#432, d_current_year#433]
Condition : (((isnotnull(d_year#412) AND (d_year#412 = 2002)) AND d_year#412 IN (2001,2002)) AND isnotnull(d_date_sk#406))

(108) HashAggregate
Input [28]: [d_date_sk#406, d_date_id#407, d_date#408, d_month_seq#409, d_week_seq#410, d_quarter_seq#411, d_year#412, d_dow#413, d_moy#414, d_dom#415, d_qoy#416, d_fy_year#417, d_fy_quarter_seq#418, d_fy_week_seq#419, d_day_name#420, d_quarter_name#421, d_holiday#422, d_weekend#423, d_following_holiday#424, d_first_dom#425, d_last_dom#426, d_same_day_ly#427, d_same_day_lq#428, d_current_day#429, d_current_week#430, d_current_month#431, d_current_quarter#432, d_current_year#433]
Keys [3]: [d_date_sk#406, d_year#412, d_year#412]
Functions: []
Aggregate Attributes: []
Results [3]: [d_date_sk#406, d_year#412, d_year#412]

(109) BroadcastHashJoin [codegen id : 37]
Left keys [1]: [ss_sold_date_sk#401]
Right keys [1]: [d_date_sk#406]
Join condition: None

(110) Project [codegen id : 37]
Output [6]: [c_customer_id#402, c_first_name#403, c_last_name#404, _pushedexpression#434, d_year#412, d_year#412]
Input [8]: [ss_sold_date_sk#401, c_customer_id#402, c_first_name#403, c_last_name#404, _pushedexpression#405, d_date_sk#406, d_year#412, d_year#412]

(111) HashAggregate [codegen id : 37]
Input [6]: [c_customer_id#402, c_first_name#403, c_last_name#404, _pushedexpression#434, d_year#412, d_year#412]
Keys [4]: [c_customer_id#402, c_first_name#403, c_last_name#404, d_year#412]
Functions [1]: [partial_sum(_pushedexpression#434)]
Aggregate Attributes [2]: [sum#435, isEmpty#436]
Results [6]: [c_customer_id#402, c_first_name#403, c_last_name#404, d_year#412, sum#437, isEmpty#438]

(112) Exchange
Input [6]: [c_customer_id#402, c_first_name#403, c_last_name#404, d_year#412, sum#437, isEmpty#438]
Arguments: hashpartitioning(c_customer_id#402, c_first_name#403, c_last_name#404, d_year#412, 5), ENSURE_REQUIREMENTS, [id=#439]

(113) HashAggregate [codegen id : 38]
Input [6]: [c_customer_id#402, c_first_name#403, c_last_name#404, d_year#412, sum#437, isEmpty#438]
Keys [4]: [c_customer_id#402, c_first_name#403, c_last_name#404, d_year#412]
Functions [1]: [sum(_pushedexpression#434)]
Aggregate Attributes [1]: [sum(_pushedexpression#434)#56]
Results [2]: [c_customer_id#402 AS customer_id#440, cast(sum(_pushedexpression#434)#56 as decimal(17,2)) AS year_total#441]

(114) ReusedExchange [Reuses operator id: 4]
Output [18]: [c_customer_sk#442, c_customer_id#443, c_current_cdemo_sk#444, c_current_hdemo_sk#445, c_current_addr_sk#446, c_first_shipto_date_sk#447, c_first_sales_date_sk#448, c_salutation#449, c_first_name#450, c_last_name#451, c_preferred_cust_flag#452, c_birth_day#453, c_birth_month#454, c_birth_year#455, c_birth_country#456, c_login#457, c_email_address#458, c_last_review_date#459]

(115) Sort [codegen id : 40]
Input [18]: [c_customer_sk#442, c_customer_id#443, c_current_cdemo_sk#444, c_current_hdemo_sk#445, c_current_addr_sk#446, c_first_shipto_date_sk#447, c_first_sales_date_sk#448, c_salutation#449, c_first_name#450, c_last_name#451, c_preferred_cust_flag#452, c_birth_day#453, c_birth_month#454, c_birth_year#455, c_birth_country#456, c_login#457, c_email_address#458, c_last_review_date#459]
Arguments: [c_customer_sk#442 ASC NULLS FIRST], false, 0

(116) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#460, ws_ship_date_sk#461, ws_item_sk#462, ws_bill_customer_sk#463, ws_bill_cdemo_sk#464, ws_bill_hdemo_sk#465, ws_bill_addr_sk#466, ws_ship_customer_sk#467, ws_ship_cdemo_sk#468, ws_ship_hdemo_sk#469, ws_ship_addr_sk#470, ws_web_page_sk#471, ws_web_site_sk#472, ws_ship_mode_sk#473, ws_warehouse_sk#474, ws_promo_sk#475, ws_order_number#476, ws_quantity#477, ws_wholesale_cost#478, ws_list_price#479, ws_sales_price#480, ws_ext_discount_amt#481, ws_ext_sales_price#482, ws_ext_wholesale_cost#483, ws_ext_list_price#484, ws_ext_tax#485, ws_coupon_amt#486, ws_ext_ship_cost#487, ws_net_paid#488, ws_net_paid_inc_tax#489, ws_net_paid_inc_ship#490, ws_net_paid_inc_ship_tax#491, ws_net_profit#492, ws_sold_date_sk#493]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#493), dynamicpruningexpression(ws_sold_date_sk#493 IN dynamicpruning#194)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(117) ColumnarToRow [codegen id : 41]
Input [34]: [ws_sold_time_sk#460, ws_ship_date_sk#461, ws_item_sk#462, ws_bill_customer_sk#463, ws_bill_cdemo_sk#464, ws_bill_hdemo_sk#465, ws_bill_addr_sk#466, ws_ship_customer_sk#467, ws_ship_cdemo_sk#468, ws_ship_hdemo_sk#469, ws_ship_addr_sk#470, ws_web_page_sk#471, ws_web_site_sk#472, ws_ship_mode_sk#473, ws_warehouse_sk#474, ws_promo_sk#475, ws_order_number#476, ws_quantity#477, ws_wholesale_cost#478, ws_list_price#479, ws_sales_price#480, ws_ext_discount_amt#481, ws_ext_sales_price#482, ws_ext_wholesale_cost#483, ws_ext_list_price#484, ws_ext_tax#485, ws_coupon_amt#486, ws_ext_ship_cost#487, ws_net_paid#488, ws_net_paid_inc_tax#489, ws_net_paid_inc_ship#490, ws_net_paid_inc_ship_tax#491, ws_net_profit#492, ws_sold_date_sk#493]

(118) Filter [codegen id : 41]
Input [34]: [ws_sold_time_sk#460, ws_ship_date_sk#461, ws_item_sk#462, ws_bill_customer_sk#463, ws_bill_cdemo_sk#464, ws_bill_hdemo_sk#465, ws_bill_addr_sk#466, ws_ship_customer_sk#467, ws_ship_cdemo_sk#468, ws_ship_hdemo_sk#469, ws_ship_addr_sk#470, ws_web_page_sk#471, ws_web_site_sk#472, ws_ship_mode_sk#473, ws_warehouse_sk#474, ws_promo_sk#475, ws_order_number#476, ws_quantity#477, ws_wholesale_cost#478, ws_list_price#479, ws_sales_price#480, ws_ext_discount_amt#481, ws_ext_sales_price#482, ws_ext_wholesale_cost#483, ws_ext_list_price#484, ws_ext_tax#485, ws_coupon_amt#486, ws_ext_ship_cost#487, ws_net_paid#488, ws_net_paid_inc_tax#489, ws_net_paid_inc_ship#490, ws_net_paid_inc_ship_tax#491, ws_net_profit#492, ws_sold_date_sk#493]
Condition : isnotnull(ws_bill_customer_sk#463)

(119) Exchange
Input [34]: [ws_sold_time_sk#460, ws_ship_date_sk#461, ws_item_sk#462, ws_bill_customer_sk#463, ws_bill_cdemo_sk#464, ws_bill_hdemo_sk#465, ws_bill_addr_sk#466, ws_ship_customer_sk#467, ws_ship_cdemo_sk#468, ws_ship_hdemo_sk#469, ws_ship_addr_sk#470, ws_web_page_sk#471, ws_web_site_sk#472, ws_ship_mode_sk#473, ws_warehouse_sk#474, ws_promo_sk#475, ws_order_number#476, ws_quantity#477, ws_wholesale_cost#478, ws_list_price#479, ws_sales_price#480, ws_ext_discount_amt#481, ws_ext_sales_price#482, ws_ext_wholesale_cost#483, ws_ext_list_price#484, ws_ext_tax#485, ws_coupon_amt#486, ws_ext_ship_cost#487, ws_net_paid#488, ws_net_paid_inc_tax#489, ws_net_paid_inc_ship#490, ws_net_paid_inc_ship_tax#491, ws_net_profit#492, ws_sold_date_sk#493]
Arguments: hashpartitioning(ws_bill_customer_sk#463, 5), ENSURE_REQUIREMENTS, [id=#494]

(120) Sort [codegen id : 42]
Input [34]: [ws_sold_time_sk#460, ws_ship_date_sk#461, ws_item_sk#462, ws_bill_customer_sk#463, ws_bill_cdemo_sk#464, ws_bill_hdemo_sk#465, ws_bill_addr_sk#466, ws_ship_customer_sk#467, ws_ship_cdemo_sk#468, ws_ship_hdemo_sk#469, ws_ship_addr_sk#470, ws_web_page_sk#471, ws_web_site_sk#472, ws_ship_mode_sk#473, ws_warehouse_sk#474, ws_promo_sk#475, ws_order_number#476, ws_quantity#477, ws_wholesale_cost#478, ws_list_price#479, ws_sales_price#480, ws_ext_discount_amt#481, ws_ext_sales_price#482, ws_ext_wholesale_cost#483, ws_ext_list_price#484, ws_ext_tax#485, ws_coupon_amt#486, ws_ext_ship_cost#487, ws_net_paid#488, ws_net_paid_inc_tax#489, ws_net_paid_inc_ship#490, ws_net_paid_inc_ship_tax#491, ws_net_profit#492, ws_sold_date_sk#493]
Arguments: [ws_bill_customer_sk#463 ASC NULLS FIRST], false, 0

(121) SortMergeJoin [codegen id : 44]
Left keys [1]: [c_customer_sk#442]
Right keys [1]: [ws_bill_customer_sk#463]
Join condition: None

(122) HashAggregate [codegen id : 44]
Input [52]: [c_customer_sk#442, c_customer_id#443, c_current_cdemo_sk#444, c_current_hdemo_sk#445, c_current_addr_sk#446, c_first_shipto_date_sk#447, c_first_sales_date_sk#448, c_salutation#449, c_first_name#450, c_last_name#451, c_preferred_cust_flag#452, c_birth_day#453, c_birth_month#454, c_birth_year#455, c_birth_country#456, c_login#457, c_email_address#458, c_last_review_date#459, ws_sold_time_sk#460, ws_ship_date_sk#461, ws_item_sk#462, ws_bill_customer_sk#463, ws_bill_cdemo_sk#464, ws_bill_hdemo_sk#465, ws_bill_addr_sk#466, ws_ship_customer_sk#467, ws_ship_cdemo_sk#468, ws_ship_hdemo_sk#469, ws_ship_addr_sk#470, ws_web_page_sk#471, ws_web_site_sk#472, ws_ship_mode_sk#473, ws_warehouse_sk#474, ws_promo_sk#475, ws_order_number#476, ws_quantity#477, ws_wholesale_cost#478, ws_list_price#479, ws_sales_price#480, ws_ext_discount_amt#481, ws_ext_sales_price#482, ws_ext_wholesale_cost#483, ws_ext_list_price#484, ws_ext_tax#485, ws_coupon_amt#486, ws_ext_ship_cost#487, ws_net_paid#488, ws_net_paid_inc_tax#489, ws_net_paid_inc_ship#490, ws_net_paid_inc_ship_tax#491, ws_net_profit#492, ws_sold_date_sk#493]
Keys [4]: [ws_sold_date_sk#493, c_customer_id#443, c_first_name#450, c_last_name#451]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#488))]
Aggregate Attributes [1]: [sum#495]
Results [5]: [ws_sold_date_sk#493, c_customer_id#443, c_first_name#450, c_last_name#451, sum#496]

(123) Project [codegen id : 44]
Output [5]: [ws_sold_date_sk#493, c_customer_id#443, c_first_name#450, c_last_name#451, sum#496 AS _pushedexpression#497]
Input [5]: [ws_sold_date_sk#493, c_customer_id#443, c_first_name#450, c_last_name#451, sum#496]

(124) ReusedExchange [Reuses operator id: 145]
Output [3]: [d_date_sk#498, d_year#499, d_year#499]

(125) BroadcastHashJoin [codegen id : 44]
Left keys [1]: [ws_sold_date_sk#493]
Right keys [1]: [d_date_sk#498]
Join condition: None

(126) Project [codegen id : 44]
Output [6]: [c_customer_id#443, c_first_name#450, c_last_name#451, _pushedexpression#500, d_year#499, d_year#499]
Input [8]: [ws_sold_date_sk#493, c_customer_id#443, c_first_name#450, c_last_name#451, _pushedexpression#497, d_date_sk#498, d_year#499, d_year#499]

(127) HashAggregate [codegen id : 44]
Input [6]: [c_customer_id#443, c_first_name#450, c_last_name#451, _pushedexpression#500, d_year#499, d_year#499]
Keys [4]: [c_customer_id#443, c_first_name#450, c_last_name#451, d_year#499]
Functions [1]: [partial_sum(_pushedexpression#500)]
Aggregate Attributes [2]: [sum#501, isEmpty#502]
Results [6]: [c_customer_id#443, c_first_name#450, c_last_name#451, d_year#499, sum#503, isEmpty#504]

(128) Exchange
Input [6]: [c_customer_id#443, c_first_name#450, c_last_name#451, d_year#499, sum#503, isEmpty#504]
Arguments: hashpartitioning(c_customer_id#443, c_first_name#450, c_last_name#451, d_year#499, 5), ENSURE_REQUIREMENTS, [id=#505]

(129) HashAggregate [codegen id : 45]
Input [6]: [c_customer_id#443, c_first_name#450, c_last_name#451, d_year#499, sum#503, isEmpty#504]
Keys [4]: [c_customer_id#443, c_first_name#450, c_last_name#451, d_year#499]
Functions [1]: [sum(_pushedexpression#500)]
Aggregate Attributes [1]: [sum(_pushedexpression#500)#149]
Results [2]: [c_customer_id#443 AS customer_id#506, cast(sum(_pushedexpression#500)#149 as decimal(17,2)) AS year_total#507]

(130) Union

(131) Exchange
Input [2]: [customer_id#440, year_total#441]
Arguments: hashpartitioning(customer_id#440, 5), ENSURE_REQUIREMENTS, [id=#508]

(132) Sort [codegen id : 46]
Input [2]: [customer_id#440, year_total#441]
Arguments: [customer_id#440 ASC NULLS FIRST], false, 0

(133) SortMergeJoin [codegen id : 47]
Left keys [1]: [customer_id#57]
Right keys [1]: [customer_id#440]
Join condition: (CASE WHEN (year_total#335 > 0.00) THEN CheckOverflow((promote_precision(year_total#441) / promote_precision(year_total#335)), DecimalType(37,20)) END > CASE WHEN (year_total#58 > 0.00) THEN CheckOverflow((promote_precision(year_total#210) / promote_precision(year_total#58)), DecimalType(37,20)) END)

(134) Project [codegen id : 47]
Output [3]: [customer_id#207, customer_first_name#208, customer_last_name#209]
Input [9]: [customer_id#57, year_total#58, customer_id#207, customer_first_name#208, customer_last_name#209, year_total#210, year_total#335, customer_id#440, year_total#441]

(135) TakeOrderedAndProject
Input [3]: [customer_id#207, customer_first_name#208, customer_last_name#209]
Arguments: 100, [customer_first_name#208 ASC NULLS FIRST, customer_id#207 ASC NULLS FIRST, customer_last_name#209 ASC NULLS FIRST], [customer_id#207, customer_first_name#208, customer_last_name#209]

===== Subqueries =====

Subquery:1 Hosting operator id = 6 Hosting Expression = ss_sold_date_sk#42 IN dynamicpruning#43
BroadcastExchange (140)
+- * HashAggregate (139)
   +- * Filter (138)
      +- * ColumnarToRow (137)
         +- Scan parquet default.date_dim (136)


(136) Scan parquet default.date_dim
Output [28]: [d_date_sk#48, d_date_id#509, d_date#510, d_month_seq#511, d_week_seq#512, d_quarter_seq#513, d_year#49, d_dow#514, d_moy#515, d_dom#516, d_qoy#517, d_fy_year#518, d_fy_quarter_seq#519, d_fy_week_seq#520, d_day_name#521, d_quarter_name#522, d_holiday#523, d_weekend#524, d_following_holiday#525, d_first_dom#526, d_last_dom#527, d_same_day_ly#528, d_same_day_lq#529, d_current_day#530, d_current_week#531, d_current_month#532, d_current_quarter#533, d_current_year#534]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2001,2002]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(137) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#48, d_date_id#509, d_date#510, d_month_seq#511, d_week_seq#512, d_quarter_seq#513, d_year#49, d_dow#514, d_moy#515, d_dom#516, d_qoy#517, d_fy_year#518, d_fy_quarter_seq#519, d_fy_week_seq#520, d_day_name#521, d_quarter_name#522, d_holiday#523, d_weekend#524, d_following_holiday#525, d_first_dom#526, d_last_dom#527, d_same_day_ly#528, d_same_day_lq#529, d_current_day#530, d_current_week#531, d_current_month#532, d_current_quarter#533, d_current_year#534]

(138) Filter [codegen id : 1]
Input [28]: [d_date_sk#48, d_date_id#509, d_date#510, d_month_seq#511, d_week_seq#512, d_quarter_seq#513, d_year#49, d_dow#514, d_moy#515, d_dom#516, d_qoy#517, d_fy_year#518, d_fy_quarter_seq#519, d_fy_week_seq#520, d_day_name#521, d_quarter_name#522, d_holiday#523, d_weekend#524, d_following_holiday#525, d_first_dom#526, d_last_dom#527, d_same_day_ly#528, d_same_day_lq#529, d_current_day#530, d_current_week#531, d_current_month#532, d_current_quarter#533, d_current_year#534]
Condition : (((isnotnull(d_year#49) AND (d_year#49 = 2001)) AND d_year#49 IN (2001,2002)) AND isnotnull(d_date_sk#48))

(139) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#48, d_date_id#509, d_date#510, d_month_seq#511, d_week_seq#512, d_quarter_seq#513, d_year#49, d_dow#514, d_moy#515, d_dom#516, d_qoy#517, d_fy_year#518, d_fy_quarter_seq#519, d_fy_week_seq#520, d_day_name#521, d_quarter_name#522, d_holiday#523, d_weekend#524, d_following_holiday#525, d_first_dom#526, d_last_dom#527, d_same_day_ly#528, d_same_day_lq#529, d_current_day#530, d_current_week#531, d_current_month#532, d_current_quarter#533, d_current_year#534]
Keys [3]: [d_date_sk#48, d_year#49, d_year#49]
Functions: []
Aggregate Attributes: []
Results [3]: [d_date_sk#48, d_year#49, d_year#49]

(140) BroadcastExchange
Input [3]: [d_date_sk#48, d_year#49, d_year#49]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#535]

Subquery:2 Hosting operator id = 40 Hosting Expression = ss_sold_date_sk#193 IN dynamicpruning#194
BroadcastExchange (145)
+- * HashAggregate (144)
   +- * Filter (143)
      +- * ColumnarToRow (142)
         +- Scan parquet default.date_dim (141)


(141) Scan parquet default.date_dim
Output [28]: [d_date_sk#199, d_date_id#536, d_date#537, d_month_seq#538, d_week_seq#539, d_quarter_seq#540, d_year#200, d_dow#541, d_moy#542, d_dom#543, d_qoy#544, d_fy_year#545, d_fy_quarter_seq#546, d_fy_week_seq#547, d_day_name#548, d_quarter_name#549, d_holiday#550, d_weekend#551, d_following_holiday#552, d_first_dom#553, d_last_dom#554, d_same_day_ly#555, d_same_day_lq#556, d_current_day#557, d_current_week#558, d_current_month#559, d_current_quarter#560, d_current_year#561]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), In(d_year, [2001,2002]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(142) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#199, d_date_id#536, d_date#537, d_month_seq#538, d_week_seq#539, d_quarter_seq#540, d_year#200, d_dow#541, d_moy#542, d_dom#543, d_qoy#544, d_fy_year#545, d_fy_quarter_seq#546, d_fy_week_seq#547, d_day_name#548, d_quarter_name#549, d_holiday#550, d_weekend#551, d_following_holiday#552, d_first_dom#553, d_last_dom#554, d_same_day_ly#555, d_same_day_lq#556, d_current_day#557, d_current_week#558, d_current_month#559, d_current_quarter#560, d_current_year#561]

(143) Filter [codegen id : 1]
Input [28]: [d_date_sk#199, d_date_id#536, d_date#537, d_month_seq#538, d_week_seq#539, d_quarter_seq#540, d_year#200, d_dow#541, d_moy#542, d_dom#543, d_qoy#544, d_fy_year#545, d_fy_quarter_seq#546, d_fy_week_seq#547, d_day_name#548, d_quarter_name#549, d_holiday#550, d_weekend#551, d_following_holiday#552, d_first_dom#553, d_last_dom#554, d_same_day_ly#555, d_same_day_lq#556, d_current_day#557, d_current_week#558, d_current_month#559, d_current_quarter#560, d_current_year#561]
Condition : (((isnotnull(d_year#200) AND (d_year#200 = 2002)) AND d_year#200 IN (2001,2002)) AND isnotnull(d_date_sk#199))

(144) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#199, d_date_id#536, d_date#537, d_month_seq#538, d_week_seq#539, d_quarter_seq#540, d_year#200, d_dow#541, d_moy#542, d_dom#543, d_qoy#544, d_fy_year#545, d_fy_quarter_seq#546, d_fy_week_seq#547, d_day_name#548, d_quarter_name#549, d_holiday#550, d_weekend#551, d_following_holiday#552, d_first_dom#553, d_last_dom#554, d_same_day_ly#555, d_same_day_lq#556, d_current_day#557, d_current_week#558, d_current_month#559, d_current_quarter#560, d_current_year#561]
Keys [3]: [d_date_sk#199, d_year#200, d_year#200]
Functions: []
Aggregate Attributes: []
Results [3]: [d_date_sk#199, d_year#200, d_year#200]

(145) BroadcastExchange
Input [3]: [d_date_sk#199, d_year#200, d_year#200]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#562]

Subquery:3 Hosting operator id = 84 Hosting Expression = ws_sold_date_sk#387 IN dynamicpruning#43

Subquery:4 Hosting operator id = 116 Hosting Expression = ws_sold_date_sk#493 IN dynamicpruning#194


