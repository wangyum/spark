== Physical Plan ==
TakeOrderedAndProject (72)
+- * Project (71)
   +- * SortMergeJoin Inner (70)
      :- * Project (47)
      :  +- * SortMergeJoin Inner (46)
      :     :- * Sort (23)
      :     :  +- * HashAggregate (22)
      :     :     +- Exchange (21)
      :     :        +- * HashAggregate (20)
      :     :           +- * Project (19)
      :     :              +- * BroadcastHashJoin Inner BuildRight (18)
      :     :                 :- * Project (16)
      :     :                 :  +- * HashAggregate (15)
      :     :                 :     +- * Project (14)
      :     :                 :        +- * Filter (13)
      :     :                 :           +- * SortMergeJoin LeftOuter (12)
      :     :                 :              :- * Sort (5)
      :     :                 :              :  +- Exchange (4)
      :     :                 :              :     +- * Filter (3)
      :     :                 :              :        +- * ColumnarToRow (2)
      :     :                 :              :           +- Scan parquet default.store_sales (1)
      :     :                 :              +- * Sort (11)
      :     :                 :                 +- Exchange (10)
      :     :                 :                    +- * Project (9)
      :     :                 :                       +- * Filter (8)
      :     :                 :                          +- * ColumnarToRow (7)
      :     :                 :                             +- Scan parquet default.store_returns (6)
      :     :                 +- ReusedExchange (17)
      :     +- * Sort (45)
      :        +- * Filter (44)
      :           +- * HashAggregate (43)
      :              +- Exchange (42)
      :                 +- * HashAggregate (41)
      :                    +- * Project (40)
      :                       +- * BroadcastHashJoin Inner BuildRight (39)
      :                          :- * Project (37)
      :                          :  +- * HashAggregate (36)
      :                          :     +- * Filter (35)
      :                          :        +- * SortMergeJoin LeftOuter (34)
      :                          :           :- * Sort (28)
      :                          :           :  +- Exchange (27)
      :                          :           :     +- * Filter (26)
      :                          :           :        +- * ColumnarToRow (25)
      :                          :           :           +- Scan parquet default.web_sales (24)
      :                          :           +- * Sort (33)
      :                          :              +- Exchange (32)
      :                          :                 +- * Filter (31)
      :                          :                    +- * ColumnarToRow (30)
      :                          :                       +- Scan parquet default.web_returns (29)
      :                          +- ReusedExchange (38)
      +- * Sort (69)
         +- * Filter (68)
            +- * HashAggregate (67)
               +- Exchange (66)
                  +- * HashAggregate (65)
                     +- * Project (64)
                        +- * BroadcastHashJoin Inner BuildRight (63)
                           :- * Project (61)
                           :  +- * HashAggregate (60)
                           :     +- * Filter (59)
                           :        +- * SortMergeJoin LeftOuter (58)
                           :           :- * Sort (52)
                           :           :  +- Exchange (51)
                           :           :     +- * Filter (50)
                           :           :        +- * ColumnarToRow (49)
                           :           :           +- Scan parquet default.catalog_sales (48)
                           :           +- * Sort (57)
                           :              +- Exchange (56)
                           :                 +- * Filter (55)
                           :                    +- * ColumnarToRow (54)
                           :                       +- Scan parquet default.catalog_returns (53)
                           +- ReusedExchange (62)


(1) Scan parquet default.store_sales
Output [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#7), dynamicpruningexpression(ss_sold_date_sk#7 IN dynamicpruning#8)]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7]

(3) Filter [codegen id : 1]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7]
Condition : (isnotnull(ss_item_sk#1) AND isnotnull(ss_customer_sk#2))

(4) Exchange
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7]
Arguments: hashpartitioning(ss_ticket_number#3, ss_item_sk#1, 5), ENSURE_REQUIREMENTS, [id=#9]

(5) Sort [codegen id : 2]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7]
Arguments: [ss_ticket_number#3 ASC NULLS FIRST, ss_item_sk#1 ASC NULLS FIRST], false, 0

(6) Scan parquet default.store_returns
Output [3]: [sr_item_sk#10, sr_ticket_number#11, sr_returned_date_sk#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_returns]
PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int>

(7) ColumnarToRow [codegen id : 3]
Input [3]: [sr_item_sk#10, sr_ticket_number#11, sr_returned_date_sk#12]

(8) Filter [codegen id : 3]
Input [3]: [sr_item_sk#10, sr_ticket_number#11, sr_returned_date_sk#12]
Condition : (isnotnull(sr_ticket_number#11) AND isnotnull(sr_item_sk#10))

(9) Project [codegen id : 3]
Output [2]: [sr_item_sk#10, sr_ticket_number#11]
Input [3]: [sr_item_sk#10, sr_ticket_number#11, sr_returned_date_sk#12]

(10) Exchange
Input [2]: [sr_item_sk#10, sr_ticket_number#11]
Arguments: hashpartitioning(sr_ticket_number#11, sr_item_sk#10, 5), ENSURE_REQUIREMENTS, [id=#13]

(11) Sort [codegen id : 4]
Input [2]: [sr_item_sk#10, sr_ticket_number#11]
Arguments: [sr_ticket_number#11 ASC NULLS FIRST, sr_item_sk#10 ASC NULLS FIRST], false, 0

(12) SortMergeJoin [codegen id : 6]
Left keys [2]: [ss_ticket_number#3, ss_item_sk#1]
Right keys [2]: [sr_ticket_number#11, sr_item_sk#10]
Join condition: None

(13) Filter [codegen id : 6]
Input [9]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7, sr_item_sk#10, sr_ticket_number#11]
Condition : isnull(sr_ticket_number#11)

(14) Project [codegen id : 6]
Output [7]: [ss_item_sk#1, ss_customer_sk#2, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7, sr_ticket_number#11]
Input [9]: [ss_item_sk#1, ss_customer_sk#2, ss_ticket_number#3, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7, sr_item_sk#10, sr_ticket_number#11]

(15) HashAggregate [codegen id : 6]
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_quantity#4, ss_wholesale_cost#5, ss_sales_price#6, ss_sold_date_sk#7, sr_ticket_number#11]
Keys [3]: [ss_sold_date_sk#7, ss_item_sk#1, ss_customer_sk#2]
Functions [3]: [partial_sum(ss_quantity#4), partial_sum(UnscaledValue(ss_wholesale_cost#5)), partial_sum(UnscaledValue(ss_sales_price#6))]
Aggregate Attributes [3]: [sum#14, sum#15, sum#16]
Results [6]: [ss_sold_date_sk#7, ss_item_sk#1, ss_customer_sk#2, sum#17, sum#18, sum#19]

(16) Project [codegen id : 6]
Output [6]: [ss_sold_date_sk#7, ss_item_sk#1, ss_customer_sk#2, sum#17 AS _pushedexpression#20, sum#18 AS _pushedexpression#21, sum#19 AS _pushedexpression#22]
Input [6]: [ss_sold_date_sk#7, ss_item_sk#1, ss_customer_sk#2, sum#17, sum#18, sum#19]

(17) ReusedExchange [Reuses operator id: 77]
Output [2]: [d_date_sk#23, d_year#24]

(18) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#7]
Right keys [1]: [d_date_sk#23]
Join condition: None

(19) Project [codegen id : 6]
Output [6]: [ss_item_sk#1, ss_customer_sk#2, _pushedexpression#20, _pushedexpression#25, _pushedexpression#26, d_year#24]
Input [8]: [ss_sold_date_sk#7, ss_item_sk#1, ss_customer_sk#2, _pushedexpression#20, _pushedexpression#21, _pushedexpression#22, d_date_sk#23, d_year#24]

(20) HashAggregate [codegen id : 6]
Input [6]: [ss_item_sk#1, ss_customer_sk#2, _pushedexpression#20, _pushedexpression#25, _pushedexpression#26, d_year#24]
Keys [3]: [d_year#24, ss_item_sk#1, ss_customer_sk#2]
Functions [3]: [partial_sum(_pushedexpression#20), partial_sum(_pushedexpression#25), partial_sum(_pushedexpression#26)]
Aggregate Attributes [5]: [sum#27, sum#28, isEmpty#29, sum#30, isEmpty#31]
Results [8]: [d_year#24, ss_item_sk#1, ss_customer_sk#2, sum#32, sum#33, isEmpty#34, sum#35, isEmpty#36]

(21) Exchange
Input [8]: [d_year#24, ss_item_sk#1, ss_customer_sk#2, sum#32, sum#33, isEmpty#34, sum#35, isEmpty#36]
Arguments: hashpartitioning(d_year#24, ss_item_sk#1, ss_customer_sk#2, 5), ENSURE_REQUIREMENTS, [id=#37]

(22) HashAggregate [codegen id : 7]
Input [8]: [d_year#24, ss_item_sk#1, ss_customer_sk#2, sum#32, sum#33, isEmpty#34, sum#35, isEmpty#36]
Keys [3]: [d_year#24, ss_item_sk#1, ss_customer_sk#2]
Functions [3]: [sum(_pushedexpression#20), sum(_pushedexpression#25), sum(_pushedexpression#26)]
Aggregate Attributes [3]: [sum(_pushedexpression#20)#38, sum(_pushedexpression#25)#39, sum(_pushedexpression#26)#40]
Results [6]: [d_year#24 AS ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, sum(_pushedexpression#20)#38 AS ss_qty#42, cast(sum(_pushedexpression#25)#39 as decimal(17,2)) AS ss_wc#43, cast(sum(_pushedexpression#26)#40 as decimal(17,2)) AS ss_sp#44]

(23) Sort [codegen id : 7]
Input [6]: [ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, ss_qty#42, ss_wc#43, ss_sp#44]
Arguments: [ss_sold_year#41 ASC NULLS FIRST, ss_item_sk#1 ASC NULLS FIRST, ss_customer_sk#2 ASC NULLS FIRST], false, 0

(24) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#78), dynamicpruningexpression(ws_sold_date_sk#78 IN dynamicpruning#79)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(25) ColumnarToRow [codegen id : 8]
Input [34]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78]

(26) Filter [codegen id : 8]
Input [34]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78]
Condition : (isnotnull(ws_item_sk#47) AND isnotnull(ws_bill_customer_sk#48))

(27) Exchange
Input [34]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78]
Arguments: hashpartitioning(ws_order_number#61, ws_item_sk#47, 5), ENSURE_REQUIREMENTS, [id=#80]

(28) Sort [codegen id : 9]
Input [34]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78]
Arguments: [ws_order_number#61 ASC NULLS FIRST, ws_item_sk#47 ASC NULLS FIRST], false, 0

(29) Scan parquet default.web_returns
Output [24]: [wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_returns]
PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_hdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_customer_sk:int,wr_returning_cdemo_sk:int,wr_returning_hdemo_sk:int,wr_returning_addr_sk:int,wr_web_page_sk:int,wr_reason_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2),wr_return_tax:decimal(7,2),wr_return_amt_inc_tax:decimal(7,2),wr_fee:decimal(7,2),wr_return_ship_cost:decimal(7,2),wr_refunded_cash:decimal(7,2),wr_reversed_charge:decimal(7,2),wr_account_credit:decimal(7,2),wr_net_loss:decimal(7,2)>

(30) ColumnarToRow [codegen id : 10]
Input [24]: [wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]

(31) Filter [codegen id : 10]
Input [24]: [wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]
Condition : (isnotnull(wr_order_number#93) AND isnotnull(wr_item_sk#82))

(32) Exchange
Input [24]: [wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]
Arguments: hashpartitioning(wr_order_number#93, wr_item_sk#82, 5), ENSURE_REQUIREMENTS, [id=#105]

(33) Sort [codegen id : 11]
Input [24]: [wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]
Arguments: [wr_order_number#93 ASC NULLS FIRST, wr_item_sk#82 ASC NULLS FIRST], false, 0

(34) SortMergeJoin [codegen id : 13]
Left keys [2]: [ws_order_number#61, ws_item_sk#47]
Right keys [2]: [wr_order_number#93, wr_item_sk#82]
Join condition: None

(35) Filter [codegen id : 13]
Input [58]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78, wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]
Condition : isnull(wr_order_number#93)

(36) HashAggregate [codegen id : 13]
Input [58]: [ws_sold_time_sk#45, ws_ship_date_sk#46, ws_item_sk#47, ws_bill_customer_sk#48, ws_bill_cdemo_sk#49, ws_bill_hdemo_sk#50, ws_bill_addr_sk#51, ws_ship_customer_sk#52, ws_ship_cdemo_sk#53, ws_ship_hdemo_sk#54, ws_ship_addr_sk#55, ws_web_page_sk#56, ws_web_site_sk#57, ws_ship_mode_sk#58, ws_warehouse_sk#59, ws_promo_sk#60, ws_order_number#61, ws_quantity#62, ws_wholesale_cost#63, ws_list_price#64, ws_sales_price#65, ws_ext_discount_amt#66, ws_ext_sales_price#67, ws_ext_wholesale_cost#68, ws_ext_list_price#69, ws_ext_tax#70, ws_coupon_amt#71, ws_ext_ship_cost#72, ws_net_paid#73, ws_net_paid_inc_tax#74, ws_net_paid_inc_ship#75, ws_net_paid_inc_ship_tax#76, ws_net_profit#77, ws_sold_date_sk#78, wr_returned_time_sk#81, wr_item_sk#82, wr_refunded_customer_sk#83, wr_refunded_cdemo_sk#84, wr_refunded_hdemo_sk#85, wr_refunded_addr_sk#86, wr_returning_customer_sk#87, wr_returning_cdemo_sk#88, wr_returning_hdemo_sk#89, wr_returning_addr_sk#90, wr_web_page_sk#91, wr_reason_sk#92, wr_order_number#93, wr_return_quantity#94, wr_return_amt#95, wr_return_tax#96, wr_return_amt_inc_tax#97, wr_fee#98, wr_return_ship_cost#99, wr_refunded_cash#100, wr_reversed_charge#101, wr_account_credit#102, wr_net_loss#103, wr_returned_date_sk#104]
Keys [3]: [ws_sold_date_sk#78, ws_item_sk#47, ws_bill_customer_sk#48]
Functions [3]: [partial_sum(ws_quantity#62), partial_sum(UnscaledValue(ws_wholesale_cost#63)), partial_sum(UnscaledValue(ws_sales_price#65))]
Aggregate Attributes [3]: [sum#106, sum#107, sum#108]
Results [6]: [ws_sold_date_sk#78, ws_item_sk#47, ws_bill_customer_sk#48, sum#109, sum#110, sum#111]

(37) Project [codegen id : 13]
Output [6]: [ws_sold_date_sk#78, ws_item_sk#47, ws_bill_customer_sk#48, sum#109 AS _pushedexpression#112, sum#110 AS _pushedexpression#113, sum#111 AS _pushedexpression#114]
Input [6]: [ws_sold_date_sk#78, ws_item_sk#47, ws_bill_customer_sk#48, sum#109, sum#110, sum#111]

(38) ReusedExchange [Reuses operator id: 82]
Output [2]: [d_date_sk#115, d_year#116]

(39) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [ws_sold_date_sk#78]
Right keys [1]: [d_date_sk#115]
Join condition: None

(40) Project [codegen id : 13]
Output [6]: [ws_item_sk#47, ws_bill_customer_sk#48, _pushedexpression#112, _pushedexpression#117, _pushedexpression#118, d_year#116]
Input [8]: [ws_sold_date_sk#78, ws_item_sk#47, ws_bill_customer_sk#48, _pushedexpression#112, _pushedexpression#113, _pushedexpression#114, d_date_sk#115, d_year#116]

(41) HashAggregate [codegen id : 13]
Input [6]: [ws_item_sk#47, ws_bill_customer_sk#48, _pushedexpression#112, _pushedexpression#117, _pushedexpression#118, d_year#116]
Keys [3]: [d_year#116, ws_item_sk#47, ws_bill_customer_sk#48]
Functions [3]: [partial_sum(_pushedexpression#112), partial_sum(_pushedexpression#117), partial_sum(_pushedexpression#118)]
Aggregate Attributes [5]: [sum#119, sum#120, isEmpty#121, sum#122, isEmpty#123]
Results [8]: [d_year#116, ws_item_sk#47, ws_bill_customer_sk#48, sum#124, sum#125, isEmpty#126, sum#127, isEmpty#128]

(42) Exchange
Input [8]: [d_year#116, ws_item_sk#47, ws_bill_customer_sk#48, sum#124, sum#125, isEmpty#126, sum#127, isEmpty#128]
Arguments: hashpartitioning(d_year#116, ws_item_sk#47, ws_bill_customer_sk#48, 5), ENSURE_REQUIREMENTS, [id=#129]

(43) HashAggregate [codegen id : 14]
Input [8]: [d_year#116, ws_item_sk#47, ws_bill_customer_sk#48, sum#124, sum#125, isEmpty#126, sum#127, isEmpty#128]
Keys [3]: [d_year#116, ws_item_sk#47, ws_bill_customer_sk#48]
Functions [3]: [sum(_pushedexpression#112), sum(_pushedexpression#117), sum(_pushedexpression#118)]
Aggregate Attributes [3]: [sum(_pushedexpression#112)#130, sum(_pushedexpression#117)#131, sum(_pushedexpression#118)#132]
Results [6]: [d_year#116 AS ws_sold_year#133, ws_item_sk#47, ws_bill_customer_sk#48 AS ws_customer_sk#134, sum(_pushedexpression#112)#130 AS ws_qty#135, cast(sum(_pushedexpression#117)#131 as decimal(17,2)) AS ws_wc#136, cast(sum(_pushedexpression#118)#132 as decimal(17,2)) AS ws_sp#137]

(44) Filter [codegen id : 14]
Input [6]: [ws_sold_year#133, ws_item_sk#47, ws_customer_sk#134, ws_qty#135, ws_wc#136, ws_sp#137]
Condition : (coalesce(ws_qty#135, 0) > 0)

(45) Sort [codegen id : 14]
Input [6]: [ws_sold_year#133, ws_item_sk#47, ws_customer_sk#134, ws_qty#135, ws_wc#136, ws_sp#137]
Arguments: [ws_sold_year#133 ASC NULLS FIRST, ws_item_sk#47 ASC NULLS FIRST, ws_customer_sk#134 ASC NULLS FIRST], false, 0

(46) SortMergeJoin [codegen id : 15]
Left keys [3]: [ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2]
Right keys [3]: [ws_sold_year#133, ws_item_sk#47, ws_customer_sk#134]
Join condition: None

(47) Project [codegen id : 15]
Output [9]: [ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, ss_qty#42, ss_wc#43, ss_sp#44, ws_qty#135, ws_wc#136, ws_sp#137]
Input [12]: [ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, ss_qty#42, ss_wc#43, ss_sp#44, ws_sold_year#133, ws_item_sk#47, ws_customer_sk#134, ws_qty#135, ws_wc#136, ws_sp#137]

(48) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#171), dynamicpruningexpression(cs_sold_date_sk#171 IN dynamicpruning#79)]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(49) ColumnarToRow [codegen id : 16]
Input [34]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171]

(50) Filter [codegen id : 16]
Input [34]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171]
Condition : (isnotnull(cs_item_sk#152) AND isnotnull(cs_bill_customer_sk#140))

(51) Exchange
Input [34]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171]
Arguments: hashpartitioning(cs_order_number#154, cs_item_sk#152, 5), ENSURE_REQUIREMENTS, [id=#172]

(52) Sort [codegen id : 17]
Input [34]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171]
Arguments: [cs_order_number#154 ASC NULLS FIRST, cs_item_sk#152 ASC NULLS FIRST], false, 0

(53) Scan parquet default.catalog_returns
Output [27]: [cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_returned_time_sk:int,cr_item_sk:int,cr_refunded_customer_sk:int,cr_refunded_cdemo_sk:int,cr_refunded_hdemo_sk:int,cr_refunded_addr_sk:int,cr_returning_customer_sk:int,cr_returning_cdemo_sk:int,cr_returning_hdemo_sk:int,cr_returning_addr_sk:int,cr_call_center_sk:int,cr_catalog_page_sk:int,cr_ship_mode_sk:int,cr_warehouse_sk:int,cr_reason_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2),cr_return_tax:decimal(7,2),cr_return_amt_inc_tax:decimal(7,2),cr_fee:decimal(7,2),cr_return_ship_cost:decimal(7,2),cr_refunded_cash:decimal(7,2),cr_reversed_charge:decimal(7,2),cr_store_credit:decimal(7,2),cr_net_loss:decimal(7,2)>

(54) ColumnarToRow [codegen id : 18]
Input [27]: [cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]

(55) Filter [codegen id : 18]
Input [27]: [cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]
Condition : (isnotnull(cr_order_number#188) AND isnotnull(cr_item_sk#174))

(56) Exchange
Input [27]: [cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]
Arguments: hashpartitioning(cr_order_number#188, cr_item_sk#174, 5), ENSURE_REQUIREMENTS, [id=#200]

(57) Sort [codegen id : 19]
Input [27]: [cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]
Arguments: [cr_order_number#188 ASC NULLS FIRST, cr_item_sk#174 ASC NULLS FIRST], false, 0

(58) SortMergeJoin [codegen id : 21]
Left keys [2]: [cs_order_number#154, cs_item_sk#152]
Right keys [2]: [cr_order_number#188, cr_item_sk#174]
Join condition: None

(59) Filter [codegen id : 21]
Input [61]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171, cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]
Condition : isnull(cr_order_number#188)

(60) HashAggregate [codegen id : 21]
Input [61]: [cs_sold_time_sk#138, cs_ship_date_sk#139, cs_bill_customer_sk#140, cs_bill_cdemo_sk#141, cs_bill_hdemo_sk#142, cs_bill_addr_sk#143, cs_ship_customer_sk#144, cs_ship_cdemo_sk#145, cs_ship_hdemo_sk#146, cs_ship_addr_sk#147, cs_call_center_sk#148, cs_catalog_page_sk#149, cs_ship_mode_sk#150, cs_warehouse_sk#151, cs_item_sk#152, cs_promo_sk#153, cs_order_number#154, cs_quantity#155, cs_wholesale_cost#156, cs_list_price#157, cs_sales_price#158, cs_ext_discount_amt#159, cs_ext_sales_price#160, cs_ext_wholesale_cost#161, cs_ext_list_price#162, cs_ext_tax#163, cs_coupon_amt#164, cs_ext_ship_cost#165, cs_net_paid#166, cs_net_paid_inc_tax#167, cs_net_paid_inc_ship#168, cs_net_paid_inc_ship_tax#169, cs_net_profit#170, cs_sold_date_sk#171, cr_returned_time_sk#173, cr_item_sk#174, cr_refunded_customer_sk#175, cr_refunded_cdemo_sk#176, cr_refunded_hdemo_sk#177, cr_refunded_addr_sk#178, cr_returning_customer_sk#179, cr_returning_cdemo_sk#180, cr_returning_hdemo_sk#181, cr_returning_addr_sk#182, cr_call_center_sk#183, cr_catalog_page_sk#184, cr_ship_mode_sk#185, cr_warehouse_sk#186, cr_reason_sk#187, cr_order_number#188, cr_return_quantity#189, cr_return_amount#190, cr_return_tax#191, cr_return_amt_inc_tax#192, cr_fee#193, cr_return_ship_cost#194, cr_refunded_cash#195, cr_reversed_charge#196, cr_store_credit#197, cr_net_loss#198, cr_returned_date_sk#199]
Keys [3]: [cs_sold_date_sk#171, cs_item_sk#152, cs_bill_customer_sk#140]
Functions [3]: [partial_sum(cs_quantity#155), partial_sum(UnscaledValue(cs_wholesale_cost#156)), partial_sum(UnscaledValue(cs_sales_price#158))]
Aggregate Attributes [3]: [sum#201, sum#202, sum#203]
Results [6]: [cs_sold_date_sk#171, cs_item_sk#152, cs_bill_customer_sk#140, sum#204, sum#205, sum#206]

(61) Project [codegen id : 21]
Output [6]: [cs_sold_date_sk#171, cs_item_sk#152, cs_bill_customer_sk#140, sum#204 AS _pushedexpression#207, sum#205 AS _pushedexpression#208, sum#206 AS _pushedexpression#209]
Input [6]: [cs_sold_date_sk#171, cs_item_sk#152, cs_bill_customer_sk#140, sum#204, sum#205, sum#206]

(62) ReusedExchange [Reuses operator id: 82]
Output [2]: [d_date_sk#210, d_year#211]

(63) BroadcastHashJoin [codegen id : 21]
Left keys [1]: [cs_sold_date_sk#171]
Right keys [1]: [d_date_sk#210]
Join condition: None

(64) Project [codegen id : 21]
Output [6]: [cs_item_sk#152, cs_bill_customer_sk#140, _pushedexpression#207, _pushedexpression#212, _pushedexpression#213, d_year#211]
Input [8]: [cs_sold_date_sk#171, cs_item_sk#152, cs_bill_customer_sk#140, _pushedexpression#207, _pushedexpression#208, _pushedexpression#209, d_date_sk#210, d_year#211]

(65) HashAggregate [codegen id : 21]
Input [6]: [cs_item_sk#152, cs_bill_customer_sk#140, _pushedexpression#207, _pushedexpression#212, _pushedexpression#213, d_year#211]
Keys [3]: [d_year#211, cs_item_sk#152, cs_bill_customer_sk#140]
Functions [3]: [partial_sum(_pushedexpression#207), partial_sum(_pushedexpression#212), partial_sum(_pushedexpression#213)]
Aggregate Attributes [5]: [sum#214, sum#215, isEmpty#216, sum#217, isEmpty#218]
Results [8]: [d_year#211, cs_item_sk#152, cs_bill_customer_sk#140, sum#219, sum#220, isEmpty#221, sum#222, isEmpty#223]

(66) Exchange
Input [8]: [d_year#211, cs_item_sk#152, cs_bill_customer_sk#140, sum#219, sum#220, isEmpty#221, sum#222, isEmpty#223]
Arguments: hashpartitioning(d_year#211, cs_item_sk#152, cs_bill_customer_sk#140, 5), ENSURE_REQUIREMENTS, [id=#224]

(67) HashAggregate [codegen id : 22]
Input [8]: [d_year#211, cs_item_sk#152, cs_bill_customer_sk#140, sum#219, sum#220, isEmpty#221, sum#222, isEmpty#223]
Keys [3]: [d_year#211, cs_item_sk#152, cs_bill_customer_sk#140]
Functions [3]: [sum(_pushedexpression#207), sum(_pushedexpression#212), sum(_pushedexpression#213)]
Aggregate Attributes [3]: [sum(_pushedexpression#207)#225, sum(_pushedexpression#212)#226, sum(_pushedexpression#213)#227]
Results [6]: [d_year#211 AS cs_sold_year#228, cs_item_sk#152, cs_bill_customer_sk#140 AS cs_customer_sk#229, sum(_pushedexpression#207)#225 AS cs_qty#230, cast(sum(_pushedexpression#212)#226 as decimal(17,2)) AS cs_wc#231, cast(sum(_pushedexpression#213)#227 as decimal(17,2)) AS cs_sp#232]

(68) Filter [codegen id : 22]
Input [6]: [cs_sold_year#228, cs_item_sk#152, cs_customer_sk#229, cs_qty#230, cs_wc#231, cs_sp#232]
Condition : (coalesce(cs_qty#230, 0) > 0)

(69) Sort [codegen id : 22]
Input [6]: [cs_sold_year#228, cs_item_sk#152, cs_customer_sk#229, cs_qty#230, cs_wc#231, cs_sp#232]
Arguments: [cs_sold_year#228 ASC NULLS FIRST, cs_item_sk#152 ASC NULLS FIRST, cs_customer_sk#229 ASC NULLS FIRST], false, 0

(70) SortMergeJoin [codegen id : 23]
Left keys [3]: [ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2]
Right keys [3]: [cs_sold_year#228, cs_item_sk#152, cs_customer_sk#229]
Join condition: None

(71) Project [codegen id : 23]
Output [13]: [round((cast(ss_qty#42 as double) / cast(coalesce((ws_qty#135 + cs_qty#230), 1) as double)), 2) AS ratio#233, ss_qty#42 AS store_qty#234, ss_wc#43 AS store_wholesale_cost#235, ss_sp#44 AS store_sales_price#236, (coalesce(ws_qty#135, 0) + coalesce(cs_qty#230, 0)) AS other_chan_qty#237, CheckOverflow((promote_precision(cast(coalesce(ws_wc#136, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_wc#231, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS other_chan_wholesale_cost#238, CheckOverflow((promote_precision(cast(coalesce(ws_sp#137, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_sp#232, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS other_chan_sales_price#239, ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, ss_qty#42, ss_wc#43, ss_sp#44]
Input [15]: [ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, ss_qty#42, ss_wc#43, ss_sp#44, ws_qty#135, ws_wc#136, ws_sp#137, cs_sold_year#228, cs_item_sk#152, cs_customer_sk#229, cs_qty#230, cs_wc#231, cs_sp#232]

(72) TakeOrderedAndProject
Input [13]: [ratio#233, store_qty#234, store_wholesale_cost#235, store_sales_price#236, other_chan_qty#237, other_chan_wholesale_cost#238, other_chan_sales_price#239, ss_sold_year#41, ss_item_sk#1, ss_customer_sk#2, ss_qty#42, ss_wc#43, ss_sp#44]
Arguments: 100, [ss_sold_year#41 ASC NULLS FIRST, ss_item_sk#1 ASC NULLS FIRST, ss_customer_sk#2 ASC NULLS FIRST, ss_qty#42 DESC NULLS LAST, ss_wc#43 DESC NULLS LAST, ss_sp#44 DESC NULLS LAST, other_chan_qty#237 ASC NULLS FIRST, other_chan_wholesale_cost#238 ASC NULLS FIRST, other_chan_sales_price#239 ASC NULLS FIRST, ratio#233 ASC NULLS FIRST], [ratio#233, store_qty#234, store_wholesale_cost#235, store_sales_price#236, other_chan_qty#237, other_chan_wholesale_cost#238, other_chan_sales_price#239]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#7 IN dynamicpruning#8
BroadcastExchange (77)
+- * HashAggregate (76)
   +- * Filter (75)
      +- * ColumnarToRow (74)
         +- Scan parquet default.date_dim (73)


(73) Scan parquet default.date_dim
Output [2]: [d_date_sk#23, d_year#24]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(74) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#23, d_year#24]

(75) Filter [codegen id : 1]
Input [2]: [d_date_sk#23, d_year#24]
Condition : ((isnotnull(d_year#24) AND (d_year#24 = 2000)) AND isnotnull(d_date_sk#23))

(76) HashAggregate [codegen id : 1]
Input [2]: [d_date_sk#23, d_year#24]
Keys [2]: [d_date_sk#23, d_year#24]
Functions: []
Aggregate Attributes: []
Results [2]: [d_date_sk#23, d_year#24]

(77) BroadcastExchange
Input [2]: [d_date_sk#23, d_year#24]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#240]

Subquery:2 Hosting operator id = 24 Hosting Expression = ws_sold_date_sk#78 IN dynamicpruning#79
BroadcastExchange (82)
+- * HashAggregate (81)
   +- * Filter (80)
      +- * ColumnarToRow (79)
         +- Scan parquet default.date_dim (78)


(78) Scan parquet default.date_dim
Output [28]: [d_date_sk#115, d_date_id#241, d_date#242, d_month_seq#243, d_week_seq#244, d_quarter_seq#245, d_year#116, d_dow#246, d_moy#247, d_dom#248, d_qoy#249, d_fy_year#250, d_fy_quarter_seq#251, d_fy_week_seq#252, d_day_name#253, d_quarter_name#254, d_holiday#255, d_weekend#256, d_following_holiday#257, d_first_dom#258, d_last_dom#259, d_same_day_ly#260, d_same_day_lq#261, d_current_day#262, d_current_week#263, d_current_month#264, d_current_quarter#265, d_current_year#266]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk), EqualTo(d_year,2000), IsNotNull(d_year)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(79) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#115, d_date_id#241, d_date#242, d_month_seq#243, d_week_seq#244, d_quarter_seq#245, d_year#116, d_dow#246, d_moy#247, d_dom#248, d_qoy#249, d_fy_year#250, d_fy_quarter_seq#251, d_fy_week_seq#252, d_day_name#253, d_quarter_name#254, d_holiday#255, d_weekend#256, d_following_holiday#257, d_first_dom#258, d_last_dom#259, d_same_day_ly#260, d_same_day_lq#261, d_current_day#262, d_current_week#263, d_current_month#264, d_current_quarter#265, d_current_year#266]

(80) Filter [codegen id : 1]
Input [28]: [d_date_sk#115, d_date_id#241, d_date#242, d_month_seq#243, d_week_seq#244, d_quarter_seq#245, d_year#116, d_dow#246, d_moy#247, d_dom#248, d_qoy#249, d_fy_year#250, d_fy_quarter_seq#251, d_fy_week_seq#252, d_day_name#253, d_quarter_name#254, d_holiday#255, d_weekend#256, d_following_holiday#257, d_first_dom#258, d_last_dom#259, d_same_day_ly#260, d_same_day_lq#261, d_current_day#262, d_current_week#263, d_current_month#264, d_current_quarter#265, d_current_year#266]
Condition : ((isnotnull(d_date_sk#115) AND (d_year#116 = 2000)) AND isnotnull(d_year#116))

(81) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#115, d_date_id#241, d_date#242, d_month_seq#243, d_week_seq#244, d_quarter_seq#245, d_year#116, d_dow#246, d_moy#247, d_dom#248, d_qoy#249, d_fy_year#250, d_fy_quarter_seq#251, d_fy_week_seq#252, d_day_name#253, d_quarter_name#254, d_holiday#255, d_weekend#256, d_following_holiday#257, d_first_dom#258, d_last_dom#259, d_same_day_ly#260, d_same_day_lq#261, d_current_day#262, d_current_week#263, d_current_month#264, d_current_quarter#265, d_current_year#266]
Keys [2]: [d_date_sk#115, d_year#116]
Functions: []
Aggregate Attributes: []
Results [2]: [d_date_sk#115, d_year#116]

(82) BroadcastExchange
Input [2]: [d_date_sk#115, d_year#116]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#267]

Subquery:3 Hosting operator id = 48 Hosting Expression = cs_sold_date_sk#171 IN dynamicpruning#79


