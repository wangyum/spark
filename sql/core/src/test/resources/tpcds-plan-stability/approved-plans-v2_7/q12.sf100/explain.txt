== Physical Plan ==
TakeOrderedAndProject (31)
+- * Project (30)
   +- Window (29)
      +- * Sort (28)
         +- Exchange (27)
            +- * HashAggregate (26)
               +- Exchange (25)
                  +- * HashAggregate (24)
                     +- * Project (23)
                        +- * SortMergeJoin Inner (22)
                           :- * Sort (15)
                           :  +- Exchange (14)
                           :     +- * Project (13)
                           :        +- * HashAggregate (12)
                           :           +- * SortMergeJoin Inner (11)
                           :              :- * Sort (5)
                           :              :  +- Exchange (4)
                           :              :     +- * Filter (3)
                           :              :        +- * ColumnarToRow (2)
                           :              :           +- Scan parquet default.web_sales (1)
                           :              +- * Sort (10)
                           :                 +- Exchange (9)
                           :                    +- * Filter (8)
                           :                       +- * ColumnarToRow (7)
                           :                          +- Scan parquet default.item (6)
                           +- * Sort (21)
                              +- Exchange (20)
                                 +- * HashAggregate (19)
                                    +- * Filter (18)
                                       +- * ColumnarToRow (17)
                                          +- Scan parquet default.date_dim (16)


(1) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(true)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]

(3) Filter [codegen id : 1]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Condition : isnotnull(ws_item_sk#3)

(4) Exchange
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Arguments: hashpartitioning(ws_item_sk#3, 5), ENSURE_REQUIREMENTS, [id=#35]

(5) Sort [codegen id : 2]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Arguments: [ws_item_sk#3 ASC NULLS FIRST], false, 0

(6) Scan parquet default.item
Output [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_category, [Books                                             ,Home                                              ,Sports                                            ]), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(7) ColumnarToRow [codegen id : 3]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]

(8) Filter [codegen id : 3]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Condition : (i_category#48 IN (Sports                                            ,Books                                             ,Home                                              ) AND isnotnull(i_item_sk#36))

(9) Exchange
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Arguments: hashpartitioning(i_item_sk#36, 5), ENSURE_REQUIREMENTS, [id=#58]

(10) Sort [codegen id : 4]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Arguments: [i_item_sk#36 ASC NULLS FIRST], false, 0

(11) SortMergeJoin [codegen id : 5]
Left keys [1]: [ws_item_sk#3]
Right keys [1]: [i_item_sk#36]
Join condition: None

(12) HashAggregate [codegen id : 5]
Input [56]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34, i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Keys [6]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#23))]
Aggregate Attributes [1]: [sum#59]
Results [7]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#60]

(13) Project [codegen id : 5]
Output [7]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#60 AS _pushedexpression#61]
Input [7]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#60]

(14) Exchange
Input [7]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#61]
Arguments: hashpartitioning(ws_sold_date_sk#34, 5), ENSURE_REQUIREMENTS, [id=#62]

(15) Sort [codegen id : 6]
Input [7]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#61]
Arguments: [ws_sold_date_sk#34 ASC NULLS FIRST], false, 0

(16) Scan parquet default.date_dim
Output [28]: [d_date_sk#63, d_date_id#64, d_date#65, d_month_seq#66, d_week_seq#67, d_quarter_seq#68, d_year#69, d_dow#70, d_moy#71, d_dom#72, d_qoy#73, d_fy_year#74, d_fy_quarter_seq#75, d_fy_week_seq#76, d_day_name#77, d_quarter_name#78, d_holiday#79, d_weekend#80, d_following_holiday#81, d_first_dom#82, d_last_dom#83, d_same_day_ly#84, d_same_day_lq#85, d_current_day#86, d_current_week#87, d_current_month#88, d_current_quarter#89, d_current_year#90]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(17) ColumnarToRow [codegen id : 7]
Input [28]: [d_date_sk#63, d_date_id#64, d_date#65, d_month_seq#66, d_week_seq#67, d_quarter_seq#68, d_year#69, d_dow#70, d_moy#71, d_dom#72, d_qoy#73, d_fy_year#74, d_fy_quarter_seq#75, d_fy_week_seq#76, d_day_name#77, d_quarter_name#78, d_holiday#79, d_weekend#80, d_following_holiday#81, d_first_dom#82, d_last_dom#83, d_same_day_ly#84, d_same_day_lq#85, d_current_day#86, d_current_week#87, d_current_month#88, d_current_quarter#89, d_current_year#90]

(18) Filter [codegen id : 7]
Input [28]: [d_date_sk#63, d_date_id#64, d_date#65, d_month_seq#66, d_week_seq#67, d_quarter_seq#68, d_year#69, d_dow#70, d_moy#71, d_dom#72, d_qoy#73, d_fy_year#74, d_fy_quarter_seq#75, d_fy_week_seq#76, d_day_name#77, d_quarter_name#78, d_holiday#79, d_weekend#80, d_following_holiday#81, d_first_dom#82, d_last_dom#83, d_same_day_ly#84, d_same_day_lq#85, d_current_day#86, d_current_week#87, d_current_month#88, d_current_quarter#89, d_current_year#90]
Condition : (((isnotnull(d_date#65) AND (d_date#65 >= 1999-02-22)) AND (d_date#65 <= 1999-03-24)) AND isnotnull(d_date_sk#63))

(19) HashAggregate [codegen id : 7]
Input [28]: [d_date_sk#63, d_date_id#64, d_date#65, d_month_seq#66, d_week_seq#67, d_quarter_seq#68, d_year#69, d_dow#70, d_moy#71, d_dom#72, d_qoy#73, d_fy_year#74, d_fy_quarter_seq#75, d_fy_week_seq#76, d_day_name#77, d_quarter_name#78, d_holiday#79, d_weekend#80, d_following_holiday#81, d_first_dom#82, d_last_dom#83, d_same_day_ly#84, d_same_day_lq#85, d_current_day#86, d_current_week#87, d_current_month#88, d_current_quarter#89, d_current_year#90]
Keys [1]: [d_date_sk#63]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#63]

(20) Exchange
Input [1]: [d_date_sk#63]
Arguments: hashpartitioning(d_date_sk#63, 5), ENSURE_REQUIREMENTS, [id=#91]

(21) Sort [codegen id : 8]
Input [1]: [d_date_sk#63]
Arguments: [d_date_sk#63 ASC NULLS FIRST], false, 0

(22) SortMergeJoin [codegen id : 9]
Left keys [1]: [ws_sold_date_sk#34]
Right keys [1]: [d_date_sk#63]
Join condition: None

(23) Project [codegen id : 9]
Output [6]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#92]
Input [8]: [ws_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#61, d_date_sk#63]

(24) HashAggregate [codegen id : 9]
Input [6]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#92]
Keys [5]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41]
Functions [1]: [partial_sum(_pushedexpression#92)]
Aggregate Attributes [2]: [sum#93, isEmpty#94]
Results [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#95, isEmpty#96]

(25) Exchange
Input [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#95, isEmpty#96]
Arguments: hashpartitioning(i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, 5), ENSURE_REQUIREMENTS, [id=#97]

(26) HashAggregate [codegen id : 10]
Input [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#95, isEmpty#96]
Keys [5]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41]
Functions [1]: [sum(_pushedexpression#92)]
Aggregate Attributes [1]: [sum(_pushedexpression#92)#98]
Results [8]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, cast(sum(_pushedexpression#92)#98 as decimal(17,2)) AS itemrevenue#99, cast(sum(_pushedexpression#92)#98 as decimal(17,2)) AS _w0#100, cast(sum(_pushedexpression#92)#98 as decimal(17,2)) AS _w1#101]

(27) Exchange
Input [8]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, _w0#100, _w1#101]
Arguments: hashpartitioning(i_class#46, 5), ENSURE_REQUIREMENTS, [id=#102]

(28) Sort [codegen id : 11]
Input [8]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, _w0#100, _w1#101]
Arguments: [i_class#46 ASC NULLS FIRST], false, 0

(29) Window
Input [8]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, _w0#100, _w1#101]
Arguments: [sum(_w1#101) windowspecdefinition(i_class#46, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#103], [i_class#46]

(30) Project [codegen id : 12]
Output [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#100) * 100.00), DecimalType(21,2)) as decimal(27,2))) / promote_precision(_we0#103)), DecimalType(38,17)) AS revenueratio#104]
Input [9]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, _w0#100, _w1#101, _we0#103]

(31) TakeOrderedAndProject
Input [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, revenueratio#104]
Arguments: 100, [i_category#48 ASC NULLS FIRST, i_class#46 ASC NULLS FIRST, i_item_id#37 ASC NULLS FIRST, i_item_desc#40 ASC NULLS FIRST, revenueratio#104 ASC NULLS FIRST], [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#99, revenueratio#104]

