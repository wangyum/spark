== Physical Plan ==
TakeOrderedAndProject (95)
+- * HashAggregate (94)
   +- Exchange (93)
      +- * HashAggregate (92)
         +- * Expand (91)
            +- Union (90)
               :- * Project (33)
               :  +- * BroadcastHashJoin LeftOuter BuildRight (32)
               :     :- * HashAggregate (17)
               :     :  +- Exchange (16)
               :     :     +- * HashAggregate (15)
               :     :        +- * Project (14)
               :     :           +- * BroadcastHashJoin Inner BuildRight (13)
               :     :              :- * Project (7)
               :     :              :  +- * HashAggregate (6)
               :     :              :     +- * BroadcastHashJoin Inner BuildRight (5)
               :     :              :        :- * Filter (3)
               :     :              :        :  +- * ColumnarToRow (2)
               :     :              :        :     +- Scan parquet default.store_sales (1)
               :     :              :        +- ReusedExchange (4)
               :     :              +- BroadcastExchange (12)
               :     :                 +- * HashAggregate (11)
               :     :                    +- * Filter (10)
               :     :                       +- * ColumnarToRow (9)
               :     :                          +- Scan parquet default.store (8)
               :     +- BroadcastExchange (31)
               :        +- * HashAggregate (30)
               :           +- Exchange (29)
               :              +- * HashAggregate (28)
               :                 +- * Project (27)
               :                    +- * BroadcastHashJoin Inner BuildRight (26)
               :                       :- * Project (24)
               :                       :  +- * HashAggregate (23)
               :                       :     +- * BroadcastHashJoin Inner BuildRight (22)
               :                       :        :- * Filter (20)
               :                       :        :  +- * ColumnarToRow (19)
               :                       :        :     +- Scan parquet default.store_returns (18)
               :                       :        +- ReusedExchange (21)
               :                       +- ReusedExchange (25)
               :- * Project (56)
               :  +- * BroadcastNestedLoopJoin Inner BuildLeft (55)
               :     :- BroadcastExchange (44)
               :     :  +- * HashAggregate (43)
               :     :     +- Exchange (42)
               :     :        +- * HashAggregate (41)
               :     :           +- * Project (40)
               :     :              +- * BroadcastHashJoin Inner BuildRight (39)
               :     :                 :- * Project (37)
               :     :                 :  +- * HashAggregate (36)
               :     :                 :     +- * ColumnarToRow (35)
               :     :                 :        +- Scan parquet default.catalog_sales (34)
               :     :                 +- ReusedExchange (38)
               :     +- * HashAggregate (54)
               :        +- Exchange (53)
               :           +- * HashAggregate (52)
               :              +- * Project (51)
               :                 +- * BroadcastHashJoin Inner BuildRight (50)
               :                    :- * Project (48)
               :                    :  +- * HashAggregate (47)
               :                    :     +- * ColumnarToRow (46)
               :                    :        +- Scan parquet default.catalog_returns (45)
               :                    +- ReusedExchange (49)
               +- * Project (89)
                  +- * BroadcastHashJoin LeftOuter BuildRight (88)
                     :- * HashAggregate (73)
                     :  +- Exchange (72)
                     :     +- * HashAggregate (71)
                     :        +- * Project (70)
                     :           +- * BroadcastHashJoin Inner BuildRight (69)
                     :              :- * Project (63)
                     :              :  +- * HashAggregate (62)
                     :              :     +- * BroadcastHashJoin Inner BuildRight (61)
                     :              :        :- * Filter (59)
                     :              :        :  +- * ColumnarToRow (58)
                     :              :        :     +- Scan parquet default.web_sales (57)
                     :              :        +- ReusedExchange (60)
                     :              +- BroadcastExchange (68)
                     :                 +- * HashAggregate (67)
                     :                    +- * Filter (66)
                     :                       +- * ColumnarToRow (65)
                     :                          +- Scan parquet default.web_page (64)
                     +- BroadcastExchange (87)
                        +- * HashAggregate (86)
                           +- Exchange (85)
                              +- * HashAggregate (84)
                                 +- * Project (83)
                                    +- * BroadcastHashJoin Inner BuildRight (82)
                                       :- * Project (80)
                                       :  +- * HashAggregate (79)
                                       :     +- * BroadcastHashJoin Inner BuildRight (78)
                                       :        :- * Filter (76)
                                       :        :  +- * ColumnarToRow (75)
                                       :        :     +- Scan parquet default.web_returns (74)
                                       :        +- ReusedExchange (77)
                                       +- ReusedExchange (81)


(1) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(3) Filter [codegen id : 3]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : isnotnull(ss_store_sk#7)

(4) ReusedExchange [Reuses operator id: 99]
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(5) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#23]
Right keys [1]: [d_date_sk#25]
Join condition: None

(6) HashAggregate [codegen id : 3]
Input [51]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Keys [1]: [ss_store_sk#7]
Functions [2]: [partial_sum(UnscaledValue(ss_ext_sales_price#15)), partial_sum(UnscaledValue(ss_net_profit#22))]
Aggregate Attributes [2]: [sum#53, sum#54]
Results [3]: [ss_store_sk#7, sum#55, sum#56]

(7) Project [codegen id : 3]
Output [3]: [ss_store_sk#7, sum#55 AS _pushedexpression#57, sum#56 AS _pushedexpression#58]
Input [3]: [ss_store_sk#7, sum#55, sum#56]

(8) Scan parquet default.store
Output [29]: [s_store_sk#59, s_store_id#60, s_rec_start_date#61, s_rec_end_date#62, s_closed_date_sk#63, s_store_name#64, s_number_employees#65, s_floor_space#66, s_hours#67, s_manager#68, s_market_id#69, s_geography_class#70, s_market_desc#71, s_market_manager#72, s_division_id#73, s_division_name#74, s_company_id#75, s_company_name#76, s_street_number#77, s_street_name#78, s_street_type#79, s_suite_number#80, s_city#81, s_county#82, s_state#83, s_zip#84, s_country#85, s_gmt_offset#86, s_tax_percentage#87]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_id:string,s_rec_start_date:date,s_rec_end_date:date,s_closed_date_sk:int,s_store_name:string,s_number_employees:int,s_floor_space:int,s_hours:string,s_manager:string,s_market_id:int,s_geography_class:string,s_market_desc:string,s_market_manager:string,s_division_id:int,s_division_name:string,s_company_id:int,s_company_name:string,s_street_number:string,s_street_name:string,s_street_type:string,s_suite_number:string,s_city:string,s_county:string,s_state:string,s_zip:string,s_country:string,s_gmt_offset:decimal(5,2),s_tax_percentage:decimal(5,2)>

(9) ColumnarToRow [codegen id : 2]
Input [29]: [s_store_sk#59, s_store_id#60, s_rec_start_date#61, s_rec_end_date#62, s_closed_date_sk#63, s_store_name#64, s_number_employees#65, s_floor_space#66, s_hours#67, s_manager#68, s_market_id#69, s_geography_class#70, s_market_desc#71, s_market_manager#72, s_division_id#73, s_division_name#74, s_company_id#75, s_company_name#76, s_street_number#77, s_street_name#78, s_street_type#79, s_suite_number#80, s_city#81, s_county#82, s_state#83, s_zip#84, s_country#85, s_gmt_offset#86, s_tax_percentage#87]

(10) Filter [codegen id : 2]
Input [29]: [s_store_sk#59, s_store_id#60, s_rec_start_date#61, s_rec_end_date#62, s_closed_date_sk#63, s_store_name#64, s_number_employees#65, s_floor_space#66, s_hours#67, s_manager#68, s_market_id#69, s_geography_class#70, s_market_desc#71, s_market_manager#72, s_division_id#73, s_division_name#74, s_company_id#75, s_company_name#76, s_street_number#77, s_street_name#78, s_street_type#79, s_suite_number#80, s_city#81, s_county#82, s_state#83, s_zip#84, s_country#85, s_gmt_offset#86, s_tax_percentage#87]
Condition : isnotnull(s_store_sk#59)

(11) HashAggregate [codegen id : 2]
Input [29]: [s_store_sk#59, s_store_id#60, s_rec_start_date#61, s_rec_end_date#62, s_closed_date_sk#63, s_store_name#64, s_number_employees#65, s_floor_space#66, s_hours#67, s_manager#68, s_market_id#69, s_geography_class#70, s_market_desc#71, s_market_manager#72, s_division_id#73, s_division_name#74, s_company_id#75, s_company_name#76, s_street_number#77, s_street_name#78, s_street_type#79, s_suite_number#80, s_city#81, s_county#82, s_state#83, s_zip#84, s_country#85, s_gmt_offset#86, s_tax_percentage#87]
Keys [2]: [s_store_sk#59, s_store_sk#59]
Functions: []
Aggregate Attributes: []
Results [2]: [s_store_sk#59, s_store_sk#59]

(12) BroadcastExchange
Input [2]: [s_store_sk#59, s_store_sk#59]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#88]

(13) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#59]
Join condition: None

(14) Project [codegen id : 3]
Output [4]: [_pushedexpression#89, _pushedexpression#90, s_store_sk#59, s_store_sk#59]
Input [5]: [ss_store_sk#7, _pushedexpression#57, _pushedexpression#58, s_store_sk#59, s_store_sk#59]

(15) HashAggregate [codegen id : 3]
Input [4]: [_pushedexpression#89, _pushedexpression#90, s_store_sk#59, s_store_sk#59]
Keys [1]: [s_store_sk#59]
Functions [2]: [partial_sum(_pushedexpression#89), partial_sum(_pushedexpression#90)]
Aggregate Attributes [4]: [sum#91, isEmpty#92, sum#93, isEmpty#94]
Results [5]: [s_store_sk#59, sum#95, isEmpty#96, sum#97, isEmpty#98]

(16) Exchange
Input [5]: [s_store_sk#59, sum#95, isEmpty#96, sum#97, isEmpty#98]
Arguments: hashpartitioning(s_store_sk#59, 5), ENSURE_REQUIREMENTS, [id=#99]

(17) HashAggregate [codegen id : 8]
Input [5]: [s_store_sk#59, sum#95, isEmpty#96, sum#97, isEmpty#98]
Keys [1]: [s_store_sk#59]
Functions [2]: [sum(_pushedexpression#89), sum(_pushedexpression#90)]
Aggregate Attributes [2]: [sum(_pushedexpression#89)#100, sum(_pushedexpression#90)#101]
Results [3]: [s_store_sk#59, cast(sum(_pushedexpression#89)#100 as decimal(17,2)) AS sales#102, cast(sum(_pushedexpression#90)#101 as decimal(17,2)) AS profit#103]

(18) Scan parquet default.store_returns
Output [20]: [sr_return_time_sk#104, sr_item_sk#105, sr_customer_sk#106, sr_cdemo_sk#107, sr_hdemo_sk#108, sr_addr_sk#109, sr_store_sk#110, sr_reason_sk#111, sr_ticket_number#112, sr_return_quantity#113, sr_return_amt#114, sr_return_tax#115, sr_return_amt_inc_tax#116, sr_fee#117, sr_return_ship_cost#118, sr_refunded_cash#119, sr_reversed_charge#120, sr_store_credit#121, sr_net_loss#122, sr_returned_date_sk#123]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#123), dynamicpruningexpression(sr_returned_date_sk#123 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_return_time_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_cdemo_sk:int,sr_hdemo_sk:int,sr_addr_sk:int,sr_store_sk:int,sr_reason_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2),sr_return_tax:decimal(7,2),sr_return_amt_inc_tax:decimal(7,2),sr_fee:decimal(7,2),sr_return_ship_cost:decimal(7,2),sr_refunded_cash:decimal(7,2),sr_reversed_charge:decimal(7,2),sr_store_credit:decimal(7,2),sr_net_loss:decimal(7,2)>

(19) ColumnarToRow [codegen id : 6]
Input [20]: [sr_return_time_sk#104, sr_item_sk#105, sr_customer_sk#106, sr_cdemo_sk#107, sr_hdemo_sk#108, sr_addr_sk#109, sr_store_sk#110, sr_reason_sk#111, sr_ticket_number#112, sr_return_quantity#113, sr_return_amt#114, sr_return_tax#115, sr_return_amt_inc_tax#116, sr_fee#117, sr_return_ship_cost#118, sr_refunded_cash#119, sr_reversed_charge#120, sr_store_credit#121, sr_net_loss#122, sr_returned_date_sk#123]

(20) Filter [codegen id : 6]
Input [20]: [sr_return_time_sk#104, sr_item_sk#105, sr_customer_sk#106, sr_cdemo_sk#107, sr_hdemo_sk#108, sr_addr_sk#109, sr_store_sk#110, sr_reason_sk#111, sr_ticket_number#112, sr_return_quantity#113, sr_return_amt#114, sr_return_tax#115, sr_return_amt_inc_tax#116, sr_fee#117, sr_return_ship_cost#118, sr_refunded_cash#119, sr_reversed_charge#120, sr_store_credit#121, sr_net_loss#122, sr_returned_date_sk#123]
Condition : isnotnull(sr_store_sk#110)

(21) ReusedExchange [Reuses operator id: 99]
Output [28]: [d_date_sk#124, d_date_id#125, d_date#126, d_month_seq#127, d_week_seq#128, d_quarter_seq#129, d_year#130, d_dow#131, d_moy#132, d_dom#133, d_qoy#134, d_fy_year#135, d_fy_quarter_seq#136, d_fy_week_seq#137, d_day_name#138, d_quarter_name#139, d_holiday#140, d_weekend#141, d_following_holiday#142, d_first_dom#143, d_last_dom#144, d_same_day_ly#145, d_same_day_lq#146, d_current_day#147, d_current_week#148, d_current_month#149, d_current_quarter#150, d_current_year#151]

(22) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [sr_returned_date_sk#123]
Right keys [1]: [d_date_sk#124]
Join condition: None

(23) HashAggregate [codegen id : 6]
Input [48]: [sr_return_time_sk#104, sr_item_sk#105, sr_customer_sk#106, sr_cdemo_sk#107, sr_hdemo_sk#108, sr_addr_sk#109, sr_store_sk#110, sr_reason_sk#111, sr_ticket_number#112, sr_return_quantity#113, sr_return_amt#114, sr_return_tax#115, sr_return_amt_inc_tax#116, sr_fee#117, sr_return_ship_cost#118, sr_refunded_cash#119, sr_reversed_charge#120, sr_store_credit#121, sr_net_loss#122, sr_returned_date_sk#123, d_date_sk#124, d_date_id#125, d_date#126, d_month_seq#127, d_week_seq#128, d_quarter_seq#129, d_year#130, d_dow#131, d_moy#132, d_dom#133, d_qoy#134, d_fy_year#135, d_fy_quarter_seq#136, d_fy_week_seq#137, d_day_name#138, d_quarter_name#139, d_holiday#140, d_weekend#141, d_following_holiday#142, d_first_dom#143, d_last_dom#144, d_same_day_ly#145, d_same_day_lq#146, d_current_day#147, d_current_week#148, d_current_month#149, d_current_quarter#150, d_current_year#151]
Keys [1]: [sr_store_sk#110]
Functions [2]: [partial_sum(UnscaledValue(sr_return_amt#114)), partial_sum(UnscaledValue(sr_net_loss#122))]
Aggregate Attributes [2]: [sum#152, sum#153]
Results [3]: [sr_store_sk#110, sum#154, sum#155]

(24) Project [codegen id : 6]
Output [3]: [sr_store_sk#110, sum#154 AS _pushedexpression#156, sum#155 AS _pushedexpression#157]
Input [3]: [sr_store_sk#110, sum#154, sum#155]

(25) ReusedExchange [Reuses operator id: 12]
Output [2]: [s_store_sk#158, s_store_sk#158]

(26) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [sr_store_sk#110]
Right keys [1]: [s_store_sk#158]
Join condition: None

(27) Project [codegen id : 6]
Output [4]: [_pushedexpression#159, _pushedexpression#160, s_store_sk#158, s_store_sk#158]
Input [5]: [sr_store_sk#110, _pushedexpression#156, _pushedexpression#157, s_store_sk#158, s_store_sk#158]

(28) HashAggregate [codegen id : 6]
Input [4]: [_pushedexpression#159, _pushedexpression#160, s_store_sk#158, s_store_sk#158]
Keys [1]: [s_store_sk#158]
Functions [2]: [partial_sum(_pushedexpression#159), partial_sum(_pushedexpression#160)]
Aggregate Attributes [4]: [sum#161, isEmpty#162, sum#163, isEmpty#164]
Results [5]: [s_store_sk#158, sum#165, isEmpty#166, sum#167, isEmpty#168]

(29) Exchange
Input [5]: [s_store_sk#158, sum#165, isEmpty#166, sum#167, isEmpty#168]
Arguments: hashpartitioning(s_store_sk#158, 5), ENSURE_REQUIREMENTS, [id=#169]

(30) HashAggregate [codegen id : 7]
Input [5]: [s_store_sk#158, sum#165, isEmpty#166, sum#167, isEmpty#168]
Keys [1]: [s_store_sk#158]
Functions [2]: [sum(_pushedexpression#159), sum(_pushedexpression#160)]
Aggregate Attributes [2]: [sum(_pushedexpression#159)#170, sum(_pushedexpression#160)#171]
Results [3]: [s_store_sk#158, cast(sum(_pushedexpression#159)#170 as decimal(17,2)) AS returns#172, cast(sum(_pushedexpression#160)#171 as decimal(17,2)) AS profit_loss#173]

(31) BroadcastExchange
Input [3]: [s_store_sk#158, returns#172, profit_loss#173]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#174]

(32) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [s_store_sk#59]
Right keys [1]: [s_store_sk#158]
Join condition: None

(33) Project [codegen id : 8]
Output [5]: [sales#102, coalesce(returns#172, 0.00) AS returns#175, CheckOverflow((promote_precision(cast(profit#103 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#173, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#176, store channel AS channel#177, s_store_sk#59 AS id#178]
Input [6]: [s_store_sk#59, sales#102, profit#103, s_store_sk#158, returns#172, profit_loss#173]

(34) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#179, cs_ship_date_sk#180, cs_bill_customer_sk#181, cs_bill_cdemo_sk#182, cs_bill_hdemo_sk#183, cs_bill_addr_sk#184, cs_ship_customer_sk#185, cs_ship_cdemo_sk#186, cs_ship_hdemo_sk#187, cs_ship_addr_sk#188, cs_call_center_sk#189, cs_catalog_page_sk#190, cs_ship_mode_sk#191, cs_warehouse_sk#192, cs_item_sk#193, cs_promo_sk#194, cs_order_number#195, cs_quantity#196, cs_wholesale_cost#197, cs_list_price#198, cs_sales_price#199, cs_ext_discount_amt#200, cs_ext_sales_price#201, cs_ext_wholesale_cost#202, cs_ext_list_price#203, cs_ext_tax#204, cs_coupon_amt#205, cs_ext_ship_cost#206, cs_net_paid#207, cs_net_paid_inc_tax#208, cs_net_paid_inc_ship#209, cs_net_paid_inc_ship_tax#210, cs_net_profit#211, cs_sold_date_sk#212]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#212), dynamicpruningexpression(cs_sold_date_sk#212 IN dynamicpruning#213)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(35) ColumnarToRow [codegen id : 10]
Input [34]: [cs_sold_time_sk#179, cs_ship_date_sk#180, cs_bill_customer_sk#181, cs_bill_cdemo_sk#182, cs_bill_hdemo_sk#183, cs_bill_addr_sk#184, cs_ship_customer_sk#185, cs_ship_cdemo_sk#186, cs_ship_hdemo_sk#187, cs_ship_addr_sk#188, cs_call_center_sk#189, cs_catalog_page_sk#190, cs_ship_mode_sk#191, cs_warehouse_sk#192, cs_item_sk#193, cs_promo_sk#194, cs_order_number#195, cs_quantity#196, cs_wholesale_cost#197, cs_list_price#198, cs_sales_price#199, cs_ext_discount_amt#200, cs_ext_sales_price#201, cs_ext_wholesale_cost#202, cs_ext_list_price#203, cs_ext_tax#204, cs_coupon_amt#205, cs_ext_ship_cost#206, cs_net_paid#207, cs_net_paid_inc_tax#208, cs_net_paid_inc_ship#209, cs_net_paid_inc_ship_tax#210, cs_net_profit#211, cs_sold_date_sk#212]

(36) HashAggregate [codegen id : 10]
Input [34]: [cs_sold_time_sk#179, cs_ship_date_sk#180, cs_bill_customer_sk#181, cs_bill_cdemo_sk#182, cs_bill_hdemo_sk#183, cs_bill_addr_sk#184, cs_ship_customer_sk#185, cs_ship_cdemo_sk#186, cs_ship_hdemo_sk#187, cs_ship_addr_sk#188, cs_call_center_sk#189, cs_catalog_page_sk#190, cs_ship_mode_sk#191, cs_warehouse_sk#192, cs_item_sk#193, cs_promo_sk#194, cs_order_number#195, cs_quantity#196, cs_wholesale_cost#197, cs_list_price#198, cs_sales_price#199, cs_ext_discount_amt#200, cs_ext_sales_price#201, cs_ext_wholesale_cost#202, cs_ext_list_price#203, cs_ext_tax#204, cs_coupon_amt#205, cs_ext_ship_cost#206, cs_net_paid#207, cs_net_paid_inc_tax#208, cs_net_paid_inc_ship#209, cs_net_paid_inc_ship_tax#210, cs_net_profit#211, cs_sold_date_sk#212]
Keys [2]: [cs_sold_date_sk#212, cs_call_center_sk#189]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_sales_price#201)), partial_sum(UnscaledValue(cs_net_profit#211))]
Aggregate Attributes [2]: [sum#214, sum#215]
Results [4]: [cs_sold_date_sk#212, cs_call_center_sk#189, sum#216, sum#217]

(37) Project [codegen id : 10]
Output [4]: [cs_sold_date_sk#212, cs_call_center_sk#189, sum#216 AS _pushedexpression#218, sum#217 AS _pushedexpression#219]
Input [4]: [cs_sold_date_sk#212, cs_call_center_sk#189, sum#216, sum#217]

(38) ReusedExchange [Reuses operator id: 104]
Output [1]: [d_date_sk#220]

(39) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_sold_date_sk#212]
Right keys [1]: [d_date_sk#220]
Join condition: None

(40) Project [codegen id : 10]
Output [3]: [cs_call_center_sk#189, _pushedexpression#221, _pushedexpression#222]
Input [5]: [cs_sold_date_sk#212, cs_call_center_sk#189, _pushedexpression#218, _pushedexpression#219, d_date_sk#220]

(41) HashAggregate [codegen id : 10]
Input [3]: [cs_call_center_sk#189, _pushedexpression#221, _pushedexpression#222]
Keys [1]: [cs_call_center_sk#189]
Functions [2]: [partial_sum(_pushedexpression#221), partial_sum(_pushedexpression#222)]
Aggregate Attributes [4]: [sum#223, isEmpty#224, sum#225, isEmpty#226]
Results [5]: [cs_call_center_sk#189, sum#227, isEmpty#228, sum#229, isEmpty#230]

(42) Exchange
Input [5]: [cs_call_center_sk#189, sum#227, isEmpty#228, sum#229, isEmpty#230]
Arguments: hashpartitioning(cs_call_center_sk#189, 5), ENSURE_REQUIREMENTS, [id=#231]

(43) HashAggregate [codegen id : 11]
Input [5]: [cs_call_center_sk#189, sum#227, isEmpty#228, sum#229, isEmpty#230]
Keys [1]: [cs_call_center_sk#189]
Functions [2]: [sum(_pushedexpression#221), sum(_pushedexpression#222)]
Aggregate Attributes [2]: [sum(_pushedexpression#221)#232, sum(_pushedexpression#222)#233]
Results [3]: [cs_call_center_sk#189, cast(sum(_pushedexpression#221)#232 as decimal(17,2)) AS sales#234, cast(sum(_pushedexpression#222)#233 as decimal(17,2)) AS profit#235]

(44) BroadcastExchange
Input [3]: [cs_call_center_sk#189, sales#234, profit#235]
Arguments: IdentityBroadcastMode, [id=#236]

(45) Scan parquet default.catalog_returns
Output [27]: [cr_returned_time_sk#237, cr_item_sk#238, cr_refunded_customer_sk#239, cr_refunded_cdemo_sk#240, cr_refunded_hdemo_sk#241, cr_refunded_addr_sk#242, cr_returning_customer_sk#243, cr_returning_cdemo_sk#244, cr_returning_hdemo_sk#245, cr_returning_addr_sk#246, cr_call_center_sk#247, cr_catalog_page_sk#248, cr_ship_mode_sk#249, cr_warehouse_sk#250, cr_reason_sk#251, cr_order_number#252, cr_return_quantity#253, cr_return_amount#254, cr_return_tax#255, cr_return_amt_inc_tax#256, cr_fee#257, cr_return_ship_cost#258, cr_refunded_cash#259, cr_reversed_charge#260, cr_store_credit#261, cr_net_loss#262, cr_returned_date_sk#263]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#263), dynamicpruningexpression(cr_returned_date_sk#263 IN dynamicpruning#213)]
ReadSchema: struct<cr_returned_time_sk:int,cr_item_sk:int,cr_refunded_customer_sk:int,cr_refunded_cdemo_sk:int,cr_refunded_hdemo_sk:int,cr_refunded_addr_sk:int,cr_returning_customer_sk:int,cr_returning_cdemo_sk:int,cr_returning_hdemo_sk:int,cr_returning_addr_sk:int,cr_call_center_sk:int,cr_catalog_page_sk:int,cr_ship_mode_sk:int,cr_warehouse_sk:int,cr_reason_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2),cr_return_tax:decimal(7,2),cr_return_amt_inc_tax:decimal(7,2),cr_fee:decimal(7,2),cr_return_ship_cost:decimal(7,2),cr_refunded_cash:decimal(7,2),cr_reversed_charge:decimal(7,2),cr_store_credit:decimal(7,2),cr_net_loss:decimal(7,2)>

(46) ColumnarToRow [codegen id : 13]
Input [27]: [cr_returned_time_sk#237, cr_item_sk#238, cr_refunded_customer_sk#239, cr_refunded_cdemo_sk#240, cr_refunded_hdemo_sk#241, cr_refunded_addr_sk#242, cr_returning_customer_sk#243, cr_returning_cdemo_sk#244, cr_returning_hdemo_sk#245, cr_returning_addr_sk#246, cr_call_center_sk#247, cr_catalog_page_sk#248, cr_ship_mode_sk#249, cr_warehouse_sk#250, cr_reason_sk#251, cr_order_number#252, cr_return_quantity#253, cr_return_amount#254, cr_return_tax#255, cr_return_amt_inc_tax#256, cr_fee#257, cr_return_ship_cost#258, cr_refunded_cash#259, cr_reversed_charge#260, cr_store_credit#261, cr_net_loss#262, cr_returned_date_sk#263]

(47) HashAggregate [codegen id : 13]
Input [27]: [cr_returned_time_sk#237, cr_item_sk#238, cr_refunded_customer_sk#239, cr_refunded_cdemo_sk#240, cr_refunded_hdemo_sk#241, cr_refunded_addr_sk#242, cr_returning_customer_sk#243, cr_returning_cdemo_sk#244, cr_returning_hdemo_sk#245, cr_returning_addr_sk#246, cr_call_center_sk#247, cr_catalog_page_sk#248, cr_ship_mode_sk#249, cr_warehouse_sk#250, cr_reason_sk#251, cr_order_number#252, cr_return_quantity#253, cr_return_amount#254, cr_return_tax#255, cr_return_amt_inc_tax#256, cr_fee#257, cr_return_ship_cost#258, cr_refunded_cash#259, cr_reversed_charge#260, cr_store_credit#261, cr_net_loss#262, cr_returned_date_sk#263]
Keys [1]: [cr_returned_date_sk#263]
Functions [2]: [partial_sum(UnscaledValue(cr_return_amount#254)), partial_sum(UnscaledValue(cr_net_loss#262))]
Aggregate Attributes [2]: [sum#264, sum#265]
Results [3]: [cr_returned_date_sk#263, sum#266, sum#267]

(48) Project [codegen id : 13]
Output [3]: [cr_returned_date_sk#263, sum#266 AS _pushedexpression#268, sum#267 AS _pushedexpression#269]
Input [3]: [cr_returned_date_sk#263, sum#266, sum#267]

(49) ReusedExchange [Reuses operator id: 104]
Output [1]: [d_date_sk#270]

(50) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [cr_returned_date_sk#263]
Right keys [1]: [d_date_sk#270]
Join condition: None

(51) Project [codegen id : 13]
Output [2]: [_pushedexpression#271, _pushedexpression#272]
Input [4]: [cr_returned_date_sk#263, _pushedexpression#268, _pushedexpression#269, d_date_sk#270]

(52) HashAggregate [codegen id : 13]
Input [2]: [_pushedexpression#271, _pushedexpression#272]
Keys: []
Functions [2]: [partial_sum(_pushedexpression#271), partial_sum(_pushedexpression#272)]
Aggregate Attributes [4]: [sum#273, isEmpty#274, sum#275, isEmpty#276]
Results [4]: [sum#277, isEmpty#278, sum#279, isEmpty#280]

(53) Exchange
Input [4]: [sum#277, isEmpty#278, sum#279, isEmpty#280]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#281]

(54) HashAggregate
Input [4]: [sum#277, isEmpty#278, sum#279, isEmpty#280]
Keys: []
Functions [2]: [sum(_pushedexpression#271), sum(_pushedexpression#272)]
Aggregate Attributes [2]: [sum(_pushedexpression#271)#282, sum(_pushedexpression#272)#283]
Results [2]: [cast(sum(_pushedexpression#271)#282 as decimal(17,2)) AS returns#284, cast(sum(_pushedexpression#272)#283 as decimal(17,2)) AS profit_loss#285]

(55) BroadcastNestedLoopJoin [codegen id : 14]
Join condition: None

(56) Project [codegen id : 14]
Output [5]: [sales#234, returns#284, CheckOverflow((promote_precision(cast(profit#235 as decimal(18,2))) - promote_precision(cast(profit_loss#285 as decimal(18,2)))), DecimalType(18,2)) AS profit#286, catalog channel AS channel#287, cs_call_center_sk#189 AS id#288]
Input [5]: [cs_call_center_sk#189, sales#234, profit#235, returns#284, profit_loss#285]

(57) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#289, ws_ship_date_sk#290, ws_item_sk#291, ws_bill_customer_sk#292, ws_bill_cdemo_sk#293, ws_bill_hdemo_sk#294, ws_bill_addr_sk#295, ws_ship_customer_sk#296, ws_ship_cdemo_sk#297, ws_ship_hdemo_sk#298, ws_ship_addr_sk#299, ws_web_page_sk#300, ws_web_site_sk#301, ws_ship_mode_sk#302, ws_warehouse_sk#303, ws_promo_sk#304, ws_order_number#305, ws_quantity#306, ws_wholesale_cost#307, ws_list_price#308, ws_sales_price#309, ws_ext_discount_amt#310, ws_ext_sales_price#311, ws_ext_wholesale_cost#312, ws_ext_list_price#313, ws_ext_tax#314, ws_coupon_amt#315, ws_ext_ship_cost#316, ws_net_paid#317, ws_net_paid_inc_tax#318, ws_net_paid_inc_ship#319, ws_net_paid_inc_ship_tax#320, ws_net_profit#321, ws_sold_date_sk#322]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#322), dynamicpruningexpression(ws_sold_date_sk#322 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ws_web_page_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(58) ColumnarToRow [codegen id : 17]
Input [34]: [ws_sold_time_sk#289, ws_ship_date_sk#290, ws_item_sk#291, ws_bill_customer_sk#292, ws_bill_cdemo_sk#293, ws_bill_hdemo_sk#294, ws_bill_addr_sk#295, ws_ship_customer_sk#296, ws_ship_cdemo_sk#297, ws_ship_hdemo_sk#298, ws_ship_addr_sk#299, ws_web_page_sk#300, ws_web_site_sk#301, ws_ship_mode_sk#302, ws_warehouse_sk#303, ws_promo_sk#304, ws_order_number#305, ws_quantity#306, ws_wholesale_cost#307, ws_list_price#308, ws_sales_price#309, ws_ext_discount_amt#310, ws_ext_sales_price#311, ws_ext_wholesale_cost#312, ws_ext_list_price#313, ws_ext_tax#314, ws_coupon_amt#315, ws_ext_ship_cost#316, ws_net_paid#317, ws_net_paid_inc_tax#318, ws_net_paid_inc_ship#319, ws_net_paid_inc_ship_tax#320, ws_net_profit#321, ws_sold_date_sk#322]

(59) Filter [codegen id : 17]
Input [34]: [ws_sold_time_sk#289, ws_ship_date_sk#290, ws_item_sk#291, ws_bill_customer_sk#292, ws_bill_cdemo_sk#293, ws_bill_hdemo_sk#294, ws_bill_addr_sk#295, ws_ship_customer_sk#296, ws_ship_cdemo_sk#297, ws_ship_hdemo_sk#298, ws_ship_addr_sk#299, ws_web_page_sk#300, ws_web_site_sk#301, ws_ship_mode_sk#302, ws_warehouse_sk#303, ws_promo_sk#304, ws_order_number#305, ws_quantity#306, ws_wholesale_cost#307, ws_list_price#308, ws_sales_price#309, ws_ext_discount_amt#310, ws_ext_sales_price#311, ws_ext_wholesale_cost#312, ws_ext_list_price#313, ws_ext_tax#314, ws_coupon_amt#315, ws_ext_ship_cost#316, ws_net_paid#317, ws_net_paid_inc_tax#318, ws_net_paid_inc_ship#319, ws_net_paid_inc_ship_tax#320, ws_net_profit#321, ws_sold_date_sk#322]
Condition : isnotnull(ws_web_page_sk#300)

(60) ReusedExchange [Reuses operator id: 99]
Output [28]: [d_date_sk#323, d_date_id#324, d_date#325, d_month_seq#326, d_week_seq#327, d_quarter_seq#328, d_year#329, d_dow#330, d_moy#331, d_dom#332, d_qoy#333, d_fy_year#334, d_fy_quarter_seq#335, d_fy_week_seq#336, d_day_name#337, d_quarter_name#338, d_holiday#339, d_weekend#340, d_following_holiday#341, d_first_dom#342, d_last_dom#343, d_same_day_ly#344, d_same_day_lq#345, d_current_day#346, d_current_week#347, d_current_month#348, d_current_quarter#349, d_current_year#350]

(61) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#322]
Right keys [1]: [d_date_sk#323]
Join condition: None

(62) HashAggregate [codegen id : 17]
Input [62]: [ws_sold_time_sk#289, ws_ship_date_sk#290, ws_item_sk#291, ws_bill_customer_sk#292, ws_bill_cdemo_sk#293, ws_bill_hdemo_sk#294, ws_bill_addr_sk#295, ws_ship_customer_sk#296, ws_ship_cdemo_sk#297, ws_ship_hdemo_sk#298, ws_ship_addr_sk#299, ws_web_page_sk#300, ws_web_site_sk#301, ws_ship_mode_sk#302, ws_warehouse_sk#303, ws_promo_sk#304, ws_order_number#305, ws_quantity#306, ws_wholesale_cost#307, ws_list_price#308, ws_sales_price#309, ws_ext_discount_amt#310, ws_ext_sales_price#311, ws_ext_wholesale_cost#312, ws_ext_list_price#313, ws_ext_tax#314, ws_coupon_amt#315, ws_ext_ship_cost#316, ws_net_paid#317, ws_net_paid_inc_tax#318, ws_net_paid_inc_ship#319, ws_net_paid_inc_ship_tax#320, ws_net_profit#321, ws_sold_date_sk#322, d_date_sk#323, d_date_id#324, d_date#325, d_month_seq#326, d_week_seq#327, d_quarter_seq#328, d_year#329, d_dow#330, d_moy#331, d_dom#332, d_qoy#333, d_fy_year#334, d_fy_quarter_seq#335, d_fy_week_seq#336, d_day_name#337, d_quarter_name#338, d_holiday#339, d_weekend#340, d_following_holiday#341, d_first_dom#342, d_last_dom#343, d_same_day_ly#344, d_same_day_lq#345, d_current_day#346, d_current_week#347, d_current_month#348, d_current_quarter#349, d_current_year#350]
Keys [1]: [ws_web_page_sk#300]
Functions [2]: [partial_sum(UnscaledValue(ws_ext_sales_price#311)), partial_sum(UnscaledValue(ws_net_profit#321))]
Aggregate Attributes [2]: [sum#351, sum#352]
Results [3]: [ws_web_page_sk#300, sum#353, sum#354]

(63) Project [codegen id : 17]
Output [3]: [ws_web_page_sk#300, sum#353 AS _pushedexpression#355, sum#354 AS _pushedexpression#356]
Input [3]: [ws_web_page_sk#300, sum#353, sum#354]

(64) Scan parquet default.web_page
Output [14]: [wp_web_page_sk#357, wp_web_page_id#358, wp_rec_start_date#359, wp_rec_end_date#360, wp_creation_date_sk#361, wp_access_date_sk#362, wp_autogen_flag#363, wp_customer_sk#364, wp_url#365, wp_type#366, wp_char_count#367, wp_link_count#368, wp_image_count#369, wp_max_ad_count#370]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_page]
PushedFilters: [IsNotNull(wp_web_page_sk)]
ReadSchema: struct<wp_web_page_sk:int,wp_web_page_id:string,wp_rec_start_date:date,wp_rec_end_date:date,wp_creation_date_sk:int,wp_access_date_sk:int,wp_autogen_flag:string,wp_customer_sk:int,wp_url:string,wp_type:string,wp_char_count:int,wp_link_count:int,wp_image_count:int,wp_max_ad_count:int>

(65) ColumnarToRow [codegen id : 16]
Input [14]: [wp_web_page_sk#357, wp_web_page_id#358, wp_rec_start_date#359, wp_rec_end_date#360, wp_creation_date_sk#361, wp_access_date_sk#362, wp_autogen_flag#363, wp_customer_sk#364, wp_url#365, wp_type#366, wp_char_count#367, wp_link_count#368, wp_image_count#369, wp_max_ad_count#370]

(66) Filter [codegen id : 16]
Input [14]: [wp_web_page_sk#357, wp_web_page_id#358, wp_rec_start_date#359, wp_rec_end_date#360, wp_creation_date_sk#361, wp_access_date_sk#362, wp_autogen_flag#363, wp_customer_sk#364, wp_url#365, wp_type#366, wp_char_count#367, wp_link_count#368, wp_image_count#369, wp_max_ad_count#370]
Condition : isnotnull(wp_web_page_sk#357)

(67) HashAggregate [codegen id : 16]
Input [14]: [wp_web_page_sk#357, wp_web_page_id#358, wp_rec_start_date#359, wp_rec_end_date#360, wp_creation_date_sk#361, wp_access_date_sk#362, wp_autogen_flag#363, wp_customer_sk#364, wp_url#365, wp_type#366, wp_char_count#367, wp_link_count#368, wp_image_count#369, wp_max_ad_count#370]
Keys [2]: [wp_web_page_sk#357, wp_web_page_sk#357]
Functions: []
Aggregate Attributes: []
Results [2]: [wp_web_page_sk#357, wp_web_page_sk#357]

(68) BroadcastExchange
Input [2]: [wp_web_page_sk#357, wp_web_page_sk#357]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#371]

(69) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_web_page_sk#300]
Right keys [1]: [wp_web_page_sk#357]
Join condition: None

(70) Project [codegen id : 17]
Output [4]: [_pushedexpression#372, _pushedexpression#373, wp_web_page_sk#357, wp_web_page_sk#357]
Input [5]: [ws_web_page_sk#300, _pushedexpression#355, _pushedexpression#356, wp_web_page_sk#357, wp_web_page_sk#357]

(71) HashAggregate [codegen id : 17]
Input [4]: [_pushedexpression#372, _pushedexpression#373, wp_web_page_sk#357, wp_web_page_sk#357]
Keys [1]: [wp_web_page_sk#357]
Functions [2]: [partial_sum(_pushedexpression#372), partial_sum(_pushedexpression#373)]
Aggregate Attributes [4]: [sum#374, isEmpty#375, sum#376, isEmpty#377]
Results [5]: [wp_web_page_sk#357, sum#378, isEmpty#379, sum#380, isEmpty#381]

(72) Exchange
Input [5]: [wp_web_page_sk#357, sum#378, isEmpty#379, sum#380, isEmpty#381]
Arguments: hashpartitioning(wp_web_page_sk#357, 5), ENSURE_REQUIREMENTS, [id=#382]

(73) HashAggregate [codegen id : 22]
Input [5]: [wp_web_page_sk#357, sum#378, isEmpty#379, sum#380, isEmpty#381]
Keys [1]: [wp_web_page_sk#357]
Functions [2]: [sum(_pushedexpression#372), sum(_pushedexpression#373)]
Aggregate Attributes [2]: [sum(_pushedexpression#372)#383, sum(_pushedexpression#373)#384]
Results [3]: [wp_web_page_sk#357, cast(sum(_pushedexpression#372)#383 as decimal(17,2)) AS sales#385, cast(sum(_pushedexpression#373)#384 as decimal(17,2)) AS profit#386]

(74) Scan parquet default.web_returns
Output [24]: [wr_returned_time_sk#387, wr_item_sk#388, wr_refunded_customer_sk#389, wr_refunded_cdemo_sk#390, wr_refunded_hdemo_sk#391, wr_refunded_addr_sk#392, wr_returning_customer_sk#393, wr_returning_cdemo_sk#394, wr_returning_hdemo_sk#395, wr_returning_addr_sk#396, wr_web_page_sk#397, wr_reason_sk#398, wr_order_number#399, wr_return_quantity#400, wr_return_amt#401, wr_return_tax#402, wr_return_amt_inc_tax#403, wr_fee#404, wr_return_ship_cost#405, wr_refunded_cash#406, wr_reversed_charge#407, wr_account_credit#408, wr_net_loss#409, wr_returned_date_sk#410]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#410), dynamicpruningexpression(wr_returned_date_sk#410 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(wr_web_page_sk)]
ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_hdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_customer_sk:int,wr_returning_cdemo_sk:int,wr_returning_hdemo_sk:int,wr_returning_addr_sk:int,wr_web_page_sk:int,wr_reason_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2),wr_return_tax:decimal(7,2),wr_return_amt_inc_tax:decimal(7,2),wr_fee:decimal(7,2),wr_return_ship_cost:decimal(7,2),wr_refunded_cash:decimal(7,2),wr_reversed_charge:decimal(7,2),wr_account_credit:decimal(7,2),wr_net_loss:decimal(7,2)>

(75) ColumnarToRow [codegen id : 20]
Input [24]: [wr_returned_time_sk#387, wr_item_sk#388, wr_refunded_customer_sk#389, wr_refunded_cdemo_sk#390, wr_refunded_hdemo_sk#391, wr_refunded_addr_sk#392, wr_returning_customer_sk#393, wr_returning_cdemo_sk#394, wr_returning_hdemo_sk#395, wr_returning_addr_sk#396, wr_web_page_sk#397, wr_reason_sk#398, wr_order_number#399, wr_return_quantity#400, wr_return_amt#401, wr_return_tax#402, wr_return_amt_inc_tax#403, wr_fee#404, wr_return_ship_cost#405, wr_refunded_cash#406, wr_reversed_charge#407, wr_account_credit#408, wr_net_loss#409, wr_returned_date_sk#410]

(76) Filter [codegen id : 20]
Input [24]: [wr_returned_time_sk#387, wr_item_sk#388, wr_refunded_customer_sk#389, wr_refunded_cdemo_sk#390, wr_refunded_hdemo_sk#391, wr_refunded_addr_sk#392, wr_returning_customer_sk#393, wr_returning_cdemo_sk#394, wr_returning_hdemo_sk#395, wr_returning_addr_sk#396, wr_web_page_sk#397, wr_reason_sk#398, wr_order_number#399, wr_return_quantity#400, wr_return_amt#401, wr_return_tax#402, wr_return_amt_inc_tax#403, wr_fee#404, wr_return_ship_cost#405, wr_refunded_cash#406, wr_reversed_charge#407, wr_account_credit#408, wr_net_loss#409, wr_returned_date_sk#410]
Condition : isnotnull(wr_web_page_sk#397)

(77) ReusedExchange [Reuses operator id: 99]
Output [28]: [d_date_sk#411, d_date_id#412, d_date#413, d_month_seq#414, d_week_seq#415, d_quarter_seq#416, d_year#417, d_dow#418, d_moy#419, d_dom#420, d_qoy#421, d_fy_year#422, d_fy_quarter_seq#423, d_fy_week_seq#424, d_day_name#425, d_quarter_name#426, d_holiday#427, d_weekend#428, d_following_holiday#429, d_first_dom#430, d_last_dom#431, d_same_day_ly#432, d_same_day_lq#433, d_current_day#434, d_current_week#435, d_current_month#436, d_current_quarter#437, d_current_year#438]

(78) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [wr_returned_date_sk#410]
Right keys [1]: [d_date_sk#411]
Join condition: None

(79) HashAggregate [codegen id : 20]
Input [52]: [wr_returned_time_sk#387, wr_item_sk#388, wr_refunded_customer_sk#389, wr_refunded_cdemo_sk#390, wr_refunded_hdemo_sk#391, wr_refunded_addr_sk#392, wr_returning_customer_sk#393, wr_returning_cdemo_sk#394, wr_returning_hdemo_sk#395, wr_returning_addr_sk#396, wr_web_page_sk#397, wr_reason_sk#398, wr_order_number#399, wr_return_quantity#400, wr_return_amt#401, wr_return_tax#402, wr_return_amt_inc_tax#403, wr_fee#404, wr_return_ship_cost#405, wr_refunded_cash#406, wr_reversed_charge#407, wr_account_credit#408, wr_net_loss#409, wr_returned_date_sk#410, d_date_sk#411, d_date_id#412, d_date#413, d_month_seq#414, d_week_seq#415, d_quarter_seq#416, d_year#417, d_dow#418, d_moy#419, d_dom#420, d_qoy#421, d_fy_year#422, d_fy_quarter_seq#423, d_fy_week_seq#424, d_day_name#425, d_quarter_name#426, d_holiday#427, d_weekend#428, d_following_holiday#429, d_first_dom#430, d_last_dom#431, d_same_day_ly#432, d_same_day_lq#433, d_current_day#434, d_current_week#435, d_current_month#436, d_current_quarter#437, d_current_year#438]
Keys [1]: [wr_web_page_sk#397]
Functions [2]: [partial_sum(UnscaledValue(wr_return_amt#401)), partial_sum(UnscaledValue(wr_net_loss#409))]
Aggregate Attributes [2]: [sum#439, sum#440]
Results [3]: [wr_web_page_sk#397, sum#441, sum#442]

(80) Project [codegen id : 20]
Output [3]: [wr_web_page_sk#397, sum#441 AS _pushedexpression#443, sum#442 AS _pushedexpression#444]
Input [3]: [wr_web_page_sk#397, sum#441, sum#442]

(81) ReusedExchange [Reuses operator id: 68]
Output [2]: [wp_web_page_sk#445, wp_web_page_sk#445]

(82) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [wr_web_page_sk#397]
Right keys [1]: [wp_web_page_sk#445]
Join condition: None

(83) Project [codegen id : 20]
Output [4]: [_pushedexpression#446, _pushedexpression#447, wp_web_page_sk#445, wp_web_page_sk#445]
Input [5]: [wr_web_page_sk#397, _pushedexpression#443, _pushedexpression#444, wp_web_page_sk#445, wp_web_page_sk#445]

(84) HashAggregate [codegen id : 20]
Input [4]: [_pushedexpression#446, _pushedexpression#447, wp_web_page_sk#445, wp_web_page_sk#445]
Keys [1]: [wp_web_page_sk#445]
Functions [2]: [partial_sum(_pushedexpression#446), partial_sum(_pushedexpression#447)]
Aggregate Attributes [4]: [sum#448, isEmpty#449, sum#450, isEmpty#451]
Results [5]: [wp_web_page_sk#445, sum#452, isEmpty#453, sum#454, isEmpty#455]

(85) Exchange
Input [5]: [wp_web_page_sk#445, sum#452, isEmpty#453, sum#454, isEmpty#455]
Arguments: hashpartitioning(wp_web_page_sk#445, 5), ENSURE_REQUIREMENTS, [id=#456]

(86) HashAggregate [codegen id : 21]
Input [5]: [wp_web_page_sk#445, sum#452, isEmpty#453, sum#454, isEmpty#455]
Keys [1]: [wp_web_page_sk#445]
Functions [2]: [sum(_pushedexpression#446), sum(_pushedexpression#447)]
Aggregate Attributes [2]: [sum(_pushedexpression#446)#457, sum(_pushedexpression#447)#458]
Results [3]: [wp_web_page_sk#445, cast(sum(_pushedexpression#446)#457 as decimal(17,2)) AS returns#459, cast(sum(_pushedexpression#447)#458 as decimal(17,2)) AS profit_loss#460]

(87) BroadcastExchange
Input [3]: [wp_web_page_sk#445, returns#459, profit_loss#460]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#461]

(88) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [wp_web_page_sk#357]
Right keys [1]: [wp_web_page_sk#445]
Join condition: None

(89) Project [codegen id : 22]
Output [5]: [sales#385, coalesce(returns#459, 0.00) AS returns#462, CheckOverflow((promote_precision(cast(profit#386 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#460, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#463, web channel AS channel#464, wp_web_page_sk#357 AS id#465]
Input [6]: [wp_web_page_sk#357, sales#385, profit#386, wp_web_page_sk#445, returns#459, profit_loss#460]

(90) Union

(91) Expand [codegen id : 23]
Input [5]: [sales#102, returns#175, profit#176, channel#177, id#178]
Arguments: [[sales#102, returns#175, profit#176, channel#177, id#178, 0], [sales#102, returns#175, profit#176, channel#177, null, 1], [sales#102, returns#175, profit#176, null, null, 3]], [sales#102, returns#175, profit#176, channel#466, id#467, spark_grouping_id#468]

(92) HashAggregate [codegen id : 23]
Input [6]: [sales#102, returns#175, profit#176, channel#466, id#467, spark_grouping_id#468]
Keys [3]: [channel#466, id#467, spark_grouping_id#468]
Functions [3]: [partial_sum(sales#102), partial_sum(returns#175), partial_sum(profit#176)]
Aggregate Attributes [6]: [sum#469, isEmpty#470, sum#471, isEmpty#472, sum#473, isEmpty#474]
Results [9]: [channel#466, id#467, spark_grouping_id#468, sum#475, isEmpty#476, sum#477, isEmpty#478, sum#479, isEmpty#480]

(93) Exchange
Input [9]: [channel#466, id#467, spark_grouping_id#468, sum#475, isEmpty#476, sum#477, isEmpty#478, sum#479, isEmpty#480]
Arguments: hashpartitioning(channel#466, id#467, spark_grouping_id#468, 5), ENSURE_REQUIREMENTS, [id=#481]

(94) HashAggregate [codegen id : 24]
Input [9]: [channel#466, id#467, spark_grouping_id#468, sum#475, isEmpty#476, sum#477, isEmpty#478, sum#479, isEmpty#480]
Keys [3]: [channel#466, id#467, spark_grouping_id#468]
Functions [3]: [sum(sales#102), sum(returns#175), sum(profit#176)]
Aggregate Attributes [3]: [sum(sales#102)#482, sum(returns#175)#483, sum(profit#176)#484]
Results [5]: [channel#466, id#467, sum(sales#102)#482 AS sales#485, sum(returns#175)#483 AS returns#486, sum(profit#176)#484 AS profit#487]

(95) TakeOrderedAndProject
Input [5]: [channel#466, id#467, sales#485, returns#486, profit#487]
Arguments: 100, [channel#466 ASC NULLS FIRST, id#467 ASC NULLS FIRST], [channel#466, id#467, sales#485, returns#486, profit#487]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#23 IN dynamicpruning#24
BroadcastExchange (99)
+- * Filter (98)
   +- * ColumnarToRow (97)
      +- Scan parquet default.date_dim (96)


(96) Scan parquet default.date_dim
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(97) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(98) Filter [codegen id : 1]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Condition : (((isnotnull(d_date#27) AND (d_date#27 >= 2000-08-03)) AND (d_date#27 <= 2000-09-02)) AND isnotnull(d_date_sk#25))

(99) BroadcastExchange
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#488]

Subquery:2 Hosting operator id = 18 Hosting Expression = sr_returned_date_sk#123 IN dynamicpruning#24

Subquery:3 Hosting operator id = 34 Hosting Expression = cs_sold_date_sk#212 IN dynamicpruning#213
BroadcastExchange (104)
+- * HashAggregate (103)
   +- * Filter (102)
      +- * ColumnarToRow (101)
         +- Scan parquet default.date_dim (100)


(100) Scan parquet default.date_dim
Output [28]: [d_date_sk#220, d_date_id#489, d_date#490, d_month_seq#491, d_week_seq#492, d_quarter_seq#493, d_year#494, d_dow#495, d_moy#496, d_dom#497, d_qoy#498, d_fy_year#499, d_fy_quarter_seq#500, d_fy_week_seq#501, d_day_name#502, d_quarter_name#503, d_holiday#504, d_weekend#505, d_following_holiday#506, d_first_dom#507, d_last_dom#508, d_same_day_ly#509, d_same_day_lq#510, d_current_day#511, d_current_week#512, d_current_month#513, d_current_quarter#514, d_current_year#515]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(101) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#220, d_date_id#489, d_date#490, d_month_seq#491, d_week_seq#492, d_quarter_seq#493, d_year#494, d_dow#495, d_moy#496, d_dom#497, d_qoy#498, d_fy_year#499, d_fy_quarter_seq#500, d_fy_week_seq#501, d_day_name#502, d_quarter_name#503, d_holiday#504, d_weekend#505, d_following_holiday#506, d_first_dom#507, d_last_dom#508, d_same_day_ly#509, d_same_day_lq#510, d_current_day#511, d_current_week#512, d_current_month#513, d_current_quarter#514, d_current_year#515]

(102) Filter [codegen id : 1]
Input [28]: [d_date_sk#220, d_date_id#489, d_date#490, d_month_seq#491, d_week_seq#492, d_quarter_seq#493, d_year#494, d_dow#495, d_moy#496, d_dom#497, d_qoy#498, d_fy_year#499, d_fy_quarter_seq#500, d_fy_week_seq#501, d_day_name#502, d_quarter_name#503, d_holiday#504, d_weekend#505, d_following_holiday#506, d_first_dom#507, d_last_dom#508, d_same_day_ly#509, d_same_day_lq#510, d_current_day#511, d_current_week#512, d_current_month#513, d_current_quarter#514, d_current_year#515]
Condition : (((isnotnull(d_date#490) AND (d_date#490 >= 2000-08-03)) AND (d_date#490 <= 2000-09-02)) AND isnotnull(d_date_sk#220))

(103) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#220, d_date_id#489, d_date#490, d_month_seq#491, d_week_seq#492, d_quarter_seq#493, d_year#494, d_dow#495, d_moy#496, d_dom#497, d_qoy#498, d_fy_year#499, d_fy_quarter_seq#500, d_fy_week_seq#501, d_day_name#502, d_quarter_name#503, d_holiday#504, d_weekend#505, d_following_holiday#506, d_first_dom#507, d_last_dom#508, d_same_day_ly#509, d_same_day_lq#510, d_current_day#511, d_current_week#512, d_current_month#513, d_current_quarter#514, d_current_year#515]
Keys [1]: [d_date_sk#220]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#220]

(104) BroadcastExchange
Input [1]: [d_date_sk#220]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#516]

Subquery:4 Hosting operator id = 45 Hosting Expression = cr_returned_date_sk#263 IN dynamicpruning#213

Subquery:5 Hosting operator id = 57 Hosting Expression = ws_sold_date_sk#322 IN dynamicpruning#24

Subquery:6 Hosting operator id = 74 Hosting Expression = wr_returned_date_sk#410 IN dynamicpruning#24


