== Physical Plan ==
TakeOrderedAndProject (122)
+- * HashAggregate (121)
   +- Exchange (120)
      +- * HashAggregate (119)
         +- * Expand (118)
            +- Union (117)
               :- * Project (43)
               :  +- * SortMergeJoin LeftOuter (42)
               :     :- * Sort (24)
               :     :  +- * HashAggregate (23)
               :     :     +- Exchange (22)
               :     :        +- * HashAggregate (21)
               :     :           +- * Project (20)
               :     :              +- * BroadcastHashJoin Inner BuildRight (19)
               :     :                 :- * Project (13)
               :     :                 :  +- * HashAggregate (12)
               :     :                 :     +- * SortMergeJoin Inner (11)
               :     :                 :        :- * Sort (5)
               :     :                 :        :  +- Exchange (4)
               :     :                 :        :     +- * Filter (3)
               :     :                 :        :        +- * ColumnarToRow (2)
               :     :                 :        :           +- Scan parquet default.store_sales (1)
               :     :                 :        +- * Sort (10)
               :     :                 :           +- Exchange (9)
               :     :                 :              +- * Filter (8)
               :     :                 :                 +- * ColumnarToRow (7)
               :     :                 :                    +- Scan parquet default.date_dim (6)
               :     :                 +- BroadcastExchange (18)
               :     :                    +- * HashAggregate (17)
               :     :                       +- * Filter (16)
               :     :                          +- * ColumnarToRow (15)
               :     :                             +- Scan parquet default.store (14)
               :     +- * Sort (41)
               :        +- * HashAggregate (40)
               :           +- Exchange (39)
               :              +- * HashAggregate (38)
               :                 +- * Project (37)
               :                    +- * BroadcastHashJoin Inner BuildRight (36)
               :                       :- * Project (34)
               :                       :  +- * HashAggregate (33)
               :                       :     +- * SortMergeJoin Inner (32)
               :                       :        :- * Sort (29)
               :                       :        :  +- Exchange (28)
               :                       :        :     +- * Filter (27)
               :                       :        :        +- * ColumnarToRow (26)
               :                       :        :           +- Scan parquet default.store_returns (25)
               :                       :        +- * Sort (31)
               :                       :           +- ReusedExchange (30)
               :                       +- ReusedExchange (35)
               :- * Project (76)
               :  +- * BroadcastNestedLoopJoin Inner BuildRight (75)
               :     :- * HashAggregate (60)
               :     :  +- Exchange (59)
               :     :     +- * HashAggregate (58)
               :     :        +- * Project (57)
               :     :           +- * SortMergeJoin Inner (56)
               :     :              :- * Sort (49)
               :     :              :  +- Exchange (48)
               :     :              :     +- * Project (47)
               :     :              :        +- * HashAggregate (46)
               :     :              :           +- * ColumnarToRow (45)
               :     :              :              +- Scan parquet default.catalog_sales (44)
               :     :              +- * Sort (55)
               :     :                 +- Exchange (54)
               :     :                    +- * HashAggregate (53)
               :     :                       +- * Filter (52)
               :     :                          +- * ColumnarToRow (51)
               :     :                             +- Scan parquet default.date_dim (50)
               :     +- BroadcastExchange (74)
               :        +- * HashAggregate (73)
               :           +- Exchange (72)
               :              +- * HashAggregate (71)
               :                 +- * Project (70)
               :                    +- * SortMergeJoin Inner (69)
               :                       :- * Sort (66)
               :                       :  +- Exchange (65)
               :                       :     +- * Project (64)
               :                       :        +- * HashAggregate (63)
               :                       :           +- * ColumnarToRow (62)
               :                       :              +- Scan parquet default.catalog_returns (61)
               :                       +- * Sort (68)
               :                          +- ReusedExchange (67)
               +- * Project (116)
                  +- * SortMergeJoin LeftOuter (115)
                     :- * Sort (97)
                     :  +- * HashAggregate (96)
                     :     +- Exchange (95)
                     :        +- * HashAggregate (94)
                     :           +- * Project (93)
                     :              +- * BroadcastHashJoin Inner BuildRight (92)
                     :                 :- * Project (86)
                     :                 :  +- * HashAggregate (85)
                     :                 :     +- * SortMergeJoin Inner (84)
                     :                 :        :- * Sort (81)
                     :                 :        :  +- Exchange (80)
                     :                 :        :     +- * Filter (79)
                     :                 :        :        +- * ColumnarToRow (78)
                     :                 :        :           +- Scan parquet default.web_sales (77)
                     :                 :        +- * Sort (83)
                     :                 :           +- ReusedExchange (82)
                     :                 +- BroadcastExchange (91)
                     :                    +- * HashAggregate (90)
                     :                       +- * Filter (89)
                     :                          +- * ColumnarToRow (88)
                     :                             +- Scan parquet default.web_page (87)
                     +- * Sort (114)
                        +- * HashAggregate (113)
                           +- Exchange (112)
                              +- * HashAggregate (111)
                                 +- * Project (110)
                                    +- * BroadcastHashJoin Inner BuildRight (109)
                                       :- * Project (107)
                                       :  +- * HashAggregate (106)
                                       :     +- * SortMergeJoin Inner (105)
                                       :        :- * Sort (102)
                                       :        :  +- Exchange (101)
                                       :        :     +- * Filter (100)
                                       :        :        +- * ColumnarToRow (99)
                                       :        :           +- Scan parquet default.web_returns (98)
                                       :        +- * Sort (104)
                                       :           +- ReusedExchange (103)
                                       +- ReusedExchange (108)


(1) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(true)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(3) Filter [codegen id : 1]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : isnotnull(ss_store_sk#7)

(4) Exchange
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Arguments: hashpartitioning(ss_sold_date_sk#23, 5), ENSURE_REQUIREMENTS, [id=#24]

(5) Sort [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Arguments: [ss_sold_date_sk#23 ASC NULLS FIRST], false, 0

(6) Scan parquet default.date_dim
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(7) ColumnarToRow [codegen id : 3]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(8) Filter [codegen id : 3]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Condition : (((isnotnull(d_date#27) AND (d_date#27 >= 2000-08-03)) AND (d_date#27 <= 2000-09-02)) AND isnotnull(d_date_sk#25))

(9) Exchange
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Arguments: hashpartitioning(d_date_sk#25, 5), ENSURE_REQUIREMENTS, [id=#53]

(10) Sort [codegen id : 4]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Arguments: [d_date_sk#25 ASC NULLS FIRST], false, 0

(11) SortMergeJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#23]
Right keys [1]: [d_date_sk#25]
Join condition: None

(12) HashAggregate [codegen id : 6]
Input [51]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Keys [1]: [ss_store_sk#7]
Functions [2]: [partial_sum(UnscaledValue(ss_ext_sales_price#15)), partial_sum(UnscaledValue(ss_net_profit#22))]
Aggregate Attributes [2]: [sum#54, sum#55]
Results [3]: [ss_store_sk#7, sum#56, sum#57]

(13) Project [codegen id : 6]
Output [3]: [ss_store_sk#7, sum#56 AS _pushedexpression#58, sum#57 AS _pushedexpression#59]
Input [3]: [ss_store_sk#7, sum#56, sum#57]

(14) Scan parquet default.store
Output [29]: [s_store_sk#60, s_store_id#61, s_rec_start_date#62, s_rec_end_date#63, s_closed_date_sk#64, s_store_name#65, s_number_employees#66, s_floor_space#67, s_hours#68, s_manager#69, s_market_id#70, s_geography_class#71, s_market_desc#72, s_market_manager#73, s_division_id#74, s_division_name#75, s_company_id#76, s_company_name#77, s_street_number#78, s_street_name#79, s_street_type#80, s_suite_number#81, s_city#82, s_county#83, s_state#84, s_zip#85, s_country#86, s_gmt_offset#87, s_tax_percentage#88]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_id:string,s_rec_start_date:date,s_rec_end_date:date,s_closed_date_sk:int,s_store_name:string,s_number_employees:int,s_floor_space:int,s_hours:string,s_manager:string,s_market_id:int,s_geography_class:string,s_market_desc:string,s_market_manager:string,s_division_id:int,s_division_name:string,s_company_id:int,s_company_name:string,s_street_number:string,s_street_name:string,s_street_type:string,s_suite_number:string,s_city:string,s_county:string,s_state:string,s_zip:string,s_country:string,s_gmt_offset:decimal(5,2),s_tax_percentage:decimal(5,2)>

(15) ColumnarToRow [codegen id : 5]
Input [29]: [s_store_sk#60, s_store_id#61, s_rec_start_date#62, s_rec_end_date#63, s_closed_date_sk#64, s_store_name#65, s_number_employees#66, s_floor_space#67, s_hours#68, s_manager#69, s_market_id#70, s_geography_class#71, s_market_desc#72, s_market_manager#73, s_division_id#74, s_division_name#75, s_company_id#76, s_company_name#77, s_street_number#78, s_street_name#79, s_street_type#80, s_suite_number#81, s_city#82, s_county#83, s_state#84, s_zip#85, s_country#86, s_gmt_offset#87, s_tax_percentage#88]

(16) Filter [codegen id : 5]
Input [29]: [s_store_sk#60, s_store_id#61, s_rec_start_date#62, s_rec_end_date#63, s_closed_date_sk#64, s_store_name#65, s_number_employees#66, s_floor_space#67, s_hours#68, s_manager#69, s_market_id#70, s_geography_class#71, s_market_desc#72, s_market_manager#73, s_division_id#74, s_division_name#75, s_company_id#76, s_company_name#77, s_street_number#78, s_street_name#79, s_street_type#80, s_suite_number#81, s_city#82, s_county#83, s_state#84, s_zip#85, s_country#86, s_gmt_offset#87, s_tax_percentage#88]
Condition : isnotnull(s_store_sk#60)

(17) HashAggregate [codegen id : 5]
Input [29]: [s_store_sk#60, s_store_id#61, s_rec_start_date#62, s_rec_end_date#63, s_closed_date_sk#64, s_store_name#65, s_number_employees#66, s_floor_space#67, s_hours#68, s_manager#69, s_market_id#70, s_geography_class#71, s_market_desc#72, s_market_manager#73, s_division_id#74, s_division_name#75, s_company_id#76, s_company_name#77, s_street_number#78, s_street_name#79, s_street_type#80, s_suite_number#81, s_city#82, s_county#83, s_state#84, s_zip#85, s_country#86, s_gmt_offset#87, s_tax_percentage#88]
Keys [2]: [s_store_sk#60, s_store_sk#60]
Functions: []
Aggregate Attributes: []
Results [2]: [s_store_sk#60, s_store_sk#60]

(18) BroadcastExchange
Input [2]: [s_store_sk#60, s_store_sk#60]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#89]

(19) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#60]
Join condition: None

(20) Project [codegen id : 6]
Output [4]: [_pushedexpression#90, _pushedexpression#91, s_store_sk#60, s_store_sk#60]
Input [5]: [ss_store_sk#7, _pushedexpression#58, _pushedexpression#59, s_store_sk#60, s_store_sk#60]

(21) HashAggregate [codegen id : 6]
Input [4]: [_pushedexpression#90, _pushedexpression#91, s_store_sk#60, s_store_sk#60]
Keys [1]: [s_store_sk#60]
Functions [2]: [partial_sum(_pushedexpression#90), partial_sum(_pushedexpression#91)]
Aggregate Attributes [4]: [sum#92, isEmpty#93, sum#94, isEmpty#95]
Results [5]: [s_store_sk#60, sum#96, isEmpty#97, sum#98, isEmpty#99]

(22) Exchange
Input [5]: [s_store_sk#60, sum#96, isEmpty#97, sum#98, isEmpty#99]
Arguments: hashpartitioning(s_store_sk#60, 5), ENSURE_REQUIREMENTS, [id=#100]

(23) HashAggregate [codegen id : 7]
Input [5]: [s_store_sk#60, sum#96, isEmpty#97, sum#98, isEmpty#99]
Keys [1]: [s_store_sk#60]
Functions [2]: [sum(_pushedexpression#90), sum(_pushedexpression#91)]
Aggregate Attributes [2]: [sum(_pushedexpression#90)#101, sum(_pushedexpression#91)#102]
Results [3]: [s_store_sk#60, cast(sum(_pushedexpression#90)#101 as decimal(17,2)) AS sales#103, cast(sum(_pushedexpression#91)#102 as decimal(17,2)) AS profit#104]

(24) Sort [codegen id : 7]
Input [3]: [s_store_sk#60, sales#103, profit#104]
Arguments: [s_store_sk#60 ASC NULLS FIRST], false, 0

(25) Scan parquet default.store_returns
Output [20]: [sr_return_time_sk#105, sr_item_sk#106, sr_customer_sk#107, sr_cdemo_sk#108, sr_hdemo_sk#109, sr_addr_sk#110, sr_store_sk#111, sr_reason_sk#112, sr_ticket_number#113, sr_return_quantity#114, sr_return_amt#115, sr_return_tax#116, sr_return_amt_inc_tax#117, sr_fee#118, sr_return_ship_cost#119, sr_refunded_cash#120, sr_reversed_charge#121, sr_store_credit#122, sr_net_loss#123, sr_returned_date_sk#124]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#124), dynamicpruningexpression(true)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_return_time_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_cdemo_sk:int,sr_hdemo_sk:int,sr_addr_sk:int,sr_store_sk:int,sr_reason_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2),sr_return_tax:decimal(7,2),sr_return_amt_inc_tax:decimal(7,2),sr_fee:decimal(7,2),sr_return_ship_cost:decimal(7,2),sr_refunded_cash:decimal(7,2),sr_reversed_charge:decimal(7,2),sr_store_credit:decimal(7,2),sr_net_loss:decimal(7,2)>

(26) ColumnarToRow [codegen id : 8]
Input [20]: [sr_return_time_sk#105, sr_item_sk#106, sr_customer_sk#107, sr_cdemo_sk#108, sr_hdemo_sk#109, sr_addr_sk#110, sr_store_sk#111, sr_reason_sk#112, sr_ticket_number#113, sr_return_quantity#114, sr_return_amt#115, sr_return_tax#116, sr_return_amt_inc_tax#117, sr_fee#118, sr_return_ship_cost#119, sr_refunded_cash#120, sr_reversed_charge#121, sr_store_credit#122, sr_net_loss#123, sr_returned_date_sk#124]

(27) Filter [codegen id : 8]
Input [20]: [sr_return_time_sk#105, sr_item_sk#106, sr_customer_sk#107, sr_cdemo_sk#108, sr_hdemo_sk#109, sr_addr_sk#110, sr_store_sk#111, sr_reason_sk#112, sr_ticket_number#113, sr_return_quantity#114, sr_return_amt#115, sr_return_tax#116, sr_return_amt_inc_tax#117, sr_fee#118, sr_return_ship_cost#119, sr_refunded_cash#120, sr_reversed_charge#121, sr_store_credit#122, sr_net_loss#123, sr_returned_date_sk#124]
Condition : isnotnull(sr_store_sk#111)

(28) Exchange
Input [20]: [sr_return_time_sk#105, sr_item_sk#106, sr_customer_sk#107, sr_cdemo_sk#108, sr_hdemo_sk#109, sr_addr_sk#110, sr_store_sk#111, sr_reason_sk#112, sr_ticket_number#113, sr_return_quantity#114, sr_return_amt#115, sr_return_tax#116, sr_return_amt_inc_tax#117, sr_fee#118, sr_return_ship_cost#119, sr_refunded_cash#120, sr_reversed_charge#121, sr_store_credit#122, sr_net_loss#123, sr_returned_date_sk#124]
Arguments: hashpartitioning(sr_returned_date_sk#124, 5), ENSURE_REQUIREMENTS, [id=#125]

(29) Sort [codegen id : 9]
Input [20]: [sr_return_time_sk#105, sr_item_sk#106, sr_customer_sk#107, sr_cdemo_sk#108, sr_hdemo_sk#109, sr_addr_sk#110, sr_store_sk#111, sr_reason_sk#112, sr_ticket_number#113, sr_return_quantity#114, sr_return_amt#115, sr_return_tax#116, sr_return_amt_inc_tax#117, sr_fee#118, sr_return_ship_cost#119, sr_refunded_cash#120, sr_reversed_charge#121, sr_store_credit#122, sr_net_loss#123, sr_returned_date_sk#124]
Arguments: [sr_returned_date_sk#124 ASC NULLS FIRST], false, 0

(30) ReusedExchange [Reuses operator id: 9]
Output [28]: [d_date_sk#126, d_date_id#127, d_date#128, d_month_seq#129, d_week_seq#130, d_quarter_seq#131, d_year#132, d_dow#133, d_moy#134, d_dom#135, d_qoy#136, d_fy_year#137, d_fy_quarter_seq#138, d_fy_week_seq#139, d_day_name#140, d_quarter_name#141, d_holiday#142, d_weekend#143, d_following_holiday#144, d_first_dom#145, d_last_dom#146, d_same_day_ly#147, d_same_day_lq#148, d_current_day#149, d_current_week#150, d_current_month#151, d_current_quarter#152, d_current_year#153]

(31) Sort [codegen id : 11]
Input [28]: [d_date_sk#126, d_date_id#127, d_date#128, d_month_seq#129, d_week_seq#130, d_quarter_seq#131, d_year#132, d_dow#133, d_moy#134, d_dom#135, d_qoy#136, d_fy_year#137, d_fy_quarter_seq#138, d_fy_week_seq#139, d_day_name#140, d_quarter_name#141, d_holiday#142, d_weekend#143, d_following_holiday#144, d_first_dom#145, d_last_dom#146, d_same_day_ly#147, d_same_day_lq#148, d_current_day#149, d_current_week#150, d_current_month#151, d_current_quarter#152, d_current_year#153]
Arguments: [d_date_sk#126 ASC NULLS FIRST], false, 0

(32) SortMergeJoin [codegen id : 13]
Left keys [1]: [sr_returned_date_sk#124]
Right keys [1]: [d_date_sk#126]
Join condition: None

(33) HashAggregate [codegen id : 13]
Input [48]: [sr_return_time_sk#105, sr_item_sk#106, sr_customer_sk#107, sr_cdemo_sk#108, sr_hdemo_sk#109, sr_addr_sk#110, sr_store_sk#111, sr_reason_sk#112, sr_ticket_number#113, sr_return_quantity#114, sr_return_amt#115, sr_return_tax#116, sr_return_amt_inc_tax#117, sr_fee#118, sr_return_ship_cost#119, sr_refunded_cash#120, sr_reversed_charge#121, sr_store_credit#122, sr_net_loss#123, sr_returned_date_sk#124, d_date_sk#126, d_date_id#127, d_date#128, d_month_seq#129, d_week_seq#130, d_quarter_seq#131, d_year#132, d_dow#133, d_moy#134, d_dom#135, d_qoy#136, d_fy_year#137, d_fy_quarter_seq#138, d_fy_week_seq#139, d_day_name#140, d_quarter_name#141, d_holiday#142, d_weekend#143, d_following_holiday#144, d_first_dom#145, d_last_dom#146, d_same_day_ly#147, d_same_day_lq#148, d_current_day#149, d_current_week#150, d_current_month#151, d_current_quarter#152, d_current_year#153]
Keys [1]: [sr_store_sk#111]
Functions [2]: [partial_sum(UnscaledValue(sr_return_amt#115)), partial_sum(UnscaledValue(sr_net_loss#123))]
Aggregate Attributes [2]: [sum#154, sum#155]
Results [3]: [sr_store_sk#111, sum#156, sum#157]

(34) Project [codegen id : 13]
Output [3]: [sr_store_sk#111, sum#156 AS _pushedexpression#158, sum#157 AS _pushedexpression#159]
Input [3]: [sr_store_sk#111, sum#156, sum#157]

(35) ReusedExchange [Reuses operator id: 18]
Output [2]: [s_store_sk#160, s_store_sk#160]

(36) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [sr_store_sk#111]
Right keys [1]: [s_store_sk#160]
Join condition: None

(37) Project [codegen id : 13]
Output [4]: [_pushedexpression#161, _pushedexpression#162, s_store_sk#160, s_store_sk#160]
Input [5]: [sr_store_sk#111, _pushedexpression#158, _pushedexpression#159, s_store_sk#160, s_store_sk#160]

(38) HashAggregate [codegen id : 13]
Input [4]: [_pushedexpression#161, _pushedexpression#162, s_store_sk#160, s_store_sk#160]
Keys [1]: [s_store_sk#160]
Functions [2]: [partial_sum(_pushedexpression#161), partial_sum(_pushedexpression#162)]
Aggregate Attributes [4]: [sum#163, isEmpty#164, sum#165, isEmpty#166]
Results [5]: [s_store_sk#160, sum#167, isEmpty#168, sum#169, isEmpty#170]

(39) Exchange
Input [5]: [s_store_sk#160, sum#167, isEmpty#168, sum#169, isEmpty#170]
Arguments: hashpartitioning(s_store_sk#160, 5), ENSURE_REQUIREMENTS, [id=#171]

(40) HashAggregate [codegen id : 14]
Input [5]: [s_store_sk#160, sum#167, isEmpty#168, sum#169, isEmpty#170]
Keys [1]: [s_store_sk#160]
Functions [2]: [sum(_pushedexpression#161), sum(_pushedexpression#162)]
Aggregate Attributes [2]: [sum(_pushedexpression#161)#172, sum(_pushedexpression#162)#173]
Results [3]: [s_store_sk#160, cast(sum(_pushedexpression#161)#172 as decimal(17,2)) AS returns#174, cast(sum(_pushedexpression#162)#173 as decimal(17,2)) AS profit_loss#175]

(41) Sort [codegen id : 14]
Input [3]: [s_store_sk#160, returns#174, profit_loss#175]
Arguments: [s_store_sk#160 ASC NULLS FIRST], false, 0

(42) SortMergeJoin [codegen id : 15]
Left keys [1]: [s_store_sk#60]
Right keys [1]: [s_store_sk#160]
Join condition: None

(43) Project [codegen id : 15]
Output [5]: [sales#103, coalesce(returns#174, 0.00) AS returns#176, CheckOverflow((promote_precision(cast(profit#104 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#175, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#177, store channel AS channel#178, s_store_sk#60 AS id#179]
Input [6]: [s_store_sk#60, sales#103, profit#104, s_store_sk#160, returns#174, profit_loss#175]

(44) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#180, cs_ship_date_sk#181, cs_bill_customer_sk#182, cs_bill_cdemo_sk#183, cs_bill_hdemo_sk#184, cs_bill_addr_sk#185, cs_ship_customer_sk#186, cs_ship_cdemo_sk#187, cs_ship_hdemo_sk#188, cs_ship_addr_sk#189, cs_call_center_sk#190, cs_catalog_page_sk#191, cs_ship_mode_sk#192, cs_warehouse_sk#193, cs_item_sk#194, cs_promo_sk#195, cs_order_number#196, cs_quantity#197, cs_wholesale_cost#198, cs_list_price#199, cs_sales_price#200, cs_ext_discount_amt#201, cs_ext_sales_price#202, cs_ext_wholesale_cost#203, cs_ext_list_price#204, cs_ext_tax#205, cs_coupon_amt#206, cs_ext_ship_cost#207, cs_net_paid#208, cs_net_paid_inc_tax#209, cs_net_paid_inc_ship#210, cs_net_paid_inc_ship_tax#211, cs_net_profit#212, cs_sold_date_sk#213]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#213), dynamicpruningexpression(true)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(45) ColumnarToRow [codegen id : 16]
Input [34]: [cs_sold_time_sk#180, cs_ship_date_sk#181, cs_bill_customer_sk#182, cs_bill_cdemo_sk#183, cs_bill_hdemo_sk#184, cs_bill_addr_sk#185, cs_ship_customer_sk#186, cs_ship_cdemo_sk#187, cs_ship_hdemo_sk#188, cs_ship_addr_sk#189, cs_call_center_sk#190, cs_catalog_page_sk#191, cs_ship_mode_sk#192, cs_warehouse_sk#193, cs_item_sk#194, cs_promo_sk#195, cs_order_number#196, cs_quantity#197, cs_wholesale_cost#198, cs_list_price#199, cs_sales_price#200, cs_ext_discount_amt#201, cs_ext_sales_price#202, cs_ext_wholesale_cost#203, cs_ext_list_price#204, cs_ext_tax#205, cs_coupon_amt#206, cs_ext_ship_cost#207, cs_net_paid#208, cs_net_paid_inc_tax#209, cs_net_paid_inc_ship#210, cs_net_paid_inc_ship_tax#211, cs_net_profit#212, cs_sold_date_sk#213]

(46) HashAggregate [codegen id : 16]
Input [34]: [cs_sold_time_sk#180, cs_ship_date_sk#181, cs_bill_customer_sk#182, cs_bill_cdemo_sk#183, cs_bill_hdemo_sk#184, cs_bill_addr_sk#185, cs_ship_customer_sk#186, cs_ship_cdemo_sk#187, cs_ship_hdemo_sk#188, cs_ship_addr_sk#189, cs_call_center_sk#190, cs_catalog_page_sk#191, cs_ship_mode_sk#192, cs_warehouse_sk#193, cs_item_sk#194, cs_promo_sk#195, cs_order_number#196, cs_quantity#197, cs_wholesale_cost#198, cs_list_price#199, cs_sales_price#200, cs_ext_discount_amt#201, cs_ext_sales_price#202, cs_ext_wholesale_cost#203, cs_ext_list_price#204, cs_ext_tax#205, cs_coupon_amt#206, cs_ext_ship_cost#207, cs_net_paid#208, cs_net_paid_inc_tax#209, cs_net_paid_inc_ship#210, cs_net_paid_inc_ship_tax#211, cs_net_profit#212, cs_sold_date_sk#213]
Keys [2]: [cs_sold_date_sk#213, cs_call_center_sk#190]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_sales_price#202)), partial_sum(UnscaledValue(cs_net_profit#212))]
Aggregate Attributes [2]: [sum#214, sum#215]
Results [4]: [cs_sold_date_sk#213, cs_call_center_sk#190, sum#216, sum#217]

(47) Project [codegen id : 16]
Output [4]: [cs_sold_date_sk#213, cs_call_center_sk#190, sum#216 AS _pushedexpression#218, sum#217 AS _pushedexpression#219]
Input [4]: [cs_sold_date_sk#213, cs_call_center_sk#190, sum#216, sum#217]

(48) Exchange
Input [4]: [cs_sold_date_sk#213, cs_call_center_sk#190, _pushedexpression#218, _pushedexpression#219]
Arguments: hashpartitioning(cs_sold_date_sk#213, 5), ENSURE_REQUIREMENTS, [id=#220]

(49) Sort [codegen id : 17]
Input [4]: [cs_sold_date_sk#213, cs_call_center_sk#190, _pushedexpression#218, _pushedexpression#219]
Arguments: [cs_sold_date_sk#213 ASC NULLS FIRST], false, 0

(50) Scan parquet default.date_dim
Output [28]: [d_date_sk#221, d_date_id#222, d_date#223, d_month_seq#224, d_week_seq#225, d_quarter_seq#226, d_year#227, d_dow#228, d_moy#229, d_dom#230, d_qoy#231, d_fy_year#232, d_fy_quarter_seq#233, d_fy_week_seq#234, d_day_name#235, d_quarter_name#236, d_holiday#237, d_weekend#238, d_following_holiday#239, d_first_dom#240, d_last_dom#241, d_same_day_ly#242, d_same_day_lq#243, d_current_day#244, d_current_week#245, d_current_month#246, d_current_quarter#247, d_current_year#248]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(51) ColumnarToRow [codegen id : 18]
Input [28]: [d_date_sk#221, d_date_id#222, d_date#223, d_month_seq#224, d_week_seq#225, d_quarter_seq#226, d_year#227, d_dow#228, d_moy#229, d_dom#230, d_qoy#231, d_fy_year#232, d_fy_quarter_seq#233, d_fy_week_seq#234, d_day_name#235, d_quarter_name#236, d_holiday#237, d_weekend#238, d_following_holiday#239, d_first_dom#240, d_last_dom#241, d_same_day_ly#242, d_same_day_lq#243, d_current_day#244, d_current_week#245, d_current_month#246, d_current_quarter#247, d_current_year#248]

(52) Filter [codegen id : 18]
Input [28]: [d_date_sk#221, d_date_id#222, d_date#223, d_month_seq#224, d_week_seq#225, d_quarter_seq#226, d_year#227, d_dow#228, d_moy#229, d_dom#230, d_qoy#231, d_fy_year#232, d_fy_quarter_seq#233, d_fy_week_seq#234, d_day_name#235, d_quarter_name#236, d_holiday#237, d_weekend#238, d_following_holiday#239, d_first_dom#240, d_last_dom#241, d_same_day_ly#242, d_same_day_lq#243, d_current_day#244, d_current_week#245, d_current_month#246, d_current_quarter#247, d_current_year#248]
Condition : (((isnotnull(d_date#223) AND (d_date#223 >= 2000-08-03)) AND (d_date#223 <= 2000-09-02)) AND isnotnull(d_date_sk#221))

(53) HashAggregate [codegen id : 18]
Input [28]: [d_date_sk#221, d_date_id#222, d_date#223, d_month_seq#224, d_week_seq#225, d_quarter_seq#226, d_year#227, d_dow#228, d_moy#229, d_dom#230, d_qoy#231, d_fy_year#232, d_fy_quarter_seq#233, d_fy_week_seq#234, d_day_name#235, d_quarter_name#236, d_holiday#237, d_weekend#238, d_following_holiday#239, d_first_dom#240, d_last_dom#241, d_same_day_ly#242, d_same_day_lq#243, d_current_day#244, d_current_week#245, d_current_month#246, d_current_quarter#247, d_current_year#248]
Keys [1]: [d_date_sk#221]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#221]

(54) Exchange
Input [1]: [d_date_sk#221]
Arguments: hashpartitioning(d_date_sk#221, 5), ENSURE_REQUIREMENTS, [id=#249]

(55) Sort [codegen id : 19]
Input [1]: [d_date_sk#221]
Arguments: [d_date_sk#221 ASC NULLS FIRST], false, 0

(56) SortMergeJoin [codegen id : 20]
Left keys [1]: [cs_sold_date_sk#213]
Right keys [1]: [d_date_sk#221]
Join condition: None

(57) Project [codegen id : 20]
Output [3]: [cs_call_center_sk#190, _pushedexpression#250, _pushedexpression#251]
Input [5]: [cs_sold_date_sk#213, cs_call_center_sk#190, _pushedexpression#218, _pushedexpression#219, d_date_sk#221]

(58) HashAggregate [codegen id : 20]
Input [3]: [cs_call_center_sk#190, _pushedexpression#250, _pushedexpression#251]
Keys [1]: [cs_call_center_sk#190]
Functions [2]: [partial_sum(_pushedexpression#250), partial_sum(_pushedexpression#251)]
Aggregate Attributes [4]: [sum#252, isEmpty#253, sum#254, isEmpty#255]
Results [5]: [cs_call_center_sk#190, sum#256, isEmpty#257, sum#258, isEmpty#259]

(59) Exchange
Input [5]: [cs_call_center_sk#190, sum#256, isEmpty#257, sum#258, isEmpty#259]
Arguments: hashpartitioning(cs_call_center_sk#190, 5), ENSURE_REQUIREMENTS, [id=#260]

(60) HashAggregate [codegen id : 27]
Input [5]: [cs_call_center_sk#190, sum#256, isEmpty#257, sum#258, isEmpty#259]
Keys [1]: [cs_call_center_sk#190]
Functions [2]: [sum(_pushedexpression#250), sum(_pushedexpression#251)]
Aggregate Attributes [2]: [sum(_pushedexpression#250)#261, sum(_pushedexpression#251)#262]
Results [3]: [cs_call_center_sk#190, cast(sum(_pushedexpression#250)#261 as decimal(17,2)) AS sales#263, cast(sum(_pushedexpression#251)#262 as decimal(17,2)) AS profit#264]

(61) Scan parquet default.catalog_returns
Output [27]: [cr_returned_time_sk#265, cr_item_sk#266, cr_refunded_customer_sk#267, cr_refunded_cdemo_sk#268, cr_refunded_hdemo_sk#269, cr_refunded_addr_sk#270, cr_returning_customer_sk#271, cr_returning_cdemo_sk#272, cr_returning_hdemo_sk#273, cr_returning_addr_sk#274, cr_call_center_sk#275, cr_catalog_page_sk#276, cr_ship_mode_sk#277, cr_warehouse_sk#278, cr_reason_sk#279, cr_order_number#280, cr_return_quantity#281, cr_return_amount#282, cr_return_tax#283, cr_return_amt_inc_tax#284, cr_fee#285, cr_return_ship_cost#286, cr_refunded_cash#287, cr_reversed_charge#288, cr_store_credit#289, cr_net_loss#290, cr_returned_date_sk#291]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#291), dynamicpruningexpression(true)]
ReadSchema: struct<cr_returned_time_sk:int,cr_item_sk:int,cr_refunded_customer_sk:int,cr_refunded_cdemo_sk:int,cr_refunded_hdemo_sk:int,cr_refunded_addr_sk:int,cr_returning_customer_sk:int,cr_returning_cdemo_sk:int,cr_returning_hdemo_sk:int,cr_returning_addr_sk:int,cr_call_center_sk:int,cr_catalog_page_sk:int,cr_ship_mode_sk:int,cr_warehouse_sk:int,cr_reason_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2),cr_return_tax:decimal(7,2),cr_return_amt_inc_tax:decimal(7,2),cr_fee:decimal(7,2),cr_return_ship_cost:decimal(7,2),cr_refunded_cash:decimal(7,2),cr_reversed_charge:decimal(7,2),cr_store_credit:decimal(7,2),cr_net_loss:decimal(7,2)>

(62) ColumnarToRow [codegen id : 21]
Input [27]: [cr_returned_time_sk#265, cr_item_sk#266, cr_refunded_customer_sk#267, cr_refunded_cdemo_sk#268, cr_refunded_hdemo_sk#269, cr_refunded_addr_sk#270, cr_returning_customer_sk#271, cr_returning_cdemo_sk#272, cr_returning_hdemo_sk#273, cr_returning_addr_sk#274, cr_call_center_sk#275, cr_catalog_page_sk#276, cr_ship_mode_sk#277, cr_warehouse_sk#278, cr_reason_sk#279, cr_order_number#280, cr_return_quantity#281, cr_return_amount#282, cr_return_tax#283, cr_return_amt_inc_tax#284, cr_fee#285, cr_return_ship_cost#286, cr_refunded_cash#287, cr_reversed_charge#288, cr_store_credit#289, cr_net_loss#290, cr_returned_date_sk#291]

(63) HashAggregate [codegen id : 21]
Input [27]: [cr_returned_time_sk#265, cr_item_sk#266, cr_refunded_customer_sk#267, cr_refunded_cdemo_sk#268, cr_refunded_hdemo_sk#269, cr_refunded_addr_sk#270, cr_returning_customer_sk#271, cr_returning_cdemo_sk#272, cr_returning_hdemo_sk#273, cr_returning_addr_sk#274, cr_call_center_sk#275, cr_catalog_page_sk#276, cr_ship_mode_sk#277, cr_warehouse_sk#278, cr_reason_sk#279, cr_order_number#280, cr_return_quantity#281, cr_return_amount#282, cr_return_tax#283, cr_return_amt_inc_tax#284, cr_fee#285, cr_return_ship_cost#286, cr_refunded_cash#287, cr_reversed_charge#288, cr_store_credit#289, cr_net_loss#290, cr_returned_date_sk#291]
Keys [1]: [cr_returned_date_sk#291]
Functions [2]: [partial_sum(UnscaledValue(cr_return_amount#282)), partial_sum(UnscaledValue(cr_net_loss#290))]
Aggregate Attributes [2]: [sum#292, sum#293]
Results [3]: [cr_returned_date_sk#291, sum#294, sum#295]

(64) Project [codegen id : 21]
Output [3]: [cr_returned_date_sk#291, sum#294 AS _pushedexpression#296, sum#295 AS _pushedexpression#297]
Input [3]: [cr_returned_date_sk#291, sum#294, sum#295]

(65) Exchange
Input [3]: [cr_returned_date_sk#291, _pushedexpression#296, _pushedexpression#297]
Arguments: hashpartitioning(cr_returned_date_sk#291, 5), ENSURE_REQUIREMENTS, [id=#298]

(66) Sort [codegen id : 22]
Input [3]: [cr_returned_date_sk#291, _pushedexpression#296, _pushedexpression#297]
Arguments: [cr_returned_date_sk#291 ASC NULLS FIRST], false, 0

(67) ReusedExchange [Reuses operator id: 54]
Output [1]: [d_date_sk#299]

(68) Sort [codegen id : 24]
Input [1]: [d_date_sk#299]
Arguments: [d_date_sk#299 ASC NULLS FIRST], false, 0

(69) SortMergeJoin [codegen id : 25]
Left keys [1]: [cr_returned_date_sk#291]
Right keys [1]: [d_date_sk#299]
Join condition: None

(70) Project [codegen id : 25]
Output [2]: [_pushedexpression#300, _pushedexpression#301]
Input [4]: [cr_returned_date_sk#291, _pushedexpression#296, _pushedexpression#297, d_date_sk#299]

(71) HashAggregate [codegen id : 25]
Input [2]: [_pushedexpression#300, _pushedexpression#301]
Keys: []
Functions [2]: [partial_sum(_pushedexpression#300), partial_sum(_pushedexpression#301)]
Aggregate Attributes [4]: [sum#302, isEmpty#303, sum#304, isEmpty#305]
Results [4]: [sum#306, isEmpty#307, sum#308, isEmpty#309]

(72) Exchange
Input [4]: [sum#306, isEmpty#307, sum#308, isEmpty#309]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#310]

(73) HashAggregate [codegen id : 26]
Input [4]: [sum#306, isEmpty#307, sum#308, isEmpty#309]
Keys: []
Functions [2]: [sum(_pushedexpression#300), sum(_pushedexpression#301)]
Aggregate Attributes [2]: [sum(_pushedexpression#300)#311, sum(_pushedexpression#301)#312]
Results [2]: [cast(sum(_pushedexpression#300)#311 as decimal(17,2)) AS returns#313, cast(sum(_pushedexpression#301)#312 as decimal(17,2)) AS profit_loss#314]

(74) BroadcastExchange
Input [2]: [returns#313, profit_loss#314]
Arguments: IdentityBroadcastMode, [id=#315]

(75) BroadcastNestedLoopJoin [codegen id : 27]
Join condition: None

(76) Project [codegen id : 27]
Output [5]: [sales#263, returns#313, CheckOverflow((promote_precision(cast(profit#264 as decimal(18,2))) - promote_precision(cast(profit_loss#314 as decimal(18,2)))), DecimalType(18,2)) AS profit#316, catalog channel AS channel#317, cs_call_center_sk#190 AS id#318]
Input [5]: [cs_call_center_sk#190, sales#263, profit#264, returns#313, profit_loss#314]

(77) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#319, ws_ship_date_sk#320, ws_item_sk#321, ws_bill_customer_sk#322, ws_bill_cdemo_sk#323, ws_bill_hdemo_sk#324, ws_bill_addr_sk#325, ws_ship_customer_sk#326, ws_ship_cdemo_sk#327, ws_ship_hdemo_sk#328, ws_ship_addr_sk#329, ws_web_page_sk#330, ws_web_site_sk#331, ws_ship_mode_sk#332, ws_warehouse_sk#333, ws_promo_sk#334, ws_order_number#335, ws_quantity#336, ws_wholesale_cost#337, ws_list_price#338, ws_sales_price#339, ws_ext_discount_amt#340, ws_ext_sales_price#341, ws_ext_wholesale_cost#342, ws_ext_list_price#343, ws_ext_tax#344, ws_coupon_amt#345, ws_ext_ship_cost#346, ws_net_paid#347, ws_net_paid_inc_tax#348, ws_net_paid_inc_ship#349, ws_net_paid_inc_ship_tax#350, ws_net_profit#351, ws_sold_date_sk#352]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#352), dynamicpruningexpression(true)]
PushedFilters: [IsNotNull(ws_web_page_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(78) ColumnarToRow [codegen id : 28]
Input [34]: [ws_sold_time_sk#319, ws_ship_date_sk#320, ws_item_sk#321, ws_bill_customer_sk#322, ws_bill_cdemo_sk#323, ws_bill_hdemo_sk#324, ws_bill_addr_sk#325, ws_ship_customer_sk#326, ws_ship_cdemo_sk#327, ws_ship_hdemo_sk#328, ws_ship_addr_sk#329, ws_web_page_sk#330, ws_web_site_sk#331, ws_ship_mode_sk#332, ws_warehouse_sk#333, ws_promo_sk#334, ws_order_number#335, ws_quantity#336, ws_wholesale_cost#337, ws_list_price#338, ws_sales_price#339, ws_ext_discount_amt#340, ws_ext_sales_price#341, ws_ext_wholesale_cost#342, ws_ext_list_price#343, ws_ext_tax#344, ws_coupon_amt#345, ws_ext_ship_cost#346, ws_net_paid#347, ws_net_paid_inc_tax#348, ws_net_paid_inc_ship#349, ws_net_paid_inc_ship_tax#350, ws_net_profit#351, ws_sold_date_sk#352]

(79) Filter [codegen id : 28]
Input [34]: [ws_sold_time_sk#319, ws_ship_date_sk#320, ws_item_sk#321, ws_bill_customer_sk#322, ws_bill_cdemo_sk#323, ws_bill_hdemo_sk#324, ws_bill_addr_sk#325, ws_ship_customer_sk#326, ws_ship_cdemo_sk#327, ws_ship_hdemo_sk#328, ws_ship_addr_sk#329, ws_web_page_sk#330, ws_web_site_sk#331, ws_ship_mode_sk#332, ws_warehouse_sk#333, ws_promo_sk#334, ws_order_number#335, ws_quantity#336, ws_wholesale_cost#337, ws_list_price#338, ws_sales_price#339, ws_ext_discount_amt#340, ws_ext_sales_price#341, ws_ext_wholesale_cost#342, ws_ext_list_price#343, ws_ext_tax#344, ws_coupon_amt#345, ws_ext_ship_cost#346, ws_net_paid#347, ws_net_paid_inc_tax#348, ws_net_paid_inc_ship#349, ws_net_paid_inc_ship_tax#350, ws_net_profit#351, ws_sold_date_sk#352]
Condition : isnotnull(ws_web_page_sk#330)

(80) Exchange
Input [34]: [ws_sold_time_sk#319, ws_ship_date_sk#320, ws_item_sk#321, ws_bill_customer_sk#322, ws_bill_cdemo_sk#323, ws_bill_hdemo_sk#324, ws_bill_addr_sk#325, ws_ship_customer_sk#326, ws_ship_cdemo_sk#327, ws_ship_hdemo_sk#328, ws_ship_addr_sk#329, ws_web_page_sk#330, ws_web_site_sk#331, ws_ship_mode_sk#332, ws_warehouse_sk#333, ws_promo_sk#334, ws_order_number#335, ws_quantity#336, ws_wholesale_cost#337, ws_list_price#338, ws_sales_price#339, ws_ext_discount_amt#340, ws_ext_sales_price#341, ws_ext_wholesale_cost#342, ws_ext_list_price#343, ws_ext_tax#344, ws_coupon_amt#345, ws_ext_ship_cost#346, ws_net_paid#347, ws_net_paid_inc_tax#348, ws_net_paid_inc_ship#349, ws_net_paid_inc_ship_tax#350, ws_net_profit#351, ws_sold_date_sk#352]
Arguments: hashpartitioning(ws_sold_date_sk#352, 5), ENSURE_REQUIREMENTS, [id=#353]

(81) Sort [codegen id : 29]
Input [34]: [ws_sold_time_sk#319, ws_ship_date_sk#320, ws_item_sk#321, ws_bill_customer_sk#322, ws_bill_cdemo_sk#323, ws_bill_hdemo_sk#324, ws_bill_addr_sk#325, ws_ship_customer_sk#326, ws_ship_cdemo_sk#327, ws_ship_hdemo_sk#328, ws_ship_addr_sk#329, ws_web_page_sk#330, ws_web_site_sk#331, ws_ship_mode_sk#332, ws_warehouse_sk#333, ws_promo_sk#334, ws_order_number#335, ws_quantity#336, ws_wholesale_cost#337, ws_list_price#338, ws_sales_price#339, ws_ext_discount_amt#340, ws_ext_sales_price#341, ws_ext_wholesale_cost#342, ws_ext_list_price#343, ws_ext_tax#344, ws_coupon_amt#345, ws_ext_ship_cost#346, ws_net_paid#347, ws_net_paid_inc_tax#348, ws_net_paid_inc_ship#349, ws_net_paid_inc_ship_tax#350, ws_net_profit#351, ws_sold_date_sk#352]
Arguments: [ws_sold_date_sk#352 ASC NULLS FIRST], false, 0

(82) ReusedExchange [Reuses operator id: 9]
Output [28]: [d_date_sk#354, d_date_id#355, d_date#356, d_month_seq#357, d_week_seq#358, d_quarter_seq#359, d_year#360, d_dow#361, d_moy#362, d_dom#363, d_qoy#364, d_fy_year#365, d_fy_quarter_seq#366, d_fy_week_seq#367, d_day_name#368, d_quarter_name#369, d_holiday#370, d_weekend#371, d_following_holiday#372, d_first_dom#373, d_last_dom#374, d_same_day_ly#375, d_same_day_lq#376, d_current_day#377, d_current_week#378, d_current_month#379, d_current_quarter#380, d_current_year#381]

(83) Sort [codegen id : 31]
Input [28]: [d_date_sk#354, d_date_id#355, d_date#356, d_month_seq#357, d_week_seq#358, d_quarter_seq#359, d_year#360, d_dow#361, d_moy#362, d_dom#363, d_qoy#364, d_fy_year#365, d_fy_quarter_seq#366, d_fy_week_seq#367, d_day_name#368, d_quarter_name#369, d_holiday#370, d_weekend#371, d_following_holiday#372, d_first_dom#373, d_last_dom#374, d_same_day_ly#375, d_same_day_lq#376, d_current_day#377, d_current_week#378, d_current_month#379, d_current_quarter#380, d_current_year#381]
Arguments: [d_date_sk#354 ASC NULLS FIRST], false, 0

(84) SortMergeJoin [codegen id : 33]
Left keys [1]: [ws_sold_date_sk#352]
Right keys [1]: [d_date_sk#354]
Join condition: None

(85) HashAggregate [codegen id : 33]
Input [62]: [ws_sold_time_sk#319, ws_ship_date_sk#320, ws_item_sk#321, ws_bill_customer_sk#322, ws_bill_cdemo_sk#323, ws_bill_hdemo_sk#324, ws_bill_addr_sk#325, ws_ship_customer_sk#326, ws_ship_cdemo_sk#327, ws_ship_hdemo_sk#328, ws_ship_addr_sk#329, ws_web_page_sk#330, ws_web_site_sk#331, ws_ship_mode_sk#332, ws_warehouse_sk#333, ws_promo_sk#334, ws_order_number#335, ws_quantity#336, ws_wholesale_cost#337, ws_list_price#338, ws_sales_price#339, ws_ext_discount_amt#340, ws_ext_sales_price#341, ws_ext_wholesale_cost#342, ws_ext_list_price#343, ws_ext_tax#344, ws_coupon_amt#345, ws_ext_ship_cost#346, ws_net_paid#347, ws_net_paid_inc_tax#348, ws_net_paid_inc_ship#349, ws_net_paid_inc_ship_tax#350, ws_net_profit#351, ws_sold_date_sk#352, d_date_sk#354, d_date_id#355, d_date#356, d_month_seq#357, d_week_seq#358, d_quarter_seq#359, d_year#360, d_dow#361, d_moy#362, d_dom#363, d_qoy#364, d_fy_year#365, d_fy_quarter_seq#366, d_fy_week_seq#367, d_day_name#368, d_quarter_name#369, d_holiday#370, d_weekend#371, d_following_holiday#372, d_first_dom#373, d_last_dom#374, d_same_day_ly#375, d_same_day_lq#376, d_current_day#377, d_current_week#378, d_current_month#379, d_current_quarter#380, d_current_year#381]
Keys [1]: [ws_web_page_sk#330]
Functions [2]: [partial_sum(UnscaledValue(ws_ext_sales_price#341)), partial_sum(UnscaledValue(ws_net_profit#351))]
Aggregate Attributes [2]: [sum#382, sum#383]
Results [3]: [ws_web_page_sk#330, sum#384, sum#385]

(86) Project [codegen id : 33]
Output [3]: [ws_web_page_sk#330, sum#384 AS _pushedexpression#386, sum#385 AS _pushedexpression#387]
Input [3]: [ws_web_page_sk#330, sum#384, sum#385]

(87) Scan parquet default.web_page
Output [14]: [wp_web_page_sk#388, wp_web_page_id#389, wp_rec_start_date#390, wp_rec_end_date#391, wp_creation_date_sk#392, wp_access_date_sk#393, wp_autogen_flag#394, wp_customer_sk#395, wp_url#396, wp_type#397, wp_char_count#398, wp_link_count#399, wp_image_count#400, wp_max_ad_count#401]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_page]
PushedFilters: [IsNotNull(wp_web_page_sk)]
ReadSchema: struct<wp_web_page_sk:int,wp_web_page_id:string,wp_rec_start_date:date,wp_rec_end_date:date,wp_creation_date_sk:int,wp_access_date_sk:int,wp_autogen_flag:string,wp_customer_sk:int,wp_url:string,wp_type:string,wp_char_count:int,wp_link_count:int,wp_image_count:int,wp_max_ad_count:int>

(88) ColumnarToRow [codegen id : 32]
Input [14]: [wp_web_page_sk#388, wp_web_page_id#389, wp_rec_start_date#390, wp_rec_end_date#391, wp_creation_date_sk#392, wp_access_date_sk#393, wp_autogen_flag#394, wp_customer_sk#395, wp_url#396, wp_type#397, wp_char_count#398, wp_link_count#399, wp_image_count#400, wp_max_ad_count#401]

(89) Filter [codegen id : 32]
Input [14]: [wp_web_page_sk#388, wp_web_page_id#389, wp_rec_start_date#390, wp_rec_end_date#391, wp_creation_date_sk#392, wp_access_date_sk#393, wp_autogen_flag#394, wp_customer_sk#395, wp_url#396, wp_type#397, wp_char_count#398, wp_link_count#399, wp_image_count#400, wp_max_ad_count#401]
Condition : isnotnull(wp_web_page_sk#388)

(90) HashAggregate [codegen id : 32]
Input [14]: [wp_web_page_sk#388, wp_web_page_id#389, wp_rec_start_date#390, wp_rec_end_date#391, wp_creation_date_sk#392, wp_access_date_sk#393, wp_autogen_flag#394, wp_customer_sk#395, wp_url#396, wp_type#397, wp_char_count#398, wp_link_count#399, wp_image_count#400, wp_max_ad_count#401]
Keys [2]: [wp_web_page_sk#388, wp_web_page_sk#388]
Functions: []
Aggregate Attributes: []
Results [2]: [wp_web_page_sk#388, wp_web_page_sk#388]

(91) BroadcastExchange
Input [2]: [wp_web_page_sk#388, wp_web_page_sk#388]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#402]

(92) BroadcastHashJoin [codegen id : 33]
Left keys [1]: [ws_web_page_sk#330]
Right keys [1]: [wp_web_page_sk#388]
Join condition: None

(93) Project [codegen id : 33]
Output [4]: [_pushedexpression#403, _pushedexpression#404, wp_web_page_sk#388, wp_web_page_sk#388]
Input [5]: [ws_web_page_sk#330, _pushedexpression#386, _pushedexpression#387, wp_web_page_sk#388, wp_web_page_sk#388]

(94) HashAggregate [codegen id : 33]
Input [4]: [_pushedexpression#403, _pushedexpression#404, wp_web_page_sk#388, wp_web_page_sk#388]
Keys [1]: [wp_web_page_sk#388]
Functions [2]: [partial_sum(_pushedexpression#403), partial_sum(_pushedexpression#404)]
Aggregate Attributes [4]: [sum#405, isEmpty#406, sum#407, isEmpty#408]
Results [5]: [wp_web_page_sk#388, sum#409, isEmpty#410, sum#411, isEmpty#412]

(95) Exchange
Input [5]: [wp_web_page_sk#388, sum#409, isEmpty#410, sum#411, isEmpty#412]
Arguments: hashpartitioning(wp_web_page_sk#388, 5), ENSURE_REQUIREMENTS, [id=#413]

(96) HashAggregate [codegen id : 34]
Input [5]: [wp_web_page_sk#388, sum#409, isEmpty#410, sum#411, isEmpty#412]
Keys [1]: [wp_web_page_sk#388]
Functions [2]: [sum(_pushedexpression#403), sum(_pushedexpression#404)]
Aggregate Attributes [2]: [sum(_pushedexpression#403)#414, sum(_pushedexpression#404)#415]
Results [3]: [wp_web_page_sk#388, cast(sum(_pushedexpression#403)#414 as decimal(17,2)) AS sales#416, cast(sum(_pushedexpression#404)#415 as decimal(17,2)) AS profit#417]

(97) Sort [codegen id : 34]
Input [3]: [wp_web_page_sk#388, sales#416, profit#417]
Arguments: [wp_web_page_sk#388 ASC NULLS FIRST], false, 0

(98) Scan parquet default.web_returns
Output [24]: [wr_returned_time_sk#418, wr_item_sk#419, wr_refunded_customer_sk#420, wr_refunded_cdemo_sk#421, wr_refunded_hdemo_sk#422, wr_refunded_addr_sk#423, wr_returning_customer_sk#424, wr_returning_cdemo_sk#425, wr_returning_hdemo_sk#426, wr_returning_addr_sk#427, wr_web_page_sk#428, wr_reason_sk#429, wr_order_number#430, wr_return_quantity#431, wr_return_amt#432, wr_return_tax#433, wr_return_amt_inc_tax#434, wr_fee#435, wr_return_ship_cost#436, wr_refunded_cash#437, wr_reversed_charge#438, wr_account_credit#439, wr_net_loss#440, wr_returned_date_sk#441]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#441), dynamicpruningexpression(true)]
PushedFilters: [IsNotNull(wr_web_page_sk)]
ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_hdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_customer_sk:int,wr_returning_cdemo_sk:int,wr_returning_hdemo_sk:int,wr_returning_addr_sk:int,wr_web_page_sk:int,wr_reason_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2),wr_return_tax:decimal(7,2),wr_return_amt_inc_tax:decimal(7,2),wr_fee:decimal(7,2),wr_return_ship_cost:decimal(7,2),wr_refunded_cash:decimal(7,2),wr_reversed_charge:decimal(7,2),wr_account_credit:decimal(7,2),wr_net_loss:decimal(7,2)>

(99) ColumnarToRow [codegen id : 35]
Input [24]: [wr_returned_time_sk#418, wr_item_sk#419, wr_refunded_customer_sk#420, wr_refunded_cdemo_sk#421, wr_refunded_hdemo_sk#422, wr_refunded_addr_sk#423, wr_returning_customer_sk#424, wr_returning_cdemo_sk#425, wr_returning_hdemo_sk#426, wr_returning_addr_sk#427, wr_web_page_sk#428, wr_reason_sk#429, wr_order_number#430, wr_return_quantity#431, wr_return_amt#432, wr_return_tax#433, wr_return_amt_inc_tax#434, wr_fee#435, wr_return_ship_cost#436, wr_refunded_cash#437, wr_reversed_charge#438, wr_account_credit#439, wr_net_loss#440, wr_returned_date_sk#441]

(100) Filter [codegen id : 35]
Input [24]: [wr_returned_time_sk#418, wr_item_sk#419, wr_refunded_customer_sk#420, wr_refunded_cdemo_sk#421, wr_refunded_hdemo_sk#422, wr_refunded_addr_sk#423, wr_returning_customer_sk#424, wr_returning_cdemo_sk#425, wr_returning_hdemo_sk#426, wr_returning_addr_sk#427, wr_web_page_sk#428, wr_reason_sk#429, wr_order_number#430, wr_return_quantity#431, wr_return_amt#432, wr_return_tax#433, wr_return_amt_inc_tax#434, wr_fee#435, wr_return_ship_cost#436, wr_refunded_cash#437, wr_reversed_charge#438, wr_account_credit#439, wr_net_loss#440, wr_returned_date_sk#441]
Condition : isnotnull(wr_web_page_sk#428)

(101) Exchange
Input [24]: [wr_returned_time_sk#418, wr_item_sk#419, wr_refunded_customer_sk#420, wr_refunded_cdemo_sk#421, wr_refunded_hdemo_sk#422, wr_refunded_addr_sk#423, wr_returning_customer_sk#424, wr_returning_cdemo_sk#425, wr_returning_hdemo_sk#426, wr_returning_addr_sk#427, wr_web_page_sk#428, wr_reason_sk#429, wr_order_number#430, wr_return_quantity#431, wr_return_amt#432, wr_return_tax#433, wr_return_amt_inc_tax#434, wr_fee#435, wr_return_ship_cost#436, wr_refunded_cash#437, wr_reversed_charge#438, wr_account_credit#439, wr_net_loss#440, wr_returned_date_sk#441]
Arguments: hashpartitioning(wr_returned_date_sk#441, 5), ENSURE_REQUIREMENTS, [id=#442]

(102) Sort [codegen id : 36]
Input [24]: [wr_returned_time_sk#418, wr_item_sk#419, wr_refunded_customer_sk#420, wr_refunded_cdemo_sk#421, wr_refunded_hdemo_sk#422, wr_refunded_addr_sk#423, wr_returning_customer_sk#424, wr_returning_cdemo_sk#425, wr_returning_hdemo_sk#426, wr_returning_addr_sk#427, wr_web_page_sk#428, wr_reason_sk#429, wr_order_number#430, wr_return_quantity#431, wr_return_amt#432, wr_return_tax#433, wr_return_amt_inc_tax#434, wr_fee#435, wr_return_ship_cost#436, wr_refunded_cash#437, wr_reversed_charge#438, wr_account_credit#439, wr_net_loss#440, wr_returned_date_sk#441]
Arguments: [wr_returned_date_sk#441 ASC NULLS FIRST], false, 0

(103) ReusedExchange [Reuses operator id: 9]
Output [28]: [d_date_sk#443, d_date_id#444, d_date#445, d_month_seq#446, d_week_seq#447, d_quarter_seq#448, d_year#449, d_dow#450, d_moy#451, d_dom#452, d_qoy#453, d_fy_year#454, d_fy_quarter_seq#455, d_fy_week_seq#456, d_day_name#457, d_quarter_name#458, d_holiday#459, d_weekend#460, d_following_holiday#461, d_first_dom#462, d_last_dom#463, d_same_day_ly#464, d_same_day_lq#465, d_current_day#466, d_current_week#467, d_current_month#468, d_current_quarter#469, d_current_year#470]

(104) Sort [codegen id : 38]
Input [28]: [d_date_sk#443, d_date_id#444, d_date#445, d_month_seq#446, d_week_seq#447, d_quarter_seq#448, d_year#449, d_dow#450, d_moy#451, d_dom#452, d_qoy#453, d_fy_year#454, d_fy_quarter_seq#455, d_fy_week_seq#456, d_day_name#457, d_quarter_name#458, d_holiday#459, d_weekend#460, d_following_holiday#461, d_first_dom#462, d_last_dom#463, d_same_day_ly#464, d_same_day_lq#465, d_current_day#466, d_current_week#467, d_current_month#468, d_current_quarter#469, d_current_year#470]
Arguments: [d_date_sk#443 ASC NULLS FIRST], false, 0

(105) SortMergeJoin [codegen id : 40]
Left keys [1]: [wr_returned_date_sk#441]
Right keys [1]: [d_date_sk#443]
Join condition: None

(106) HashAggregate [codegen id : 40]
Input [52]: [wr_returned_time_sk#418, wr_item_sk#419, wr_refunded_customer_sk#420, wr_refunded_cdemo_sk#421, wr_refunded_hdemo_sk#422, wr_refunded_addr_sk#423, wr_returning_customer_sk#424, wr_returning_cdemo_sk#425, wr_returning_hdemo_sk#426, wr_returning_addr_sk#427, wr_web_page_sk#428, wr_reason_sk#429, wr_order_number#430, wr_return_quantity#431, wr_return_amt#432, wr_return_tax#433, wr_return_amt_inc_tax#434, wr_fee#435, wr_return_ship_cost#436, wr_refunded_cash#437, wr_reversed_charge#438, wr_account_credit#439, wr_net_loss#440, wr_returned_date_sk#441, d_date_sk#443, d_date_id#444, d_date#445, d_month_seq#446, d_week_seq#447, d_quarter_seq#448, d_year#449, d_dow#450, d_moy#451, d_dom#452, d_qoy#453, d_fy_year#454, d_fy_quarter_seq#455, d_fy_week_seq#456, d_day_name#457, d_quarter_name#458, d_holiday#459, d_weekend#460, d_following_holiday#461, d_first_dom#462, d_last_dom#463, d_same_day_ly#464, d_same_day_lq#465, d_current_day#466, d_current_week#467, d_current_month#468, d_current_quarter#469, d_current_year#470]
Keys [1]: [wr_web_page_sk#428]
Functions [2]: [partial_sum(UnscaledValue(wr_return_amt#432)), partial_sum(UnscaledValue(wr_net_loss#440))]
Aggregate Attributes [2]: [sum#471, sum#472]
Results [3]: [wr_web_page_sk#428, sum#473, sum#474]

(107) Project [codegen id : 40]
Output [3]: [wr_web_page_sk#428, sum#473 AS _pushedexpression#475, sum#474 AS _pushedexpression#476]
Input [3]: [wr_web_page_sk#428, sum#473, sum#474]

(108) ReusedExchange [Reuses operator id: 91]
Output [2]: [wp_web_page_sk#477, wp_web_page_sk#477]

(109) BroadcastHashJoin [codegen id : 40]
Left keys [1]: [wr_web_page_sk#428]
Right keys [1]: [wp_web_page_sk#477]
Join condition: None

(110) Project [codegen id : 40]
Output [4]: [_pushedexpression#478, _pushedexpression#479, wp_web_page_sk#477, wp_web_page_sk#477]
Input [5]: [wr_web_page_sk#428, _pushedexpression#475, _pushedexpression#476, wp_web_page_sk#477, wp_web_page_sk#477]

(111) HashAggregate [codegen id : 40]
Input [4]: [_pushedexpression#478, _pushedexpression#479, wp_web_page_sk#477, wp_web_page_sk#477]
Keys [1]: [wp_web_page_sk#477]
Functions [2]: [partial_sum(_pushedexpression#478), partial_sum(_pushedexpression#479)]
Aggregate Attributes [4]: [sum#480, isEmpty#481, sum#482, isEmpty#483]
Results [5]: [wp_web_page_sk#477, sum#484, isEmpty#485, sum#486, isEmpty#487]

(112) Exchange
Input [5]: [wp_web_page_sk#477, sum#484, isEmpty#485, sum#486, isEmpty#487]
Arguments: hashpartitioning(wp_web_page_sk#477, 5), ENSURE_REQUIREMENTS, [id=#488]

(113) HashAggregate [codegen id : 41]
Input [5]: [wp_web_page_sk#477, sum#484, isEmpty#485, sum#486, isEmpty#487]
Keys [1]: [wp_web_page_sk#477]
Functions [2]: [sum(_pushedexpression#478), sum(_pushedexpression#479)]
Aggregate Attributes [2]: [sum(_pushedexpression#478)#489, sum(_pushedexpression#479)#490]
Results [3]: [wp_web_page_sk#477, cast(sum(_pushedexpression#478)#489 as decimal(17,2)) AS returns#491, cast(sum(_pushedexpression#479)#490 as decimal(17,2)) AS profit_loss#492]

(114) Sort [codegen id : 41]
Input [3]: [wp_web_page_sk#477, returns#491, profit_loss#492]
Arguments: [wp_web_page_sk#477 ASC NULLS FIRST], false, 0

(115) SortMergeJoin [codegen id : 42]
Left keys [1]: [wp_web_page_sk#388]
Right keys [1]: [wp_web_page_sk#477]
Join condition: None

(116) Project [codegen id : 42]
Output [5]: [sales#416, coalesce(returns#491, 0.00) AS returns#493, CheckOverflow((promote_precision(cast(profit#417 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#492, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#494, web channel AS channel#495, wp_web_page_sk#388 AS id#496]
Input [6]: [wp_web_page_sk#388, sales#416, profit#417, wp_web_page_sk#477, returns#491, profit_loss#492]

(117) Union

(118) Expand [codegen id : 43]
Input [5]: [sales#103, returns#176, profit#177, channel#178, id#179]
Arguments: [[sales#103, returns#176, profit#177, channel#178, id#179, 0], [sales#103, returns#176, profit#177, channel#178, null, 1], [sales#103, returns#176, profit#177, null, null, 3]], [sales#103, returns#176, profit#177, channel#497, id#498, spark_grouping_id#499]

(119) HashAggregate [codegen id : 43]
Input [6]: [sales#103, returns#176, profit#177, channel#497, id#498, spark_grouping_id#499]
Keys [3]: [channel#497, id#498, spark_grouping_id#499]
Functions [3]: [partial_sum(sales#103), partial_sum(returns#176), partial_sum(profit#177)]
Aggregate Attributes [6]: [sum#500, isEmpty#501, sum#502, isEmpty#503, sum#504, isEmpty#505]
Results [9]: [channel#497, id#498, spark_grouping_id#499, sum#506, isEmpty#507, sum#508, isEmpty#509, sum#510, isEmpty#511]

(120) Exchange
Input [9]: [channel#497, id#498, spark_grouping_id#499, sum#506, isEmpty#507, sum#508, isEmpty#509, sum#510, isEmpty#511]
Arguments: hashpartitioning(channel#497, id#498, spark_grouping_id#499, 5), ENSURE_REQUIREMENTS, [id=#512]

(121) HashAggregate [codegen id : 44]
Input [9]: [channel#497, id#498, spark_grouping_id#499, sum#506, isEmpty#507, sum#508, isEmpty#509, sum#510, isEmpty#511]
Keys [3]: [channel#497, id#498, spark_grouping_id#499]
Functions [3]: [sum(sales#103), sum(returns#176), sum(profit#177)]
Aggregate Attributes [3]: [sum(sales#103)#513, sum(returns#176)#514, sum(profit#177)#515]
Results [5]: [channel#497, id#498, sum(sales#103)#513 AS sales#516, sum(returns#176)#514 AS returns#517, sum(profit#177)#515 AS profit#518]

(122) TakeOrderedAndProject
Input [5]: [channel#497, id#498, sales#516, returns#517, profit#518]
Arguments: 100, [channel#497 ASC NULLS FIRST, id#498 ASC NULLS FIRST], [channel#497, id#498, sales#516, returns#517, profit#518]

