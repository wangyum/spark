== Physical Plan ==
TakeOrderedAndProject (37)
+- * HashAggregate (36)
   +- Exchange (35)
      +- * HashAggregate (34)
         +- * Project (33)
            +- * BroadcastHashJoin Inner BuildRight (32)
               :- * Project (26)
               :  +- HashAggregate (25)
               :     +- BroadcastHashJoin Inner BuildRight (24)
               :        :- BroadcastHashJoin Inner BuildRight (19)
               :        :  :- BroadcastHashJoin Inner BuildRight (17)
               :        :  :  :- BroadcastHashJoin Inner BuildRight (15)
               :        :  :  :  :- * BroadcastHashJoin Inner BuildRight (13)
               :        :  :  :  :  :- * BroadcastHashJoin Inner BuildRight (8)
               :        :  :  :  :  :  :- * Filter (3)
               :        :  :  :  :  :  :  +- * ColumnarToRow (2)
               :        :  :  :  :  :  :     +- Scan parquet default.store_sales (1)
               :        :  :  :  :  :  +- BroadcastExchange (7)
               :        :  :  :  :  :     +- * Filter (6)
               :        :  :  :  :  :        +- * ColumnarToRow (5)
               :        :  :  :  :  :           +- Scan parquet default.store_returns (4)
               :        :  :  :  :  +- BroadcastExchange (12)
               :        :  :  :  :     +- * Filter (11)
               :        :  :  :  :        +- * ColumnarToRow (10)
               :        :  :  :  :           +- Scan parquet default.catalog_sales (9)
               :        :  :  :  +- ReusedExchange (14)
               :        :  :  +- ReusedExchange (16)
               :        :  +- ReusedExchange (18)
               :        +- BroadcastExchange (23)
               :           +- * Filter (22)
               :              +- * ColumnarToRow (21)
               :                 +- Scan parquet default.store (20)
               +- BroadcastExchange (31)
                  +- * HashAggregate (30)
                     +- * Filter (29)
                        +- * ColumnarToRow (28)
                           +- Scan parquet default.item (27)


(1) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(3) Filter [codegen id : 3]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : (((isnotnull(ss_customer_sk#3) AND isnotnull(ss_item_sk#2)) AND isnotnull(ss_ticket_number#9)) AND isnotnull(ss_store_sk#7))

(4) Scan parquet default.store_returns
Output [20]: [sr_return_time_sk#25, sr_item_sk#26, sr_customer_sk#27, sr_cdemo_sk#28, sr_hdemo_sk#29, sr_addr_sk#30, sr_store_sk#31, sr_reason_sk#32, sr_ticket_number#33, sr_return_quantity#34, sr_return_amt#35, sr_return_tax#36, sr_return_amt_inc_tax#37, sr_fee#38, sr_return_ship_cost#39, sr_refunded_cash#40, sr_reversed_charge#41, sr_store_credit#42, sr_net_loss#43, sr_returned_date_sk#44]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#44), dynamicpruningexpression(sr_returned_date_sk#44 IN dynamicpruning#45)]
PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)]
ReadSchema: struct<sr_return_time_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_cdemo_sk:int,sr_hdemo_sk:int,sr_addr_sk:int,sr_store_sk:int,sr_reason_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2),sr_return_tax:decimal(7,2),sr_return_amt_inc_tax:decimal(7,2),sr_fee:decimal(7,2),sr_return_ship_cost:decimal(7,2),sr_refunded_cash:decimal(7,2),sr_reversed_charge:decimal(7,2),sr_store_credit:decimal(7,2),sr_net_loss:decimal(7,2)>

(5) ColumnarToRow [codegen id : 1]
Input [20]: [sr_return_time_sk#25, sr_item_sk#26, sr_customer_sk#27, sr_cdemo_sk#28, sr_hdemo_sk#29, sr_addr_sk#30, sr_store_sk#31, sr_reason_sk#32, sr_ticket_number#33, sr_return_quantity#34, sr_return_amt#35, sr_return_tax#36, sr_return_amt_inc_tax#37, sr_fee#38, sr_return_ship_cost#39, sr_refunded_cash#40, sr_reversed_charge#41, sr_store_credit#42, sr_net_loss#43, sr_returned_date_sk#44]

(6) Filter [codegen id : 1]
Input [20]: [sr_return_time_sk#25, sr_item_sk#26, sr_customer_sk#27, sr_cdemo_sk#28, sr_hdemo_sk#29, sr_addr_sk#30, sr_store_sk#31, sr_reason_sk#32, sr_ticket_number#33, sr_return_quantity#34, sr_return_amt#35, sr_return_tax#36, sr_return_amt_inc_tax#37, sr_fee#38, sr_return_ship_cost#39, sr_refunded_cash#40, sr_reversed_charge#41, sr_store_credit#42, sr_net_loss#43, sr_returned_date_sk#44]
Condition : ((isnotnull(sr_customer_sk#27) AND isnotnull(sr_item_sk#26)) AND isnotnull(sr_ticket_number#33))

(7) BroadcastExchange
Input [20]: [sr_return_time_sk#25, sr_item_sk#26, sr_customer_sk#27, sr_cdemo_sk#28, sr_hdemo_sk#29, sr_addr_sk#30, sr_store_sk#31, sr_reason_sk#32, sr_ticket_number#33, sr_return_quantity#34, sr_return_amt#35, sr_return_tax#36, sr_return_amt_inc_tax#37, sr_fee#38, sr_return_ship_cost#39, sr_refunded_cash#40, sr_reversed_charge#41, sr_store_credit#42, sr_net_loss#43, sr_returned_date_sk#44]
Arguments: HashedRelationBroadcastMode(List(input[2, int, false], input[1, int, false], input[8, int, false]),false), [id=#46]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [3]: [ss_customer_sk#3, ss_item_sk#2, ss_ticket_number#9]
Right keys [3]: [sr_customer_sk#27, sr_item_sk#26, sr_ticket_number#33]
Join condition: None

(9) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#47, cs_ship_date_sk#48, cs_bill_customer_sk#49, cs_bill_cdemo_sk#50, cs_bill_hdemo_sk#51, cs_bill_addr_sk#52, cs_ship_customer_sk#53, cs_ship_cdemo_sk#54, cs_ship_hdemo_sk#55, cs_ship_addr_sk#56, cs_call_center_sk#57, cs_catalog_page_sk#58, cs_ship_mode_sk#59, cs_warehouse_sk#60, cs_item_sk#61, cs_promo_sk#62, cs_order_number#63, cs_quantity#64, cs_wholesale_cost#65, cs_list_price#66, cs_sales_price#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_ext_tax#72, cs_coupon_amt#73, cs_ext_ship_cost#74, cs_net_paid#75, cs_net_paid_inc_tax#76, cs_net_paid_inc_ship#77, cs_net_paid_inc_ship_tax#78, cs_net_profit#79, cs_sold_date_sk#80]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#80), dynamicpruningexpression(cs_sold_date_sk#80 IN dynamicpruning#45)]
PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(10) ColumnarToRow [codegen id : 2]
Input [34]: [cs_sold_time_sk#47, cs_ship_date_sk#48, cs_bill_customer_sk#49, cs_bill_cdemo_sk#50, cs_bill_hdemo_sk#51, cs_bill_addr_sk#52, cs_ship_customer_sk#53, cs_ship_cdemo_sk#54, cs_ship_hdemo_sk#55, cs_ship_addr_sk#56, cs_call_center_sk#57, cs_catalog_page_sk#58, cs_ship_mode_sk#59, cs_warehouse_sk#60, cs_item_sk#61, cs_promo_sk#62, cs_order_number#63, cs_quantity#64, cs_wholesale_cost#65, cs_list_price#66, cs_sales_price#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_ext_tax#72, cs_coupon_amt#73, cs_ext_ship_cost#74, cs_net_paid#75, cs_net_paid_inc_tax#76, cs_net_paid_inc_ship#77, cs_net_paid_inc_ship_tax#78, cs_net_profit#79, cs_sold_date_sk#80]

(11) Filter [codegen id : 2]
Input [34]: [cs_sold_time_sk#47, cs_ship_date_sk#48, cs_bill_customer_sk#49, cs_bill_cdemo_sk#50, cs_bill_hdemo_sk#51, cs_bill_addr_sk#52, cs_ship_customer_sk#53, cs_ship_cdemo_sk#54, cs_ship_hdemo_sk#55, cs_ship_addr_sk#56, cs_call_center_sk#57, cs_catalog_page_sk#58, cs_ship_mode_sk#59, cs_warehouse_sk#60, cs_item_sk#61, cs_promo_sk#62, cs_order_number#63, cs_quantity#64, cs_wholesale_cost#65, cs_list_price#66, cs_sales_price#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_ext_tax#72, cs_coupon_amt#73, cs_ext_ship_cost#74, cs_net_paid#75, cs_net_paid_inc_tax#76, cs_net_paid_inc_ship#77, cs_net_paid_inc_ship_tax#78, cs_net_profit#79, cs_sold_date_sk#80]
Condition : (isnotnull(cs_bill_customer_sk#49) AND isnotnull(cs_item_sk#61))

(12) BroadcastExchange
Input [34]: [cs_sold_time_sk#47, cs_ship_date_sk#48, cs_bill_customer_sk#49, cs_bill_cdemo_sk#50, cs_bill_hdemo_sk#51, cs_bill_addr_sk#52, cs_ship_customer_sk#53, cs_ship_cdemo_sk#54, cs_ship_hdemo_sk#55, cs_ship_addr_sk#56, cs_call_center_sk#57, cs_catalog_page_sk#58, cs_ship_mode_sk#59, cs_warehouse_sk#60, cs_item_sk#61, cs_promo_sk#62, cs_order_number#63, cs_quantity#64, cs_wholesale_cost#65, cs_list_price#66, cs_sales_price#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_ext_tax#72, cs_coupon_amt#73, cs_ext_ship_cost#74, cs_net_paid#75, cs_net_paid_inc_tax#76, cs_net_paid_inc_ship#77, cs_net_paid_inc_ship_tax#78, cs_net_profit#79, cs_sold_date_sk#80]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[2, int, false] as bigint), 32) | (cast(input[14, int, false] as bigint) & 4294967295))),false), [id=#81]

(13) BroadcastHashJoin [codegen id : 3]
Left keys [2]: [sr_customer_sk#27, sr_item_sk#26]
Right keys [2]: [cs_bill_customer_sk#49, cs_item_sk#61]
Join condition: None

(14) ReusedExchange [Reuses operator id: 41]
Output [28]: [d_date_sk#82, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]

(15) BroadcastHashJoin
Left keys [1]: [ss_sold_date_sk#23]
Right keys [1]: [d_date_sk#82]
Join condition: None

(16) ReusedExchange [Reuses operator id: 45]
Output [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]

(17) BroadcastHashJoin
Left keys [1]: [sr_returned_date_sk#44]
Right keys [1]: [d_date_sk#110]
Join condition: None

(18) ReusedExchange [Reuses operator id: 45]
Output [28]: [d_date_sk#138, d_date_id#139, d_date#140, d_month_seq#141, d_week_seq#142, d_quarter_seq#143, d_year#144, d_dow#145, d_moy#146, d_dom#147, d_qoy#148, d_fy_year#149, d_fy_quarter_seq#150, d_fy_week_seq#151, d_day_name#152, d_quarter_name#153, d_holiday#154, d_weekend#155, d_following_holiday#156, d_first_dom#157, d_last_dom#158, d_same_day_ly#159, d_same_day_lq#160, d_current_day#161, d_current_week#162, d_current_month#163, d_current_quarter#164, d_current_year#165]

(19) BroadcastHashJoin
Left keys [1]: [cs_sold_date_sk#80]
Right keys [1]: [d_date_sk#138]
Join condition: None

(20) Scan parquet default.store
Output [29]: [s_store_sk#166, s_store_id#167, s_rec_start_date#168, s_rec_end_date#169, s_closed_date_sk#170, s_store_name#171, s_number_employees#172, s_floor_space#173, s_hours#174, s_manager#175, s_market_id#176, s_geography_class#177, s_market_desc#178, s_market_manager#179, s_division_id#180, s_division_name#181, s_company_id#182, s_company_name#183, s_street_number#184, s_street_name#185, s_street_type#186, s_suite_number#187, s_city#188, s_county#189, s_state#190, s_zip#191, s_country#192, s_gmt_offset#193, s_tax_percentage#194]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_id:string,s_rec_start_date:date,s_rec_end_date:date,s_closed_date_sk:int,s_store_name:string,s_number_employees:int,s_floor_space:int,s_hours:string,s_manager:string,s_market_id:int,s_geography_class:string,s_market_desc:string,s_market_manager:string,s_division_id:int,s_division_name:string,s_company_id:int,s_company_name:string,s_street_number:string,s_street_name:string,s_street_type:string,s_suite_number:string,s_city:string,s_county:string,s_state:string,s_zip:string,s_country:string,s_gmt_offset:decimal(5,2),s_tax_percentage:decimal(5,2)>

(21) ColumnarToRow [codegen id : 7]
Input [29]: [s_store_sk#166, s_store_id#167, s_rec_start_date#168, s_rec_end_date#169, s_closed_date_sk#170, s_store_name#171, s_number_employees#172, s_floor_space#173, s_hours#174, s_manager#175, s_market_id#176, s_geography_class#177, s_market_desc#178, s_market_manager#179, s_division_id#180, s_division_name#181, s_company_id#182, s_company_name#183, s_street_number#184, s_street_name#185, s_street_type#186, s_suite_number#187, s_city#188, s_county#189, s_state#190, s_zip#191, s_country#192, s_gmt_offset#193, s_tax_percentage#194]

(22) Filter [codegen id : 7]
Input [29]: [s_store_sk#166, s_store_id#167, s_rec_start_date#168, s_rec_end_date#169, s_closed_date_sk#170, s_store_name#171, s_number_employees#172, s_floor_space#173, s_hours#174, s_manager#175, s_market_id#176, s_geography_class#177, s_market_desc#178, s_market_manager#179, s_division_id#180, s_division_name#181, s_company_id#182, s_company_name#183, s_street_number#184, s_street_name#185, s_street_type#186, s_suite_number#187, s_city#188, s_county#189, s_state#190, s_zip#191, s_country#192, s_gmt_offset#193, s_tax_percentage#194]
Condition : isnotnull(s_store_sk#166)

(23) BroadcastExchange
Input [29]: [s_store_sk#166, s_store_id#167, s_rec_start_date#168, s_rec_end_date#169, s_closed_date_sk#170, s_store_name#171, s_number_employees#172, s_floor_space#173, s_hours#174, s_manager#175, s_market_id#176, s_geography_class#177, s_market_desc#178, s_market_manager#179, s_division_id#180, s_division_name#181, s_company_id#182, s_company_name#183, s_street_number#184, s_street_name#185, s_street_type#186, s_suite_number#187, s_city#188, s_county#189, s_state#190, s_zip#191, s_country#192, s_gmt_offset#193, s_tax_percentage#194]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#195]

(24) BroadcastHashJoin
Left keys [1]: [ss_store_sk#7]
Right keys [1]: [s_store_sk#166]
Join condition: None

(25) HashAggregate
Input [190]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, sr_return_time_sk#25, sr_item_sk#26, sr_customer_sk#27, sr_cdemo_sk#28, sr_hdemo_sk#29, sr_addr_sk#30, sr_store_sk#31, sr_reason_sk#32, sr_ticket_number#33, sr_return_quantity#34, sr_return_amt#35, sr_return_tax#36, sr_return_amt_inc_tax#37, sr_fee#38, sr_return_ship_cost#39, sr_refunded_cash#40, sr_reversed_charge#41, sr_store_credit#42, sr_net_loss#43, sr_returned_date_sk#44, cs_sold_time_sk#47, cs_ship_date_sk#48, cs_bill_customer_sk#49, cs_bill_cdemo_sk#50, cs_bill_hdemo_sk#51, cs_bill_addr_sk#52, cs_ship_customer_sk#53, cs_ship_cdemo_sk#54, cs_ship_hdemo_sk#55, cs_ship_addr_sk#56, cs_call_center_sk#57, cs_catalog_page_sk#58, cs_ship_mode_sk#59, cs_warehouse_sk#60, cs_item_sk#61, cs_promo_sk#62, cs_order_number#63, cs_quantity#64, cs_wholesale_cost#65, cs_list_price#66, cs_sales_price#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_ext_tax#72, cs_coupon_amt#73, cs_ext_ship_cost#74, cs_net_paid#75, cs_net_paid_inc_tax#76, cs_net_paid_inc_ship#77, cs_net_paid_inc_ship_tax#78, cs_net_profit#79, cs_sold_date_sk#80, d_date_sk#82, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109, d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137, d_date_sk#138, d_date_id#139, d_date#140, d_month_seq#141, d_week_seq#142, d_quarter_seq#143, d_year#144, d_dow#145, d_moy#146, d_dom#147, d_qoy#148, d_fy_year#149, d_fy_quarter_seq#150, d_fy_week_seq#151, d_day_name#152, d_quarter_name#153, d_holiday#154, d_weekend#155, d_following_holiday#156, d_first_dom#157, d_last_dom#158, d_same_day_ly#159, d_same_day_lq#160, d_current_day#161, d_current_week#162, d_current_month#163, d_current_quarter#164, d_current_year#165, s_store_sk#166, s_store_id#167, s_rec_start_date#168, s_rec_end_date#169, s_closed_date_sk#170, s_store_name#171, s_number_employees#172, s_floor_space#173, s_hours#174, s_manager#175, s_market_id#176, s_geography_class#177, s_market_desc#178, s_market_manager#179, s_division_id#180, s_division_name#181, s_company_id#182, s_company_name#183, s_street_number#184, s_street_name#185, s_street_type#186, s_suite_number#187, s_city#188, s_county#189, s_state#190, s_zip#191, s_country#192, s_gmt_offset#193, s_tax_percentage#194]
Keys [3]: [ss_item_sk#2, s_store_id#167, s_store_name#171]
Functions [3]: [partial_sum(UnscaledValue(ss_net_profit#22)), partial_sum(UnscaledValue(sr_net_loss#43)), partial_sum(UnscaledValue(cs_net_profit#79))]
Aggregate Attributes [3]: [sum#196, sum#197, sum#198]
Results [6]: [ss_item_sk#2, s_store_id#167, s_store_name#171, sum#199, sum#200, sum#201]

(26) Project [codegen id : 9]
Output [6]: [ss_item_sk#2, s_store_id#167, s_store_name#171, sum#199 AS _pushedexpression#202, sum#200 AS _pushedexpression#203, sum#201 AS _pushedexpression#204]
Input [6]: [ss_item_sk#2, s_store_id#167, s_store_name#171, sum#199, sum#200, sum#201]

(27) Scan parquet default.item
Output [22]: [i_item_sk#205, i_item_id#206, i_rec_start_date#207, i_rec_end_date#208, i_item_desc#209, i_current_price#210, i_wholesale_cost#211, i_brand_id#212, i_brand#213, i_class_id#214, i_class#215, i_category_id#216, i_category#217, i_manufact_id#218, i_manufact#219, i_size#220, i_formulation#221, i_color#222, i_units#223, i_container#224, i_manager_id#225, i_product_name#226]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(28) ColumnarToRow [codegen id : 8]
Input [22]: [i_item_sk#205, i_item_id#206, i_rec_start_date#207, i_rec_end_date#208, i_item_desc#209, i_current_price#210, i_wholesale_cost#211, i_brand_id#212, i_brand#213, i_class_id#214, i_class#215, i_category_id#216, i_category#217, i_manufact_id#218, i_manufact#219, i_size#220, i_formulation#221, i_color#222, i_units#223, i_container#224, i_manager_id#225, i_product_name#226]

(29) Filter [codegen id : 8]
Input [22]: [i_item_sk#205, i_item_id#206, i_rec_start_date#207, i_rec_end_date#208, i_item_desc#209, i_current_price#210, i_wholesale_cost#211, i_brand_id#212, i_brand#213, i_class_id#214, i_class#215, i_category_id#216, i_category#217, i_manufact_id#218, i_manufact#219, i_size#220, i_formulation#221, i_color#222, i_units#223, i_container#224, i_manager_id#225, i_product_name#226]
Condition : isnotnull(i_item_sk#205)

(30) HashAggregate [codegen id : 8]
Input [22]: [i_item_sk#205, i_item_id#206, i_rec_start_date#207, i_rec_end_date#208, i_item_desc#209, i_current_price#210, i_wholesale_cost#211, i_brand_id#212, i_brand#213, i_class_id#214, i_class#215, i_category_id#216, i_category#217, i_manufact_id#218, i_manufact#219, i_size#220, i_formulation#221, i_color#222, i_units#223, i_container#224, i_manager_id#225, i_product_name#226]
Keys [3]: [i_item_sk#205, i_item_id#206, i_item_desc#209]
Functions: []
Aggregate Attributes: []
Results [3]: [i_item_sk#205, i_item_id#206, i_item_desc#209]

(31) BroadcastExchange
Input [3]: [i_item_sk#205, i_item_id#206, i_item_desc#209]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#227]

(32) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [ss_item_sk#2]
Right keys [1]: [i_item_sk#205]
Join condition: None

(33) Project [codegen id : 9]
Output [7]: [s_store_id#167, s_store_name#171, _pushedexpression#228, _pushedexpression#229, _pushedexpression#230, i_item_id#206, i_item_desc#209]
Input [9]: [ss_item_sk#2, s_store_id#167, s_store_name#171, _pushedexpression#202, _pushedexpression#203, _pushedexpression#204, i_item_sk#205, i_item_id#206, i_item_desc#209]

(34) HashAggregate [codegen id : 9]
Input [7]: [s_store_id#167, s_store_name#171, _pushedexpression#228, _pushedexpression#229, _pushedexpression#230, i_item_id#206, i_item_desc#209]
Keys [4]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171]
Functions [3]: [partial_sum(_pushedexpression#228), partial_sum(_pushedexpression#229), partial_sum(_pushedexpression#230)]
Aggregate Attributes [6]: [sum#231, isEmpty#232, sum#233, isEmpty#234, sum#235, isEmpty#236]
Results [10]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, sum#237, isEmpty#238, sum#239, isEmpty#240, sum#241, isEmpty#242]

(35) Exchange
Input [10]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, sum#237, isEmpty#238, sum#239, isEmpty#240, sum#241, isEmpty#242]
Arguments: hashpartitioning(i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, 5), ENSURE_REQUIREMENTS, [id=#243]

(36) HashAggregate [codegen id : 10]
Input [10]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, sum#237, isEmpty#238, sum#239, isEmpty#240, sum#241, isEmpty#242]
Keys [4]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171]
Functions [3]: [sum(_pushedexpression#228), sum(_pushedexpression#229), sum(_pushedexpression#230)]
Aggregate Attributes [3]: [sum(_pushedexpression#228)#244, sum(_pushedexpression#229)#245, sum(_pushedexpression#230)#246]
Results [7]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, cast(sum(_pushedexpression#228)#244 as decimal(17,2)) AS store_sales_profit#247, cast(sum(_pushedexpression#229)#245 as decimal(17,2)) AS store_returns_loss#248, cast(sum(_pushedexpression#230)#246 as decimal(17,2)) AS catalog_sales_profit#249]

(37) TakeOrderedAndProject
Input [7]: [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, store_sales_profit#247, store_returns_loss#248, catalog_sales_profit#249]
Arguments: 100, [i_item_id#206 ASC NULLS FIRST, i_item_desc#209 ASC NULLS FIRST, s_store_id#167 ASC NULLS FIRST, s_store_name#171 ASC NULLS FIRST], [i_item_id#206, i_item_desc#209, s_store_id#167, s_store_name#171, store_sales_profit#247, store_returns_loss#248, catalog_sales_profit#249]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#23 IN dynamicpruning#24
BroadcastExchange (41)
+- * Filter (40)
   +- * ColumnarToRow (39)
      +- Scan parquet default.date_dim (38)


(38) Scan parquet default.date_dim
Output [28]: [d_date_sk#82, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,4), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(39) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#82, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]

(40) Filter [codegen id : 1]
Input [28]: [d_date_sk#82, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]
Condition : ((((isnotnull(d_moy#90) AND isnotnull(d_year#88)) AND (d_moy#90 = 4)) AND (d_year#88 = 2001)) AND isnotnull(d_date_sk#82))

(41) BroadcastExchange
Input [28]: [d_date_sk#82, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#250]

Subquery:2 Hosting operator id = 4 Hosting Expression = sr_returned_date_sk#44 IN dynamicpruning#45
BroadcastExchange (45)
+- * Filter (44)
   +- * ColumnarToRow (43)
      +- Scan parquet default.date_dim (42)


(42) Scan parquet default.date_dim
Output [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,10), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(43) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]

(44) Filter [codegen id : 1]
Input [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Condition : (((((isnotnull(d_moy#118) AND isnotnull(d_year#116)) AND (d_moy#118 >= 4)) AND (d_moy#118 <= 10)) AND (d_year#116 = 2001)) AND isnotnull(d_date_sk#110))

(45) BroadcastExchange
Input [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#251]

Subquery:3 Hosting operator id = 9 Hosting Expression = cs_sold_date_sk#80 IN dynamicpruning#45


