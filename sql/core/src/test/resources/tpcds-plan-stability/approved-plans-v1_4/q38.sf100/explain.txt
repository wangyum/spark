== Physical Plan ==
* HashAggregate (61)
+- Exchange (60)
   +- * HashAggregate (59)
      +- * Project (58)
         +- * SortMergeJoin LeftSemi (57)
            :- * SortMergeJoin LeftSemi (39)
            :  :- * Sort (21)
            :  :  +- Exchange (20)
            :  :     +- * HashAggregate (19)
            :  :        +- Exchange (18)
            :  :           +- * HashAggregate (17)
            :  :              +- * Project (16)
            :  :                 +- * SortMergeJoin Inner (15)
            :  :                    :- * Sort (8)
            :  :                    :  +- Exchange (7)
            :  :                    :     +- * HashAggregate (6)
            :  :                    :        +- * BroadcastHashJoin Inner BuildRight (5)
            :  :                    :           :- * Filter (3)
            :  :                    :           :  +- * ColumnarToRow (2)
            :  :                    :           :     +- Scan parquet default.store_sales (1)
            :  :                    :           +- ReusedExchange (4)
            :  :                    +- * Sort (14)
            :  :                       +- Exchange (13)
            :  :                          +- * HashAggregate (12)
            :  :                             +- * Filter (11)
            :  :                                +- * ColumnarToRow (10)
            :  :                                   +- Scan parquet default.customer (9)
            :  +- * Sort (38)
            :     +- Exchange (37)
            :        +- * HashAggregate (36)
            :           +- Exchange (35)
            :              +- * HashAggregate (34)
            :                 +- * Project (33)
            :                    +- * SortMergeJoin Inner (32)
            :                       :- * Sort (29)
            :                       :  +- Exchange (28)
            :                       :     +- * HashAggregate (27)
            :                       :        +- * BroadcastHashJoin Inner BuildRight (26)
            :                       :           :- * Filter (24)
            :                       :           :  +- * ColumnarToRow (23)
            :                       :           :     +- Scan parquet default.catalog_sales (22)
            :                       :           +- ReusedExchange (25)
            :                       +- * Sort (31)
            :                          +- ReusedExchange (30)
            +- * Sort (56)
               +- Exchange (55)
                  +- * HashAggregate (54)
                     +- Exchange (53)
                        +- * HashAggregate (52)
                           +- * Project (51)
                              +- * SortMergeJoin Inner (50)
                                 :- * Sort (47)
                                 :  +- Exchange (46)
                                 :     +- * HashAggregate (45)
                                 :        +- * BroadcastHashJoin Inner BuildRight (44)
                                 :           :- * Filter (42)
                                 :           :  +- * ColumnarToRow (41)
                                 :           :     +- Scan parquet default.web_sales (40)
                                 :           +- ReusedExchange (43)
                                 +- * Sort (49)
                                    +- ReusedExchange (48)


(1) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(3) Filter [codegen id : 2]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : isnotnull(ss_customer_sk#3)

(4) ReusedExchange [Reuses operator id: 65]
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(5) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_sold_date_sk#23]
Right keys [1]: [d_date_sk#25]
Join condition: None

(6) HashAggregate [codegen id : 2]
Input [51]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Keys [2]: [ss_customer_sk#3, d_date#27]
Functions: []
Aggregate Attributes: []
Results [2]: [ss_customer_sk#3, d_date#27]

(7) Exchange
Input [2]: [ss_customer_sk#3, d_date#27]
Arguments: hashpartitioning(ss_customer_sk#3, 5), ENSURE_REQUIREMENTS, [id=#53]

(8) Sort [codegen id : 3]
Input [2]: [ss_customer_sk#3, d_date#27]
Arguments: [ss_customer_sk#3 ASC NULLS FIRST], false, 0

(9) Scan parquet default.customer
Output [18]: [c_customer_sk#54, c_customer_id#55, c_current_cdemo_sk#56, c_current_hdemo_sk#57, c_current_addr_sk#58, c_first_shipto_date_sk#59, c_first_sales_date_sk#60, c_salutation#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_day#65, c_birth_month#66, c_birth_year#67, c_birth_country#68, c_login#69, c_email_address#70, c_last_review_date#71]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(10) ColumnarToRow [codegen id : 4]
Input [18]: [c_customer_sk#54, c_customer_id#55, c_current_cdemo_sk#56, c_current_hdemo_sk#57, c_current_addr_sk#58, c_first_shipto_date_sk#59, c_first_sales_date_sk#60, c_salutation#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_day#65, c_birth_month#66, c_birth_year#67, c_birth_country#68, c_login#69, c_email_address#70, c_last_review_date#71]

(11) Filter [codegen id : 4]
Input [18]: [c_customer_sk#54, c_customer_id#55, c_current_cdemo_sk#56, c_current_hdemo_sk#57, c_current_addr_sk#58, c_first_shipto_date_sk#59, c_first_sales_date_sk#60, c_salutation#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_day#65, c_birth_month#66, c_birth_year#67, c_birth_country#68, c_login#69, c_email_address#70, c_last_review_date#71]
Condition : isnotnull(c_customer_sk#54)

(12) HashAggregate [codegen id : 4]
Input [18]: [c_customer_sk#54, c_customer_id#55, c_current_cdemo_sk#56, c_current_hdemo_sk#57, c_current_addr_sk#58, c_first_shipto_date_sk#59, c_first_sales_date_sk#60, c_salutation#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_day#65, c_birth_month#66, c_birth_year#67, c_birth_country#68, c_login#69, c_email_address#70, c_last_review_date#71]
Keys [3]: [c_customer_sk#54, c_last_name#63, c_first_name#62]
Functions: []
Aggregate Attributes: []
Results [3]: [c_customer_sk#54, c_last_name#63, c_first_name#62]

(13) Exchange
Input [3]: [c_customer_sk#54, c_last_name#63, c_first_name#62]
Arguments: hashpartitioning(c_customer_sk#54, 5), ENSURE_REQUIREMENTS, [id=#72]

(14) Sort [codegen id : 5]
Input [3]: [c_customer_sk#54, c_last_name#63, c_first_name#62]
Arguments: [c_customer_sk#54 ASC NULLS FIRST], false, 0

(15) SortMergeJoin [codegen id : 6]
Left keys [1]: [ss_customer_sk#3]
Right keys [1]: [c_customer_sk#54]
Join condition: None

(16) Project [codegen id : 6]
Output [3]: [d_date#27, c_last_name#63, c_first_name#62]
Input [5]: [ss_customer_sk#3, d_date#27, c_customer_sk#54, c_last_name#63, c_first_name#62]

(17) HashAggregate [codegen id : 6]
Input [3]: [d_date#27, c_last_name#63, c_first_name#62]
Keys [3]: [c_last_name#63, c_first_name#62, d_date#27]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#63, c_first_name#62, d_date#27]

(18) Exchange
Input [3]: [c_last_name#63, c_first_name#62, d_date#27]
Arguments: hashpartitioning(c_last_name#63, c_first_name#62, d_date#27, 5), ENSURE_REQUIREMENTS, [id=#73]

(19) HashAggregate [codegen id : 7]
Input [3]: [c_last_name#63, c_first_name#62, d_date#27]
Keys [3]: [c_last_name#63, c_first_name#62, d_date#27]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#63, c_first_name#62, d_date#27]

(20) Exchange
Input [3]: [c_last_name#63, c_first_name#62, d_date#27]
Arguments: hashpartitioning(coalesce(c_last_name#63, ), isnull(c_last_name#63), coalesce(c_first_name#62, ), isnull(c_first_name#62), coalesce(d_date#27, 1970-01-01), isnull(d_date#27), 5), ENSURE_REQUIREMENTS, [id=#74]

(21) Sort [codegen id : 8]
Input [3]: [c_last_name#63, c_first_name#62, d_date#27]
Arguments: [coalesce(c_last_name#63, ) ASC NULLS FIRST, isnull(c_last_name#63) ASC NULLS FIRST, coalesce(c_first_name#62, ) ASC NULLS FIRST, isnull(c_first_name#62) ASC NULLS FIRST, coalesce(d_date#27, 1970-01-01) ASC NULLS FIRST, isnull(d_date#27) ASC NULLS FIRST], false, 0

(22) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#75, cs_ship_date_sk#76, cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_bill_hdemo_sk#79, cs_bill_addr_sk#80, cs_ship_customer_sk#81, cs_ship_cdemo_sk#82, cs_ship_hdemo_sk#83, cs_ship_addr_sk#84, cs_call_center_sk#85, cs_catalog_page_sk#86, cs_ship_mode_sk#87, cs_warehouse_sk#88, cs_item_sk#89, cs_promo_sk#90, cs_order_number#91, cs_quantity#92, cs_wholesale_cost#93, cs_list_price#94, cs_sales_price#95, cs_ext_discount_amt#96, cs_ext_sales_price#97, cs_ext_wholesale_cost#98, cs_ext_list_price#99, cs_ext_tax#100, cs_coupon_amt#101, cs_ext_ship_cost#102, cs_net_paid#103, cs_net_paid_inc_tax#104, cs_net_paid_inc_ship#105, cs_net_paid_inc_ship_tax#106, cs_net_profit#107, cs_sold_date_sk#108]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#108), dynamicpruningexpression(cs_sold_date_sk#108 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(23) ColumnarToRow [codegen id : 10]
Input [34]: [cs_sold_time_sk#75, cs_ship_date_sk#76, cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_bill_hdemo_sk#79, cs_bill_addr_sk#80, cs_ship_customer_sk#81, cs_ship_cdemo_sk#82, cs_ship_hdemo_sk#83, cs_ship_addr_sk#84, cs_call_center_sk#85, cs_catalog_page_sk#86, cs_ship_mode_sk#87, cs_warehouse_sk#88, cs_item_sk#89, cs_promo_sk#90, cs_order_number#91, cs_quantity#92, cs_wholesale_cost#93, cs_list_price#94, cs_sales_price#95, cs_ext_discount_amt#96, cs_ext_sales_price#97, cs_ext_wholesale_cost#98, cs_ext_list_price#99, cs_ext_tax#100, cs_coupon_amt#101, cs_ext_ship_cost#102, cs_net_paid#103, cs_net_paid_inc_tax#104, cs_net_paid_inc_ship#105, cs_net_paid_inc_ship_tax#106, cs_net_profit#107, cs_sold_date_sk#108]

(24) Filter [codegen id : 10]
Input [34]: [cs_sold_time_sk#75, cs_ship_date_sk#76, cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_bill_hdemo_sk#79, cs_bill_addr_sk#80, cs_ship_customer_sk#81, cs_ship_cdemo_sk#82, cs_ship_hdemo_sk#83, cs_ship_addr_sk#84, cs_call_center_sk#85, cs_catalog_page_sk#86, cs_ship_mode_sk#87, cs_warehouse_sk#88, cs_item_sk#89, cs_promo_sk#90, cs_order_number#91, cs_quantity#92, cs_wholesale_cost#93, cs_list_price#94, cs_sales_price#95, cs_ext_discount_amt#96, cs_ext_sales_price#97, cs_ext_wholesale_cost#98, cs_ext_list_price#99, cs_ext_tax#100, cs_coupon_amt#101, cs_ext_ship_cost#102, cs_net_paid#103, cs_net_paid_inc_tax#104, cs_net_paid_inc_ship#105, cs_net_paid_inc_ship_tax#106, cs_net_profit#107, cs_sold_date_sk#108]
Condition : isnotnull(cs_bill_customer_sk#77)

(25) ReusedExchange [Reuses operator id: 65]
Output [28]: [d_date_sk#109, d_date_id#110, d_date#111, d_month_seq#112, d_week_seq#113, d_quarter_seq#114, d_year#115, d_dow#116, d_moy#117, d_dom#118, d_qoy#119, d_fy_year#120, d_fy_quarter_seq#121, d_fy_week_seq#122, d_day_name#123, d_quarter_name#124, d_holiday#125, d_weekend#126, d_following_holiday#127, d_first_dom#128, d_last_dom#129, d_same_day_ly#130, d_same_day_lq#131, d_current_day#132, d_current_week#133, d_current_month#134, d_current_quarter#135, d_current_year#136]

(26) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_sold_date_sk#108]
Right keys [1]: [d_date_sk#109]
Join condition: None

(27) HashAggregate [codegen id : 10]
Input [62]: [cs_sold_time_sk#75, cs_ship_date_sk#76, cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_bill_hdemo_sk#79, cs_bill_addr_sk#80, cs_ship_customer_sk#81, cs_ship_cdemo_sk#82, cs_ship_hdemo_sk#83, cs_ship_addr_sk#84, cs_call_center_sk#85, cs_catalog_page_sk#86, cs_ship_mode_sk#87, cs_warehouse_sk#88, cs_item_sk#89, cs_promo_sk#90, cs_order_number#91, cs_quantity#92, cs_wholesale_cost#93, cs_list_price#94, cs_sales_price#95, cs_ext_discount_amt#96, cs_ext_sales_price#97, cs_ext_wholesale_cost#98, cs_ext_list_price#99, cs_ext_tax#100, cs_coupon_amt#101, cs_ext_ship_cost#102, cs_net_paid#103, cs_net_paid_inc_tax#104, cs_net_paid_inc_ship#105, cs_net_paid_inc_ship_tax#106, cs_net_profit#107, cs_sold_date_sk#108, d_date_sk#109, d_date_id#110, d_date#111, d_month_seq#112, d_week_seq#113, d_quarter_seq#114, d_year#115, d_dow#116, d_moy#117, d_dom#118, d_qoy#119, d_fy_year#120, d_fy_quarter_seq#121, d_fy_week_seq#122, d_day_name#123, d_quarter_name#124, d_holiday#125, d_weekend#126, d_following_holiday#127, d_first_dom#128, d_last_dom#129, d_same_day_ly#130, d_same_day_lq#131, d_current_day#132, d_current_week#133, d_current_month#134, d_current_quarter#135, d_current_year#136]
Keys [2]: [cs_bill_customer_sk#77, d_date#111]
Functions: []
Aggregate Attributes: []
Results [2]: [cs_bill_customer_sk#77, d_date#111]

(28) Exchange
Input [2]: [cs_bill_customer_sk#77, d_date#111]
Arguments: hashpartitioning(cs_bill_customer_sk#77, 5), ENSURE_REQUIREMENTS, [id=#137]

(29) Sort [codegen id : 11]
Input [2]: [cs_bill_customer_sk#77, d_date#111]
Arguments: [cs_bill_customer_sk#77 ASC NULLS FIRST], false, 0

(30) ReusedExchange [Reuses operator id: 13]
Output [3]: [c_customer_sk#138, c_last_name#139, c_first_name#140]

(31) Sort [codegen id : 13]
Input [3]: [c_customer_sk#138, c_last_name#139, c_first_name#140]
Arguments: [c_customer_sk#138 ASC NULLS FIRST], false, 0

(32) SortMergeJoin [codegen id : 14]
Left keys [1]: [cs_bill_customer_sk#77]
Right keys [1]: [c_customer_sk#138]
Join condition: None

(33) Project [codegen id : 14]
Output [3]: [d_date#111, c_last_name#139, c_first_name#140]
Input [5]: [cs_bill_customer_sk#77, d_date#111, c_customer_sk#138, c_last_name#139, c_first_name#140]

(34) HashAggregate [codegen id : 14]
Input [3]: [d_date#111, c_last_name#139, c_first_name#140]
Keys [3]: [c_last_name#139, c_first_name#140, d_date#111]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#139, c_first_name#140, d_date#111]

(35) Exchange
Input [3]: [c_last_name#139, c_first_name#140, d_date#111]
Arguments: hashpartitioning(c_last_name#139, c_first_name#140, d_date#111, 5), ENSURE_REQUIREMENTS, [id=#141]

(36) HashAggregate [codegen id : 15]
Input [3]: [c_last_name#139, c_first_name#140, d_date#111]
Keys [3]: [c_last_name#139, c_first_name#140, d_date#111]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#139, c_first_name#140, d_date#111]

(37) Exchange
Input [3]: [c_last_name#139, c_first_name#140, d_date#111]
Arguments: hashpartitioning(coalesce(c_last_name#139, ), isnull(c_last_name#139), coalesce(c_first_name#140, ), isnull(c_first_name#140), coalesce(d_date#111, 1970-01-01), isnull(d_date#111), 5), ENSURE_REQUIREMENTS, [id=#142]

(38) Sort [codegen id : 16]
Input [3]: [c_last_name#139, c_first_name#140, d_date#111]
Arguments: [coalesce(c_last_name#139, ) ASC NULLS FIRST, isnull(c_last_name#139) ASC NULLS FIRST, coalesce(c_first_name#140, ) ASC NULLS FIRST, isnull(c_first_name#140) ASC NULLS FIRST, coalesce(d_date#111, 1970-01-01) ASC NULLS FIRST, isnull(d_date#111) ASC NULLS FIRST], false, 0

(39) SortMergeJoin [codegen id : 17]
Left keys [6]: [coalesce(c_last_name#63, ), isnull(c_last_name#63), coalesce(c_first_name#62, ), isnull(c_first_name#62), coalesce(d_date#27, 1970-01-01), isnull(d_date#27)]
Right keys [6]: [coalesce(c_last_name#139, ), isnull(c_last_name#139), coalesce(c_first_name#140, ), isnull(c_first_name#140), coalesce(d_date#111, 1970-01-01), isnull(d_date#111)]
Join condition: None

(40) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#143, ws_ship_date_sk#144, ws_item_sk#145, ws_bill_customer_sk#146, ws_bill_cdemo_sk#147, ws_bill_hdemo_sk#148, ws_bill_addr_sk#149, ws_ship_customer_sk#150, ws_ship_cdemo_sk#151, ws_ship_hdemo_sk#152, ws_ship_addr_sk#153, ws_web_page_sk#154, ws_web_site_sk#155, ws_ship_mode_sk#156, ws_warehouse_sk#157, ws_promo_sk#158, ws_order_number#159, ws_quantity#160, ws_wholesale_cost#161, ws_list_price#162, ws_sales_price#163, ws_ext_discount_amt#164, ws_ext_sales_price#165, ws_ext_wholesale_cost#166, ws_ext_list_price#167, ws_ext_tax#168, ws_coupon_amt#169, ws_ext_ship_cost#170, ws_net_paid#171, ws_net_paid_inc_tax#172, ws_net_paid_inc_ship#173, ws_net_paid_inc_ship_tax#174, ws_net_profit#175, ws_sold_date_sk#176]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#176), dynamicpruningexpression(ws_sold_date_sk#176 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(41) ColumnarToRow [codegen id : 19]
Input [34]: [ws_sold_time_sk#143, ws_ship_date_sk#144, ws_item_sk#145, ws_bill_customer_sk#146, ws_bill_cdemo_sk#147, ws_bill_hdemo_sk#148, ws_bill_addr_sk#149, ws_ship_customer_sk#150, ws_ship_cdemo_sk#151, ws_ship_hdemo_sk#152, ws_ship_addr_sk#153, ws_web_page_sk#154, ws_web_site_sk#155, ws_ship_mode_sk#156, ws_warehouse_sk#157, ws_promo_sk#158, ws_order_number#159, ws_quantity#160, ws_wholesale_cost#161, ws_list_price#162, ws_sales_price#163, ws_ext_discount_amt#164, ws_ext_sales_price#165, ws_ext_wholesale_cost#166, ws_ext_list_price#167, ws_ext_tax#168, ws_coupon_amt#169, ws_ext_ship_cost#170, ws_net_paid#171, ws_net_paid_inc_tax#172, ws_net_paid_inc_ship#173, ws_net_paid_inc_ship_tax#174, ws_net_profit#175, ws_sold_date_sk#176]

(42) Filter [codegen id : 19]
Input [34]: [ws_sold_time_sk#143, ws_ship_date_sk#144, ws_item_sk#145, ws_bill_customer_sk#146, ws_bill_cdemo_sk#147, ws_bill_hdemo_sk#148, ws_bill_addr_sk#149, ws_ship_customer_sk#150, ws_ship_cdemo_sk#151, ws_ship_hdemo_sk#152, ws_ship_addr_sk#153, ws_web_page_sk#154, ws_web_site_sk#155, ws_ship_mode_sk#156, ws_warehouse_sk#157, ws_promo_sk#158, ws_order_number#159, ws_quantity#160, ws_wholesale_cost#161, ws_list_price#162, ws_sales_price#163, ws_ext_discount_amt#164, ws_ext_sales_price#165, ws_ext_wholesale_cost#166, ws_ext_list_price#167, ws_ext_tax#168, ws_coupon_amt#169, ws_ext_ship_cost#170, ws_net_paid#171, ws_net_paid_inc_tax#172, ws_net_paid_inc_ship#173, ws_net_paid_inc_ship_tax#174, ws_net_profit#175, ws_sold_date_sk#176]
Condition : isnotnull(ws_bill_customer_sk#146)

(43) ReusedExchange [Reuses operator id: 65]
Output [28]: [d_date_sk#177, d_date_id#178, d_date#179, d_month_seq#180, d_week_seq#181, d_quarter_seq#182, d_year#183, d_dow#184, d_moy#185, d_dom#186, d_qoy#187, d_fy_year#188, d_fy_quarter_seq#189, d_fy_week_seq#190, d_day_name#191, d_quarter_name#192, d_holiday#193, d_weekend#194, d_following_holiday#195, d_first_dom#196, d_last_dom#197, d_same_day_ly#198, d_same_day_lq#199, d_current_day#200, d_current_week#201, d_current_month#202, d_current_quarter#203, d_current_year#204]

(44) BroadcastHashJoin [codegen id : 19]
Left keys [1]: [ws_sold_date_sk#176]
Right keys [1]: [d_date_sk#177]
Join condition: None

(45) HashAggregate [codegen id : 19]
Input [62]: [ws_sold_time_sk#143, ws_ship_date_sk#144, ws_item_sk#145, ws_bill_customer_sk#146, ws_bill_cdemo_sk#147, ws_bill_hdemo_sk#148, ws_bill_addr_sk#149, ws_ship_customer_sk#150, ws_ship_cdemo_sk#151, ws_ship_hdemo_sk#152, ws_ship_addr_sk#153, ws_web_page_sk#154, ws_web_site_sk#155, ws_ship_mode_sk#156, ws_warehouse_sk#157, ws_promo_sk#158, ws_order_number#159, ws_quantity#160, ws_wholesale_cost#161, ws_list_price#162, ws_sales_price#163, ws_ext_discount_amt#164, ws_ext_sales_price#165, ws_ext_wholesale_cost#166, ws_ext_list_price#167, ws_ext_tax#168, ws_coupon_amt#169, ws_ext_ship_cost#170, ws_net_paid#171, ws_net_paid_inc_tax#172, ws_net_paid_inc_ship#173, ws_net_paid_inc_ship_tax#174, ws_net_profit#175, ws_sold_date_sk#176, d_date_sk#177, d_date_id#178, d_date#179, d_month_seq#180, d_week_seq#181, d_quarter_seq#182, d_year#183, d_dow#184, d_moy#185, d_dom#186, d_qoy#187, d_fy_year#188, d_fy_quarter_seq#189, d_fy_week_seq#190, d_day_name#191, d_quarter_name#192, d_holiday#193, d_weekend#194, d_following_holiday#195, d_first_dom#196, d_last_dom#197, d_same_day_ly#198, d_same_day_lq#199, d_current_day#200, d_current_week#201, d_current_month#202, d_current_quarter#203, d_current_year#204]
Keys [2]: [ws_bill_customer_sk#146, d_date#179]
Functions: []
Aggregate Attributes: []
Results [2]: [ws_bill_customer_sk#146, d_date#179]

(46) Exchange
Input [2]: [ws_bill_customer_sk#146, d_date#179]
Arguments: hashpartitioning(ws_bill_customer_sk#146, 5), ENSURE_REQUIREMENTS, [id=#205]

(47) Sort [codegen id : 20]
Input [2]: [ws_bill_customer_sk#146, d_date#179]
Arguments: [ws_bill_customer_sk#146 ASC NULLS FIRST], false, 0

(48) ReusedExchange [Reuses operator id: 13]
Output [3]: [c_customer_sk#206, c_last_name#207, c_first_name#208]

(49) Sort [codegen id : 22]
Input [3]: [c_customer_sk#206, c_last_name#207, c_first_name#208]
Arguments: [c_customer_sk#206 ASC NULLS FIRST], false, 0

(50) SortMergeJoin [codegen id : 23]
Left keys [1]: [ws_bill_customer_sk#146]
Right keys [1]: [c_customer_sk#206]
Join condition: None

(51) Project [codegen id : 23]
Output [3]: [d_date#179, c_last_name#207, c_first_name#208]
Input [5]: [ws_bill_customer_sk#146, d_date#179, c_customer_sk#206, c_last_name#207, c_first_name#208]

(52) HashAggregate [codegen id : 23]
Input [3]: [d_date#179, c_last_name#207, c_first_name#208]
Keys [3]: [c_last_name#207, c_first_name#208, d_date#179]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#207, c_first_name#208, d_date#179]

(53) Exchange
Input [3]: [c_last_name#207, c_first_name#208, d_date#179]
Arguments: hashpartitioning(c_last_name#207, c_first_name#208, d_date#179, 5), ENSURE_REQUIREMENTS, [id=#209]

(54) HashAggregate [codegen id : 24]
Input [3]: [c_last_name#207, c_first_name#208, d_date#179]
Keys [3]: [c_last_name#207, c_first_name#208, d_date#179]
Functions: []
Aggregate Attributes: []
Results [3]: [c_last_name#207, c_first_name#208, d_date#179]

(55) Exchange
Input [3]: [c_last_name#207, c_first_name#208, d_date#179]
Arguments: hashpartitioning(coalesce(c_last_name#207, ), isnull(c_last_name#207), coalesce(c_first_name#208, ), isnull(c_first_name#208), coalesce(d_date#179, 1970-01-01), isnull(d_date#179), 5), ENSURE_REQUIREMENTS, [id=#210]

(56) Sort [codegen id : 25]
Input [3]: [c_last_name#207, c_first_name#208, d_date#179]
Arguments: [coalesce(c_last_name#207, ) ASC NULLS FIRST, isnull(c_last_name#207) ASC NULLS FIRST, coalesce(c_first_name#208, ) ASC NULLS FIRST, isnull(c_first_name#208) ASC NULLS FIRST, coalesce(d_date#179, 1970-01-01) ASC NULLS FIRST, isnull(d_date#179) ASC NULLS FIRST], false, 0

(57) SortMergeJoin [codegen id : 26]
Left keys [6]: [coalesce(c_last_name#63, ), isnull(c_last_name#63), coalesce(c_first_name#62, ), isnull(c_first_name#62), coalesce(d_date#27, 1970-01-01), isnull(d_date#27)]
Right keys [6]: [coalesce(c_last_name#207, ), isnull(c_last_name#207), coalesce(c_first_name#208, ), isnull(c_first_name#208), coalesce(d_date#179, 1970-01-01), isnull(d_date#179)]
Join condition: None

(58) Project [codegen id : 26]
Output: []
Input [3]: [c_last_name#63, c_first_name#62, d_date#27]

(59) HashAggregate [codegen id : 26]
Input: []
Keys: []
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#211]
Results [1]: [count#212]

(60) Exchange
Input [1]: [count#212]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#213]

(61) HashAggregate [codegen id : 27]
Input [1]: [count#212]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#214]
Results [1]: [count(1)#214 AS count(1)#215]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#23 IN dynamicpruning#24
BroadcastExchange (65)
+- * Filter (64)
   +- * ColumnarToRow (63)
      +- Scan parquet default.date_dim (62)


(62) Scan parquet default.date_dim
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(63) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(64) Filter [codegen id : 1]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Condition : (((isnotnull(d_month_seq#28) AND (d_month_seq#28 >= 1200)) AND (d_month_seq#28 <= 1211)) AND isnotnull(d_date_sk#25))

(65) BroadcastExchange
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#216]

Subquery:2 Hosting operator id = 22 Hosting Expression = cs_sold_date_sk#108 IN dynamicpruning#24

Subquery:3 Hosting operator id = 40 Hosting Expression = ws_sold_date_sk#176 IN dynamicpruning#24


