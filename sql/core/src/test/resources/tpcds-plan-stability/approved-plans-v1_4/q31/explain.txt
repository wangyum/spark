== Physical Plan ==
* Sort (104)
+- Exchange (103)
   +- * Project (102)
      +- * BroadcastHashJoin Inner BuildRight (101)
         :- * Project (85)
         :  +- * BroadcastHashJoin Inner BuildRight (84)
         :     :- * BroadcastHashJoin Inner BuildRight (68)
         :     :  :- * Project (52)
         :     :  :  +- * BroadcastHashJoin Inner BuildRight (51)
         :     :  :     :- * BroadcastHashJoin Inner BuildRight (35)
         :     :  :     :  :- * HashAggregate (19)
         :     :  :     :  :  +- Exchange (18)
         :     :  :     :  :     +- * HashAggregate (17)
         :     :  :     :  :        +- * Project (16)
         :     :  :     :  :           +- * BroadcastHashJoin Inner BuildRight (15)
         :     :  :     :  :              :- * HashAggregate (8)
         :     :  :     :  :              :  +- * Project (7)
         :     :  :     :  :              :     +- * HashAggregate (6)
         :     :  :     :  :              :        +- * BroadcastHashJoin Inner BuildRight (5)
         :     :  :     :  :              :           :- * Filter (3)
         :     :  :     :  :              :           :  +- * ColumnarToRow (2)
         :     :  :     :  :              :           :     +- Scan parquet default.store_sales (1)
         :     :  :     :  :              :           +- ReusedExchange (4)
         :     :  :     :  :              +- BroadcastExchange (14)
         :     :  :     :  :                 +- * HashAggregate (13)
         :     :  :     :  :                    +- * HashAggregate (12)
         :     :  :     :  :                       +- * Filter (11)
         :     :  :     :  :                          +- * ColumnarToRow (10)
         :     :  :     :  :                             +- Scan parquet default.customer_address (9)
         :     :  :     :  +- BroadcastExchange (34)
         :     :  :     :     +- * HashAggregate (33)
         :     :  :     :        +- Exchange (32)
         :     :  :     :           +- * HashAggregate (31)
         :     :  :     :              +- * Project (30)
         :     :  :     :                 +- * BroadcastHashJoin Inner BuildRight (29)
         :     :  :     :                    :- * HashAggregate (27)
         :     :  :     :                    :  +- * Project (26)
         :     :  :     :                    :     +- * HashAggregate (25)
         :     :  :     :                    :        +- * BroadcastHashJoin Inner BuildRight (24)
         :     :  :     :                    :           :- * Filter (22)
         :     :  :     :                    :           :  +- * ColumnarToRow (21)
         :     :  :     :                    :           :     +- Scan parquet default.store_sales (20)
         :     :  :     :                    :           +- ReusedExchange (23)
         :     :  :     :                    +- ReusedExchange (28)
         :     :  :     +- BroadcastExchange (50)
         :     :  :        +- * HashAggregate (49)
         :     :  :           +- Exchange (48)
         :     :  :              +- * HashAggregate (47)
         :     :  :                 +- * Project (46)
         :     :  :                    +- * BroadcastHashJoin Inner BuildRight (45)
         :     :  :                       :- * HashAggregate (43)
         :     :  :                       :  +- * Project (42)
         :     :  :                       :     +- * HashAggregate (41)
         :     :  :                       :        +- * BroadcastHashJoin Inner BuildRight (40)
         :     :  :                       :           :- * Filter (38)
         :     :  :                       :           :  +- * ColumnarToRow (37)
         :     :  :                       :           :     +- Scan parquet default.store_sales (36)
         :     :  :                       :           +- ReusedExchange (39)
         :     :  :                       +- ReusedExchange (44)
         :     :  +- BroadcastExchange (67)
         :     :     +- * HashAggregate (66)
         :     :        +- Exchange (65)
         :     :           +- * HashAggregate (64)
         :     :              +- * Project (63)
         :     :                 +- * BroadcastHashJoin Inner BuildRight (62)
         :     :                    :- * HashAggregate (60)
         :     :                    :  +- * Project (59)
         :     :                    :     +- * HashAggregate (58)
         :     :                    :        +- * BroadcastHashJoin Inner BuildRight (57)
         :     :                    :           :- * Filter (55)
         :     :                    :           :  +- * ColumnarToRow (54)
         :     :                    :           :     +- Scan parquet default.web_sales (53)
         :     :                    :           +- ReusedExchange (56)
         :     :                    +- ReusedExchange (61)
         :     +- BroadcastExchange (83)
         :        +- * HashAggregate (82)
         :           +- Exchange (81)
         :              +- * HashAggregate (80)
         :                 +- * Project (79)
         :                    +- * BroadcastHashJoin Inner BuildRight (78)
         :                       :- * HashAggregate (76)
         :                       :  +- * Project (75)
         :                       :     +- * HashAggregate (74)
         :                       :        +- * BroadcastHashJoin Inner BuildRight (73)
         :                       :           :- * Filter (71)
         :                       :           :  +- * ColumnarToRow (70)
         :                       :           :     +- Scan parquet default.web_sales (69)
         :                       :           +- ReusedExchange (72)
         :                       +- ReusedExchange (77)
         +- BroadcastExchange (100)
            +- * HashAggregate (99)
               +- Exchange (98)
                  +- * HashAggregate (97)
                     +- * Project (96)
                        +- * BroadcastHashJoin Inner BuildRight (95)
                           :- * HashAggregate (93)
                           :  +- * Project (92)
                           :     +- * HashAggregate (91)
                           :        +- * BroadcastHashJoin Inner BuildRight (90)
                           :           :- * Filter (88)
                           :           :  +- * ColumnarToRow (87)
                           :           :     +- Scan parquet default.web_sales (86)
                           :           +- ReusedExchange (89)
                           +- ReusedExchange (94)


(1) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]

(3) Filter [codegen id : 3]
Input [23]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23]
Condition : isnotnull(ss_addr_sk#6)

(4) ReusedExchange [Reuses operator id: 108]
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(5) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#23]
Right keys [1]: [d_date_sk#25]
Join condition: None

(6) HashAggregate [codegen id : 3]
Input [51]: [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23, d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Keys [3]: [ss_addr_sk#6, d_qoy#35, d_year#31]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#15))]
Aggregate Attributes [1]: [sum#53]
Results [4]: [ss_addr_sk#6, d_qoy#35, d_year#31, sum#54]

(7) Project [codegen id : 3]
Output [4]: [ss_addr_sk#6, d_qoy#35, d_year#31, sum#54 AS _pushedexpression#55]
Input [4]: [ss_addr_sk#6, d_qoy#35, d_year#31, sum#54]

(8) HashAggregate [codegen id : 3]
Input [4]: [ss_addr_sk#6, d_qoy#35, d_year#31, _pushedexpression#55]
Keys [3]: [ss_addr_sk#6, d_qoy#35, d_year#31]
Functions: []
Aggregate Attributes: []
Results [3]: [ss_addr_sk#6, d_qoy#35, d_year#31]

(9) Scan parquet default.customer_address
Output [13]: [ca_address_sk#56, ca_address_id#57, ca_street_number#58, ca_street_name#59, ca_street_type#60, ca_suite_number#61, ca_city#62, ca_county#63, ca_state#64, ca_zip#65, ca_country#66, ca_gmt_offset#67, ca_location_type#68]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)]
ReadSchema: struct<ca_address_sk:int,ca_address_id:string,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string>

(10) ColumnarToRow [codegen id : 2]
Input [13]: [ca_address_sk#56, ca_address_id#57, ca_street_number#58, ca_street_name#59, ca_street_type#60, ca_suite_number#61, ca_city#62, ca_county#63, ca_state#64, ca_zip#65, ca_country#66, ca_gmt_offset#67, ca_location_type#68]

(11) Filter [codegen id : 2]
Input [13]: [ca_address_sk#56, ca_address_id#57, ca_street_number#58, ca_street_name#59, ca_street_type#60, ca_suite_number#61, ca_city#62, ca_county#63, ca_state#64, ca_zip#65, ca_country#66, ca_gmt_offset#67, ca_location_type#68]
Condition : (isnotnull(ca_address_sk#56) AND isnotnull(ca_county#63))

(12) HashAggregate [codegen id : 2]
Input [13]: [ca_address_sk#56, ca_address_id#57, ca_street_number#58, ca_street_name#59, ca_street_type#60, ca_suite_number#61, ca_city#62, ca_county#63, ca_state#64, ca_zip#65, ca_country#66, ca_gmt_offset#67, ca_location_type#68]
Keys [2]: [ca_address_sk#56, ca_county#63]
Functions: []
Aggregate Attributes: []
Results [2]: [ca_address_sk#56, ca_county#63]

(13) HashAggregate [codegen id : 2]
Input [2]: [ca_address_sk#56, ca_county#63]
Keys [2]: [ca_address_sk#56, ca_county#63]
Functions: []
Aggregate Attributes: []
Results [2]: [ca_address_sk#56, ca_county#63]

(14) BroadcastExchange
Input [2]: [ca_address_sk#56, ca_county#63]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#69]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_addr_sk#6]
Right keys [1]: [ca_address_sk#56]
Join condition: None

(16) Project [codegen id : 3]
Output [3]: [d_qoy#35, d_year#31, ca_county#63]
Input [5]: [ss_addr_sk#6, d_qoy#35, d_year#31, ca_address_sk#56, ca_county#63]

(17) HashAggregate [codegen id : 3]
Input [3]: [d_qoy#35, d_year#31, ca_county#63]
Keys [3]: [ca_county#63, d_qoy#35, d_year#31]
Functions [1]: [partial_sum(_pushedexpression#70)]
Aggregate Attributes [2]: [sum#71, isEmpty#72]
Results [5]: [ca_county#63, d_qoy#35, d_year#31, sum#73, isEmpty#74]

(18) Exchange
Input [5]: [ca_county#63, d_qoy#35, d_year#31, sum#73, isEmpty#74]
Arguments: hashpartitioning(ca_county#63, d_qoy#35, d_year#31, 5), ENSURE_REQUIREMENTS, [id=#75]

(19) HashAggregate [codegen id : 24]
Input [5]: [ca_county#63, d_qoy#35, d_year#31, sum#73, isEmpty#74]
Keys [3]: [ca_county#63, d_qoy#35, d_year#31]
Functions [1]: [sum(_pushedexpression#70)]
Aggregate Attributes [1]: [sum(_pushedexpression#70)#76]
Results [3]: [ca_county#63, d_year#31, cast(sum(_pushedexpression#70)#76 as decimal(17,2)) AS store_sales#77]

(20) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#78, ss_item_sk#79, ss_customer_sk#80, ss_cdemo_sk#81, ss_hdemo_sk#82, ss_addr_sk#83, ss_store_sk#84, ss_promo_sk#85, ss_ticket_number#86, ss_quantity#87, ss_wholesale_cost#88, ss_list_price#89, ss_sales_price#90, ss_ext_discount_amt#91, ss_ext_sales_price#92, ss_ext_wholesale_cost#93, ss_ext_list_price#94, ss_ext_tax#95, ss_coupon_amt#96, ss_net_paid#97, ss_net_paid_inc_tax#98, ss_net_profit#99, ss_sold_date_sk#100]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#100), dynamicpruningexpression(ss_sold_date_sk#100 IN dynamicpruning#101)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(21) ColumnarToRow [codegen id : 6]
Input [23]: [ss_sold_time_sk#78, ss_item_sk#79, ss_customer_sk#80, ss_cdemo_sk#81, ss_hdemo_sk#82, ss_addr_sk#83, ss_store_sk#84, ss_promo_sk#85, ss_ticket_number#86, ss_quantity#87, ss_wholesale_cost#88, ss_list_price#89, ss_sales_price#90, ss_ext_discount_amt#91, ss_ext_sales_price#92, ss_ext_wholesale_cost#93, ss_ext_list_price#94, ss_ext_tax#95, ss_coupon_amt#96, ss_net_paid#97, ss_net_paid_inc_tax#98, ss_net_profit#99, ss_sold_date_sk#100]

(22) Filter [codegen id : 6]
Input [23]: [ss_sold_time_sk#78, ss_item_sk#79, ss_customer_sk#80, ss_cdemo_sk#81, ss_hdemo_sk#82, ss_addr_sk#83, ss_store_sk#84, ss_promo_sk#85, ss_ticket_number#86, ss_quantity#87, ss_wholesale_cost#88, ss_list_price#89, ss_sales_price#90, ss_ext_discount_amt#91, ss_ext_sales_price#92, ss_ext_wholesale_cost#93, ss_ext_list_price#94, ss_ext_tax#95, ss_coupon_amt#96, ss_net_paid#97, ss_net_paid_inc_tax#98, ss_net_profit#99, ss_sold_date_sk#100]
Condition : isnotnull(ss_addr_sk#83)

(23) ReusedExchange [Reuses operator id: 112]
Output [28]: [d_date_sk#102, d_date_id#103, d_date#104, d_month_seq#105, d_week_seq#106, d_quarter_seq#107, d_year#108, d_dow#109, d_moy#110, d_dom#111, d_qoy#112, d_fy_year#113, d_fy_quarter_seq#114, d_fy_week_seq#115, d_day_name#116, d_quarter_name#117, d_holiday#118, d_weekend#119, d_following_holiday#120, d_first_dom#121, d_last_dom#122, d_same_day_ly#123, d_same_day_lq#124, d_current_day#125, d_current_week#126, d_current_month#127, d_current_quarter#128, d_current_year#129]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#100]
Right keys [1]: [d_date_sk#102]
Join condition: None

(25) HashAggregate [codegen id : 6]
Input [51]: [ss_sold_time_sk#78, ss_item_sk#79, ss_customer_sk#80, ss_cdemo_sk#81, ss_hdemo_sk#82, ss_addr_sk#83, ss_store_sk#84, ss_promo_sk#85, ss_ticket_number#86, ss_quantity#87, ss_wholesale_cost#88, ss_list_price#89, ss_sales_price#90, ss_ext_discount_amt#91, ss_ext_sales_price#92, ss_ext_wholesale_cost#93, ss_ext_list_price#94, ss_ext_tax#95, ss_coupon_amt#96, ss_net_paid#97, ss_net_paid_inc_tax#98, ss_net_profit#99, ss_sold_date_sk#100, d_date_sk#102, d_date_id#103, d_date#104, d_month_seq#105, d_week_seq#106, d_quarter_seq#107, d_year#108, d_dow#109, d_moy#110, d_dom#111, d_qoy#112, d_fy_year#113, d_fy_quarter_seq#114, d_fy_week_seq#115, d_day_name#116, d_quarter_name#117, d_holiday#118, d_weekend#119, d_following_holiday#120, d_first_dom#121, d_last_dom#122, d_same_day_ly#123, d_same_day_lq#124, d_current_day#125, d_current_week#126, d_current_month#127, d_current_quarter#128, d_current_year#129]
Keys [3]: [ss_addr_sk#83, d_qoy#112, d_year#108]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#92))]
Aggregate Attributes [1]: [sum#130]
Results [4]: [ss_addr_sk#83, d_qoy#112, d_year#108, sum#131]

(26) Project [codegen id : 6]
Output [4]: [ss_addr_sk#83, d_qoy#112, d_year#108, sum#131 AS _pushedexpression#132]
Input [4]: [ss_addr_sk#83, d_qoy#112, d_year#108, sum#131]

(27) HashAggregate [codegen id : 6]
Input [4]: [ss_addr_sk#83, d_qoy#112, d_year#108, _pushedexpression#132]
Keys [3]: [ss_addr_sk#83, d_qoy#112, d_year#108]
Functions: []
Aggregate Attributes: []
Results [3]: [ss_addr_sk#83, d_qoy#112, d_year#108]

(28) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#133, ca_county#134]

(29) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_addr_sk#83]
Right keys [1]: [ca_address_sk#133]
Join condition: None

(30) Project [codegen id : 6]
Output [3]: [d_qoy#112, d_year#108, ca_county#134]
Input [5]: [ss_addr_sk#83, d_qoy#112, d_year#108, ca_address_sk#133, ca_county#134]

(31) HashAggregate [codegen id : 6]
Input [3]: [d_qoy#112, d_year#108, ca_county#134]
Keys [3]: [ca_county#134, d_qoy#112, d_year#108]
Functions [1]: [partial_sum(_pushedexpression#135)]
Aggregate Attributes [2]: [sum#136, isEmpty#137]
Results [5]: [ca_county#134, d_qoy#112, d_year#108, sum#138, isEmpty#139]

(32) Exchange
Input [5]: [ca_county#134, d_qoy#112, d_year#108, sum#138, isEmpty#139]
Arguments: hashpartitioning(ca_county#134, d_qoy#112, d_year#108, 5), ENSURE_REQUIREMENTS, [id=#140]

(33) HashAggregate [codegen id : 7]
Input [5]: [ca_county#134, d_qoy#112, d_year#108, sum#138, isEmpty#139]
Keys [3]: [ca_county#134, d_qoy#112, d_year#108]
Functions [1]: [sum(_pushedexpression#135)]
Aggregate Attributes [1]: [sum(_pushedexpression#135)#76]
Results [2]: [ca_county#134, cast(sum(_pushedexpression#135)#76 as decimal(17,2)) AS store_sales#141]

(34) BroadcastExchange
Input [2]: [ca_county#134, store_sales#141]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#142]

(35) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#63]
Right keys [1]: [ca_county#134]
Join condition: None

(36) Scan parquet default.store_sales
Output [23]: [ss_sold_time_sk#143, ss_item_sk#144, ss_customer_sk#145, ss_cdemo_sk#146, ss_hdemo_sk#147, ss_addr_sk#148, ss_store_sk#149, ss_promo_sk#150, ss_ticket_number#151, ss_quantity#152, ss_wholesale_cost#153, ss_list_price#154, ss_sales_price#155, ss_ext_discount_amt#156, ss_ext_sales_price#157, ss_ext_wholesale_cost#158, ss_ext_list_price#159, ss_ext_tax#160, ss_coupon_amt#161, ss_net_paid#162, ss_net_paid_inc_tax#163, ss_net_profit#164, ss_sold_date_sk#165]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#165), dynamicpruningexpression(ss_sold_date_sk#165 IN dynamicpruning#166)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2),ss_ext_tax:decimal(7,2),ss_coupon_amt:decimal(7,2),ss_net_paid:decimal(7,2),ss_net_paid_inc_tax:decimal(7,2),ss_net_profit:decimal(7,2)>

(37) ColumnarToRow [codegen id : 10]
Input [23]: [ss_sold_time_sk#143, ss_item_sk#144, ss_customer_sk#145, ss_cdemo_sk#146, ss_hdemo_sk#147, ss_addr_sk#148, ss_store_sk#149, ss_promo_sk#150, ss_ticket_number#151, ss_quantity#152, ss_wholesale_cost#153, ss_list_price#154, ss_sales_price#155, ss_ext_discount_amt#156, ss_ext_sales_price#157, ss_ext_wholesale_cost#158, ss_ext_list_price#159, ss_ext_tax#160, ss_coupon_amt#161, ss_net_paid#162, ss_net_paid_inc_tax#163, ss_net_profit#164, ss_sold_date_sk#165]

(38) Filter [codegen id : 10]
Input [23]: [ss_sold_time_sk#143, ss_item_sk#144, ss_customer_sk#145, ss_cdemo_sk#146, ss_hdemo_sk#147, ss_addr_sk#148, ss_store_sk#149, ss_promo_sk#150, ss_ticket_number#151, ss_quantity#152, ss_wholesale_cost#153, ss_list_price#154, ss_sales_price#155, ss_ext_discount_amt#156, ss_ext_sales_price#157, ss_ext_wholesale_cost#158, ss_ext_list_price#159, ss_ext_tax#160, ss_coupon_amt#161, ss_net_paid#162, ss_net_paid_inc_tax#163, ss_net_profit#164, ss_sold_date_sk#165]
Condition : isnotnull(ss_addr_sk#148)

(39) ReusedExchange [Reuses operator id: 116]
Output [28]: [d_date_sk#167, d_date_id#168, d_date#169, d_month_seq#170, d_week_seq#171, d_quarter_seq#172, d_year#173, d_dow#174, d_moy#175, d_dom#176, d_qoy#177, d_fy_year#178, d_fy_quarter_seq#179, d_fy_week_seq#180, d_day_name#181, d_quarter_name#182, d_holiday#183, d_weekend#184, d_following_holiday#185, d_first_dom#186, d_last_dom#187, d_same_day_ly#188, d_same_day_lq#189, d_current_day#190, d_current_week#191, d_current_month#192, d_current_quarter#193, d_current_year#194]

(40) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_sold_date_sk#165]
Right keys [1]: [d_date_sk#167]
Join condition: None

(41) HashAggregate [codegen id : 10]
Input [51]: [ss_sold_time_sk#143, ss_item_sk#144, ss_customer_sk#145, ss_cdemo_sk#146, ss_hdemo_sk#147, ss_addr_sk#148, ss_store_sk#149, ss_promo_sk#150, ss_ticket_number#151, ss_quantity#152, ss_wholesale_cost#153, ss_list_price#154, ss_sales_price#155, ss_ext_discount_amt#156, ss_ext_sales_price#157, ss_ext_wholesale_cost#158, ss_ext_list_price#159, ss_ext_tax#160, ss_coupon_amt#161, ss_net_paid#162, ss_net_paid_inc_tax#163, ss_net_profit#164, ss_sold_date_sk#165, d_date_sk#167, d_date_id#168, d_date#169, d_month_seq#170, d_week_seq#171, d_quarter_seq#172, d_year#173, d_dow#174, d_moy#175, d_dom#176, d_qoy#177, d_fy_year#178, d_fy_quarter_seq#179, d_fy_week_seq#180, d_day_name#181, d_quarter_name#182, d_holiday#183, d_weekend#184, d_following_holiday#185, d_first_dom#186, d_last_dom#187, d_same_day_ly#188, d_same_day_lq#189, d_current_day#190, d_current_week#191, d_current_month#192, d_current_quarter#193, d_current_year#194]
Keys [3]: [ss_addr_sk#148, d_qoy#177, d_year#173]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#157))]
Aggregate Attributes [1]: [sum#195]
Results [4]: [ss_addr_sk#148, d_qoy#177, d_year#173, sum#196]

(42) Project [codegen id : 10]
Output [4]: [ss_addr_sk#148, d_qoy#177, d_year#173, sum#196 AS _pushedexpression#197]
Input [4]: [ss_addr_sk#148, d_qoy#177, d_year#173, sum#196]

(43) HashAggregate [codegen id : 10]
Input [4]: [ss_addr_sk#148, d_qoy#177, d_year#173, _pushedexpression#197]
Keys [3]: [ss_addr_sk#148, d_qoy#177, d_year#173]
Functions: []
Aggregate Attributes: []
Results [3]: [ss_addr_sk#148, d_qoy#177, d_year#173]

(44) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#198, ca_county#199]

(45) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_addr_sk#148]
Right keys [1]: [ca_address_sk#198]
Join condition: None

(46) Project [codegen id : 10]
Output [3]: [d_qoy#177, d_year#173, ca_county#199]
Input [5]: [ss_addr_sk#148, d_qoy#177, d_year#173, ca_address_sk#198, ca_county#199]

(47) HashAggregate [codegen id : 10]
Input [3]: [d_qoy#177, d_year#173, ca_county#199]
Keys [3]: [ca_county#199, d_qoy#177, d_year#173]
Functions [1]: [partial_sum(_pushedexpression#200)]
Aggregate Attributes [2]: [sum#201, isEmpty#202]
Results [5]: [ca_county#199, d_qoy#177, d_year#173, sum#203, isEmpty#204]

(48) Exchange
Input [5]: [ca_county#199, d_qoy#177, d_year#173, sum#203, isEmpty#204]
Arguments: hashpartitioning(ca_county#199, d_qoy#177, d_year#173, 5), ENSURE_REQUIREMENTS, [id=#205]

(49) HashAggregate [codegen id : 11]
Input [5]: [ca_county#199, d_qoy#177, d_year#173, sum#203, isEmpty#204]
Keys [3]: [ca_county#199, d_qoy#177, d_year#173]
Functions [1]: [sum(_pushedexpression#200)]
Aggregate Attributes [1]: [sum(_pushedexpression#200)#76]
Results [2]: [ca_county#199, cast(sum(_pushedexpression#200)#76 as decimal(17,2)) AS store_sales#206]

(50) BroadcastExchange
Input [2]: [ca_county#199, store_sales#206]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#207]

(51) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#134]
Right keys [1]: [ca_county#199]
Join condition: None

(52) Project [codegen id : 24]
Output [5]: [ca_county#63, d_year#31, store_sales#77, store_sales#141, store_sales#206]
Input [7]: [ca_county#63, d_year#31, store_sales#77, ca_county#134, store_sales#141, ca_county#199, store_sales#206]

(53) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#208, ws_ship_date_sk#209, ws_item_sk#210, ws_bill_customer_sk#211, ws_bill_cdemo_sk#212, ws_bill_hdemo_sk#213, ws_bill_addr_sk#214, ws_ship_customer_sk#215, ws_ship_cdemo_sk#216, ws_ship_hdemo_sk#217, ws_ship_addr_sk#218, ws_web_page_sk#219, ws_web_site_sk#220, ws_ship_mode_sk#221, ws_warehouse_sk#222, ws_promo_sk#223, ws_order_number#224, ws_quantity#225, ws_wholesale_cost#226, ws_list_price#227, ws_sales_price#228, ws_ext_discount_amt#229, ws_ext_sales_price#230, ws_ext_wholesale_cost#231, ws_ext_list_price#232, ws_ext_tax#233, ws_coupon_amt#234, ws_ext_ship_cost#235, ws_net_paid#236, ws_net_paid_inc_tax#237, ws_net_paid_inc_ship#238, ws_net_paid_inc_ship_tax#239, ws_net_profit#240, ws_sold_date_sk#241]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#241), dynamicpruningexpression(ws_sold_date_sk#241 IN dynamicpruning#24)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(54) ColumnarToRow [codegen id : 14]
Input [34]: [ws_sold_time_sk#208, ws_ship_date_sk#209, ws_item_sk#210, ws_bill_customer_sk#211, ws_bill_cdemo_sk#212, ws_bill_hdemo_sk#213, ws_bill_addr_sk#214, ws_ship_customer_sk#215, ws_ship_cdemo_sk#216, ws_ship_hdemo_sk#217, ws_ship_addr_sk#218, ws_web_page_sk#219, ws_web_site_sk#220, ws_ship_mode_sk#221, ws_warehouse_sk#222, ws_promo_sk#223, ws_order_number#224, ws_quantity#225, ws_wholesale_cost#226, ws_list_price#227, ws_sales_price#228, ws_ext_discount_amt#229, ws_ext_sales_price#230, ws_ext_wholesale_cost#231, ws_ext_list_price#232, ws_ext_tax#233, ws_coupon_amt#234, ws_ext_ship_cost#235, ws_net_paid#236, ws_net_paid_inc_tax#237, ws_net_paid_inc_ship#238, ws_net_paid_inc_ship_tax#239, ws_net_profit#240, ws_sold_date_sk#241]

(55) Filter [codegen id : 14]
Input [34]: [ws_sold_time_sk#208, ws_ship_date_sk#209, ws_item_sk#210, ws_bill_customer_sk#211, ws_bill_cdemo_sk#212, ws_bill_hdemo_sk#213, ws_bill_addr_sk#214, ws_ship_customer_sk#215, ws_ship_cdemo_sk#216, ws_ship_hdemo_sk#217, ws_ship_addr_sk#218, ws_web_page_sk#219, ws_web_site_sk#220, ws_ship_mode_sk#221, ws_warehouse_sk#222, ws_promo_sk#223, ws_order_number#224, ws_quantity#225, ws_wholesale_cost#226, ws_list_price#227, ws_sales_price#228, ws_ext_discount_amt#229, ws_ext_sales_price#230, ws_ext_wholesale_cost#231, ws_ext_list_price#232, ws_ext_tax#233, ws_coupon_amt#234, ws_ext_ship_cost#235, ws_net_paid#236, ws_net_paid_inc_tax#237, ws_net_paid_inc_ship#238, ws_net_paid_inc_ship_tax#239, ws_net_profit#240, ws_sold_date_sk#241]
Condition : isnotnull(ws_bill_addr_sk#214)

(56) ReusedExchange [Reuses operator id: 108]
Output [28]: [d_date_sk#242, d_date_id#243, d_date#244, d_month_seq#245, d_week_seq#246, d_quarter_seq#247, d_year#248, d_dow#249, d_moy#250, d_dom#251, d_qoy#252, d_fy_year#253, d_fy_quarter_seq#254, d_fy_week_seq#255, d_day_name#256, d_quarter_name#257, d_holiday#258, d_weekend#259, d_following_holiday#260, d_first_dom#261, d_last_dom#262, d_same_day_ly#263, d_same_day_lq#264, d_current_day#265, d_current_week#266, d_current_month#267, d_current_quarter#268, d_current_year#269]

(57) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ws_sold_date_sk#241]
Right keys [1]: [d_date_sk#242]
Join condition: None

(58) HashAggregate [codegen id : 14]
Input [62]: [ws_sold_time_sk#208, ws_ship_date_sk#209, ws_item_sk#210, ws_bill_customer_sk#211, ws_bill_cdemo_sk#212, ws_bill_hdemo_sk#213, ws_bill_addr_sk#214, ws_ship_customer_sk#215, ws_ship_cdemo_sk#216, ws_ship_hdemo_sk#217, ws_ship_addr_sk#218, ws_web_page_sk#219, ws_web_site_sk#220, ws_ship_mode_sk#221, ws_warehouse_sk#222, ws_promo_sk#223, ws_order_number#224, ws_quantity#225, ws_wholesale_cost#226, ws_list_price#227, ws_sales_price#228, ws_ext_discount_amt#229, ws_ext_sales_price#230, ws_ext_wholesale_cost#231, ws_ext_list_price#232, ws_ext_tax#233, ws_coupon_amt#234, ws_ext_ship_cost#235, ws_net_paid#236, ws_net_paid_inc_tax#237, ws_net_paid_inc_ship#238, ws_net_paid_inc_ship_tax#239, ws_net_profit#240, ws_sold_date_sk#241, d_date_sk#242, d_date_id#243, d_date#244, d_month_seq#245, d_week_seq#246, d_quarter_seq#247, d_year#248, d_dow#249, d_moy#250, d_dom#251, d_qoy#252, d_fy_year#253, d_fy_quarter_seq#254, d_fy_week_seq#255, d_day_name#256, d_quarter_name#257, d_holiday#258, d_weekend#259, d_following_holiday#260, d_first_dom#261, d_last_dom#262, d_same_day_ly#263, d_same_day_lq#264, d_current_day#265, d_current_week#266, d_current_month#267, d_current_quarter#268, d_current_year#269]
Keys [3]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#230))]
Aggregate Attributes [1]: [sum#270]
Results [4]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248, sum#271]

(59) Project [codegen id : 14]
Output [4]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248, sum#271 AS _pushedexpression#272]
Input [4]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248, sum#271]

(60) HashAggregate [codegen id : 14]
Input [4]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248, _pushedexpression#272]
Keys [3]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248]
Functions: []
Aggregate Attributes: []
Results [3]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248]

(61) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#273, ca_county#274]

(62) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ws_bill_addr_sk#214]
Right keys [1]: [ca_address_sk#273]
Join condition: None

(63) Project [codegen id : 14]
Output [3]: [d_qoy#252, d_year#248, ca_county#274]
Input [5]: [ws_bill_addr_sk#214, d_qoy#252, d_year#248, ca_address_sk#273, ca_county#274]

(64) HashAggregate [codegen id : 14]
Input [3]: [d_qoy#252, d_year#248, ca_county#274]
Keys [3]: [ca_county#274, d_qoy#252, d_year#248]
Functions [1]: [partial_sum(_pushedexpression#275)]
Aggregate Attributes [2]: [sum#276, isEmpty#277]
Results [5]: [ca_county#274, d_qoy#252, d_year#248, sum#278, isEmpty#279]

(65) Exchange
Input [5]: [ca_county#274, d_qoy#252, d_year#248, sum#278, isEmpty#279]
Arguments: hashpartitioning(ca_county#274, d_qoy#252, d_year#248, 5), ENSURE_REQUIREMENTS, [id=#280]

(66) HashAggregate [codegen id : 15]
Input [5]: [ca_county#274, d_qoy#252, d_year#248, sum#278, isEmpty#279]
Keys [3]: [ca_county#274, d_qoy#252, d_year#248]
Functions [1]: [sum(_pushedexpression#275)]
Aggregate Attributes [1]: [sum(_pushedexpression#275)#281]
Results [2]: [ca_county#274, cast(sum(_pushedexpression#275)#281 as decimal(17,2)) AS web_sales#282]

(67) BroadcastExchange
Input [2]: [ca_county#274, web_sales#282]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#283]

(68) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#63]
Right keys [1]: [ca_county#274]
Join condition: None

(69) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#284, ws_ship_date_sk#285, ws_item_sk#286, ws_bill_customer_sk#287, ws_bill_cdemo_sk#288, ws_bill_hdemo_sk#289, ws_bill_addr_sk#290, ws_ship_customer_sk#291, ws_ship_cdemo_sk#292, ws_ship_hdemo_sk#293, ws_ship_addr_sk#294, ws_web_page_sk#295, ws_web_site_sk#296, ws_ship_mode_sk#297, ws_warehouse_sk#298, ws_promo_sk#299, ws_order_number#300, ws_quantity#301, ws_wholesale_cost#302, ws_list_price#303, ws_sales_price#304, ws_ext_discount_amt#305, ws_ext_sales_price#306, ws_ext_wholesale_cost#307, ws_ext_list_price#308, ws_ext_tax#309, ws_coupon_amt#310, ws_ext_ship_cost#311, ws_net_paid#312, ws_net_paid_inc_tax#313, ws_net_paid_inc_ship#314, ws_net_paid_inc_ship_tax#315, ws_net_profit#316, ws_sold_date_sk#317]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#317), dynamicpruningexpression(ws_sold_date_sk#317 IN dynamicpruning#101)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(70) ColumnarToRow [codegen id : 18]
Input [34]: [ws_sold_time_sk#284, ws_ship_date_sk#285, ws_item_sk#286, ws_bill_customer_sk#287, ws_bill_cdemo_sk#288, ws_bill_hdemo_sk#289, ws_bill_addr_sk#290, ws_ship_customer_sk#291, ws_ship_cdemo_sk#292, ws_ship_hdemo_sk#293, ws_ship_addr_sk#294, ws_web_page_sk#295, ws_web_site_sk#296, ws_ship_mode_sk#297, ws_warehouse_sk#298, ws_promo_sk#299, ws_order_number#300, ws_quantity#301, ws_wholesale_cost#302, ws_list_price#303, ws_sales_price#304, ws_ext_discount_amt#305, ws_ext_sales_price#306, ws_ext_wholesale_cost#307, ws_ext_list_price#308, ws_ext_tax#309, ws_coupon_amt#310, ws_ext_ship_cost#311, ws_net_paid#312, ws_net_paid_inc_tax#313, ws_net_paid_inc_ship#314, ws_net_paid_inc_ship_tax#315, ws_net_profit#316, ws_sold_date_sk#317]

(71) Filter [codegen id : 18]
Input [34]: [ws_sold_time_sk#284, ws_ship_date_sk#285, ws_item_sk#286, ws_bill_customer_sk#287, ws_bill_cdemo_sk#288, ws_bill_hdemo_sk#289, ws_bill_addr_sk#290, ws_ship_customer_sk#291, ws_ship_cdemo_sk#292, ws_ship_hdemo_sk#293, ws_ship_addr_sk#294, ws_web_page_sk#295, ws_web_site_sk#296, ws_ship_mode_sk#297, ws_warehouse_sk#298, ws_promo_sk#299, ws_order_number#300, ws_quantity#301, ws_wholesale_cost#302, ws_list_price#303, ws_sales_price#304, ws_ext_discount_amt#305, ws_ext_sales_price#306, ws_ext_wholesale_cost#307, ws_ext_list_price#308, ws_ext_tax#309, ws_coupon_amt#310, ws_ext_ship_cost#311, ws_net_paid#312, ws_net_paid_inc_tax#313, ws_net_paid_inc_ship#314, ws_net_paid_inc_ship_tax#315, ws_net_profit#316, ws_sold_date_sk#317]
Condition : isnotnull(ws_bill_addr_sk#290)

(72) ReusedExchange [Reuses operator id: 112]
Output [28]: [d_date_sk#318, d_date_id#319, d_date#320, d_month_seq#321, d_week_seq#322, d_quarter_seq#323, d_year#324, d_dow#325, d_moy#326, d_dom#327, d_qoy#328, d_fy_year#329, d_fy_quarter_seq#330, d_fy_week_seq#331, d_day_name#332, d_quarter_name#333, d_holiday#334, d_weekend#335, d_following_holiday#336, d_first_dom#337, d_last_dom#338, d_same_day_ly#339, d_same_day_lq#340, d_current_day#341, d_current_week#342, d_current_month#343, d_current_quarter#344, d_current_year#345]

(73) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_sold_date_sk#317]
Right keys [1]: [d_date_sk#318]
Join condition: None

(74) HashAggregate [codegen id : 18]
Input [62]: [ws_sold_time_sk#284, ws_ship_date_sk#285, ws_item_sk#286, ws_bill_customer_sk#287, ws_bill_cdemo_sk#288, ws_bill_hdemo_sk#289, ws_bill_addr_sk#290, ws_ship_customer_sk#291, ws_ship_cdemo_sk#292, ws_ship_hdemo_sk#293, ws_ship_addr_sk#294, ws_web_page_sk#295, ws_web_site_sk#296, ws_ship_mode_sk#297, ws_warehouse_sk#298, ws_promo_sk#299, ws_order_number#300, ws_quantity#301, ws_wholesale_cost#302, ws_list_price#303, ws_sales_price#304, ws_ext_discount_amt#305, ws_ext_sales_price#306, ws_ext_wholesale_cost#307, ws_ext_list_price#308, ws_ext_tax#309, ws_coupon_amt#310, ws_ext_ship_cost#311, ws_net_paid#312, ws_net_paid_inc_tax#313, ws_net_paid_inc_ship#314, ws_net_paid_inc_ship_tax#315, ws_net_profit#316, ws_sold_date_sk#317, d_date_sk#318, d_date_id#319, d_date#320, d_month_seq#321, d_week_seq#322, d_quarter_seq#323, d_year#324, d_dow#325, d_moy#326, d_dom#327, d_qoy#328, d_fy_year#329, d_fy_quarter_seq#330, d_fy_week_seq#331, d_day_name#332, d_quarter_name#333, d_holiday#334, d_weekend#335, d_following_holiday#336, d_first_dom#337, d_last_dom#338, d_same_day_ly#339, d_same_day_lq#340, d_current_day#341, d_current_week#342, d_current_month#343, d_current_quarter#344, d_current_year#345]
Keys [3]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#306))]
Aggregate Attributes [1]: [sum#346]
Results [4]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324, sum#347]

(75) Project [codegen id : 18]
Output [4]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324, sum#347 AS _pushedexpression#348]
Input [4]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324, sum#347]

(76) HashAggregate [codegen id : 18]
Input [4]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324, _pushedexpression#348]
Keys [3]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324]
Functions: []
Aggregate Attributes: []
Results [3]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324]

(77) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#349, ca_county#350]

(78) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_bill_addr_sk#290]
Right keys [1]: [ca_address_sk#349]
Join condition: None

(79) Project [codegen id : 18]
Output [3]: [d_qoy#328, d_year#324, ca_county#350]
Input [5]: [ws_bill_addr_sk#290, d_qoy#328, d_year#324, ca_address_sk#349, ca_county#350]

(80) HashAggregate [codegen id : 18]
Input [3]: [d_qoy#328, d_year#324, ca_county#350]
Keys [3]: [ca_county#350, d_qoy#328, d_year#324]
Functions [1]: [partial_sum(_pushedexpression#351)]
Aggregate Attributes [2]: [sum#352, isEmpty#353]
Results [5]: [ca_county#350, d_qoy#328, d_year#324, sum#354, isEmpty#355]

(81) Exchange
Input [5]: [ca_county#350, d_qoy#328, d_year#324, sum#354, isEmpty#355]
Arguments: hashpartitioning(ca_county#350, d_qoy#328, d_year#324, 5), ENSURE_REQUIREMENTS, [id=#356]

(82) HashAggregate [codegen id : 19]
Input [5]: [ca_county#350, d_qoy#328, d_year#324, sum#354, isEmpty#355]
Keys [3]: [ca_county#350, d_qoy#328, d_year#324]
Functions [1]: [sum(_pushedexpression#351)]
Aggregate Attributes [1]: [sum(_pushedexpression#351)#281]
Results [2]: [ca_county#350, cast(sum(_pushedexpression#351)#281 as decimal(17,2)) AS web_sales#357]

(83) BroadcastExchange
Input [2]: [ca_county#350, web_sales#357]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#358]

(84) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#274]
Right keys [1]: [ca_county#350]
Join condition: (CASE WHEN (web_sales#282 > 0.00) THEN CheckOverflow((promote_precision(web_sales#357) / promote_precision(web_sales#282)), DecimalType(37,20)) END > CASE WHEN (store_sales#77 > 0.00) THEN CheckOverflow((promote_precision(store_sales#141) / promote_precision(store_sales#77)), DecimalType(37,20)) END)

(85) Project [codegen id : 24]
Output [8]: [ca_county#63, d_year#31, store_sales#77, store_sales#141, store_sales#206, ca_county#274, web_sales#282, web_sales#357]
Input [9]: [ca_county#63, d_year#31, store_sales#77, store_sales#141, store_sales#206, ca_county#274, web_sales#282, ca_county#350, web_sales#357]

(86) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#359, ws_ship_date_sk#360, ws_item_sk#361, ws_bill_customer_sk#362, ws_bill_cdemo_sk#363, ws_bill_hdemo_sk#364, ws_bill_addr_sk#365, ws_ship_customer_sk#366, ws_ship_cdemo_sk#367, ws_ship_hdemo_sk#368, ws_ship_addr_sk#369, ws_web_page_sk#370, ws_web_site_sk#371, ws_ship_mode_sk#372, ws_warehouse_sk#373, ws_promo_sk#374, ws_order_number#375, ws_quantity#376, ws_wholesale_cost#377, ws_list_price#378, ws_sales_price#379, ws_ext_discount_amt#380, ws_ext_sales_price#381, ws_ext_wholesale_cost#382, ws_ext_list_price#383, ws_ext_tax#384, ws_coupon_amt#385, ws_ext_ship_cost#386, ws_net_paid#387, ws_net_paid_inc_tax#388, ws_net_paid_inc_ship#389, ws_net_paid_inc_ship_tax#390, ws_net_profit#391, ws_sold_date_sk#392]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#392), dynamicpruningexpression(ws_sold_date_sk#392 IN dynamicpruning#166)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(87) ColumnarToRow [codegen id : 22]
Input [34]: [ws_sold_time_sk#359, ws_ship_date_sk#360, ws_item_sk#361, ws_bill_customer_sk#362, ws_bill_cdemo_sk#363, ws_bill_hdemo_sk#364, ws_bill_addr_sk#365, ws_ship_customer_sk#366, ws_ship_cdemo_sk#367, ws_ship_hdemo_sk#368, ws_ship_addr_sk#369, ws_web_page_sk#370, ws_web_site_sk#371, ws_ship_mode_sk#372, ws_warehouse_sk#373, ws_promo_sk#374, ws_order_number#375, ws_quantity#376, ws_wholesale_cost#377, ws_list_price#378, ws_sales_price#379, ws_ext_discount_amt#380, ws_ext_sales_price#381, ws_ext_wholesale_cost#382, ws_ext_list_price#383, ws_ext_tax#384, ws_coupon_amt#385, ws_ext_ship_cost#386, ws_net_paid#387, ws_net_paid_inc_tax#388, ws_net_paid_inc_ship#389, ws_net_paid_inc_ship_tax#390, ws_net_profit#391, ws_sold_date_sk#392]

(88) Filter [codegen id : 22]
Input [34]: [ws_sold_time_sk#359, ws_ship_date_sk#360, ws_item_sk#361, ws_bill_customer_sk#362, ws_bill_cdemo_sk#363, ws_bill_hdemo_sk#364, ws_bill_addr_sk#365, ws_ship_customer_sk#366, ws_ship_cdemo_sk#367, ws_ship_hdemo_sk#368, ws_ship_addr_sk#369, ws_web_page_sk#370, ws_web_site_sk#371, ws_ship_mode_sk#372, ws_warehouse_sk#373, ws_promo_sk#374, ws_order_number#375, ws_quantity#376, ws_wholesale_cost#377, ws_list_price#378, ws_sales_price#379, ws_ext_discount_amt#380, ws_ext_sales_price#381, ws_ext_wholesale_cost#382, ws_ext_list_price#383, ws_ext_tax#384, ws_coupon_amt#385, ws_ext_ship_cost#386, ws_net_paid#387, ws_net_paid_inc_tax#388, ws_net_paid_inc_ship#389, ws_net_paid_inc_ship_tax#390, ws_net_profit#391, ws_sold_date_sk#392]
Condition : isnotnull(ws_bill_addr_sk#365)

(89) ReusedExchange [Reuses operator id: 116]
Output [28]: [d_date_sk#393, d_date_id#394, d_date#395, d_month_seq#396, d_week_seq#397, d_quarter_seq#398, d_year#399, d_dow#400, d_moy#401, d_dom#402, d_qoy#403, d_fy_year#404, d_fy_quarter_seq#405, d_fy_week_seq#406, d_day_name#407, d_quarter_name#408, d_holiday#409, d_weekend#410, d_following_holiday#411, d_first_dom#412, d_last_dom#413, d_same_day_ly#414, d_same_day_lq#415, d_current_day#416, d_current_week#417, d_current_month#418, d_current_quarter#419, d_current_year#420]

(90) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_sold_date_sk#392]
Right keys [1]: [d_date_sk#393]
Join condition: None

(91) HashAggregate [codegen id : 22]
Input [62]: [ws_sold_time_sk#359, ws_ship_date_sk#360, ws_item_sk#361, ws_bill_customer_sk#362, ws_bill_cdemo_sk#363, ws_bill_hdemo_sk#364, ws_bill_addr_sk#365, ws_ship_customer_sk#366, ws_ship_cdemo_sk#367, ws_ship_hdemo_sk#368, ws_ship_addr_sk#369, ws_web_page_sk#370, ws_web_site_sk#371, ws_ship_mode_sk#372, ws_warehouse_sk#373, ws_promo_sk#374, ws_order_number#375, ws_quantity#376, ws_wholesale_cost#377, ws_list_price#378, ws_sales_price#379, ws_ext_discount_amt#380, ws_ext_sales_price#381, ws_ext_wholesale_cost#382, ws_ext_list_price#383, ws_ext_tax#384, ws_coupon_amt#385, ws_ext_ship_cost#386, ws_net_paid#387, ws_net_paid_inc_tax#388, ws_net_paid_inc_ship#389, ws_net_paid_inc_ship_tax#390, ws_net_profit#391, ws_sold_date_sk#392, d_date_sk#393, d_date_id#394, d_date#395, d_month_seq#396, d_week_seq#397, d_quarter_seq#398, d_year#399, d_dow#400, d_moy#401, d_dom#402, d_qoy#403, d_fy_year#404, d_fy_quarter_seq#405, d_fy_week_seq#406, d_day_name#407, d_quarter_name#408, d_holiday#409, d_weekend#410, d_following_holiday#411, d_first_dom#412, d_last_dom#413, d_same_day_ly#414, d_same_day_lq#415, d_current_day#416, d_current_week#417, d_current_month#418, d_current_quarter#419, d_current_year#420]
Keys [3]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#381))]
Aggregate Attributes [1]: [sum#421]
Results [4]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399, sum#422]

(92) Project [codegen id : 22]
Output [4]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399, sum#422 AS _pushedexpression#423]
Input [4]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399, sum#422]

(93) HashAggregate [codegen id : 22]
Input [4]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399, _pushedexpression#423]
Keys [3]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399]
Functions: []
Aggregate Attributes: []
Results [3]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399]

(94) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#424, ca_county#425]

(95) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_bill_addr_sk#365]
Right keys [1]: [ca_address_sk#424]
Join condition: None

(96) Project [codegen id : 22]
Output [3]: [d_qoy#403, d_year#399, ca_county#425]
Input [5]: [ws_bill_addr_sk#365, d_qoy#403, d_year#399, ca_address_sk#424, ca_county#425]

(97) HashAggregate [codegen id : 22]
Input [3]: [d_qoy#403, d_year#399, ca_county#425]
Keys [3]: [ca_county#425, d_qoy#403, d_year#399]
Functions [1]: [partial_sum(_pushedexpression#426)]
Aggregate Attributes [2]: [sum#427, isEmpty#428]
Results [5]: [ca_county#425, d_qoy#403, d_year#399, sum#429, isEmpty#430]

(98) Exchange
Input [5]: [ca_county#425, d_qoy#403, d_year#399, sum#429, isEmpty#430]
Arguments: hashpartitioning(ca_county#425, d_qoy#403, d_year#399, 5), ENSURE_REQUIREMENTS, [id=#431]

(99) HashAggregate [codegen id : 23]
Input [5]: [ca_county#425, d_qoy#403, d_year#399, sum#429, isEmpty#430]
Keys [3]: [ca_county#425, d_qoy#403, d_year#399]
Functions [1]: [sum(_pushedexpression#426)]
Aggregate Attributes [1]: [sum(_pushedexpression#426)#281]
Results [2]: [ca_county#425, cast(sum(_pushedexpression#426)#281 as decimal(17,2)) AS web_sales#432]

(100) BroadcastExchange
Input [2]: [ca_county#425, web_sales#432]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#433]

(101) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#274]
Right keys [1]: [ca_county#425]
Join condition: (CASE WHEN (web_sales#357 > 0.00) THEN CheckOverflow((promote_precision(web_sales#432) / promote_precision(web_sales#357)), DecimalType(37,20)) END > CASE WHEN (store_sales#141 > 0.00) THEN CheckOverflow((promote_precision(store_sales#206) / promote_precision(store_sales#141)), DecimalType(37,20)) END)

(102) Project [codegen id : 24]
Output [6]: [ca_county#63, d_year#31, CheckOverflow((promote_precision(web_sales#357) / promote_precision(web_sales#282)), DecimalType(37,20)) AS web_q1_q2_increase#434, CheckOverflow((promote_precision(store_sales#141) / promote_precision(store_sales#77)), DecimalType(37,20)) AS store_q1_q2_increase#435, CheckOverflow((promote_precision(web_sales#432) / promote_precision(web_sales#357)), DecimalType(37,20)) AS web_q2_q3_increase#436, CheckOverflow((promote_precision(store_sales#206) / promote_precision(store_sales#141)), DecimalType(37,20)) AS store_q2_q3_increase#437]
Input [10]: [ca_county#63, d_year#31, store_sales#77, store_sales#141, store_sales#206, ca_county#274, web_sales#282, web_sales#357, ca_county#425, web_sales#432]

(103) Exchange
Input [6]: [ca_county#63, d_year#31, web_q1_q2_increase#434, store_q1_q2_increase#435, web_q2_q3_increase#436, store_q2_q3_increase#437]
Arguments: rangepartitioning(ca_county#63 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [id=#438]

(104) Sort [codegen id : 25]
Input [6]: [ca_county#63, d_year#31, web_q1_q2_increase#434, store_q1_q2_increase#435, web_q2_q3_increase#436, store_q2_q3_increase#437]
Arguments: [ca_county#63 ASC NULLS FIRST], true, 0

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#23 IN dynamicpruning#24
BroadcastExchange (108)
+- * Filter (107)
   +- * ColumnarToRow (106)
      +- Scan parquet default.date_dim (105)


(105) Scan parquet default.date_dim
Output [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(106) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]

(107) Filter [codegen id : 1]
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Condition : ((((isnotnull(d_qoy#35) AND isnotnull(d_year#31)) AND (d_qoy#35 = 1)) AND (d_year#31 = 2000)) AND isnotnull(d_date_sk#25))

(108) BroadcastExchange
Input [28]: [d_date_sk#25, d_date_id#26, d_date#27, d_month_seq#28, d_week_seq#29, d_quarter_seq#30, d_year#31, d_dow#32, d_moy#33, d_dom#34, d_qoy#35, d_fy_year#36, d_fy_quarter_seq#37, d_fy_week_seq#38, d_day_name#39, d_quarter_name#40, d_holiday#41, d_weekend#42, d_following_holiday#43, d_first_dom#44, d_last_dom#45, d_same_day_ly#46, d_same_day_lq#47, d_current_day#48, d_current_week#49, d_current_month#50, d_current_quarter#51, d_current_year#52]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#439]

Subquery:2 Hosting operator id = 20 Hosting Expression = ss_sold_date_sk#100 IN dynamicpruning#101
BroadcastExchange (112)
+- * Filter (111)
   +- * ColumnarToRow (110)
      +- Scan parquet default.date_dim (109)


(109) Scan parquet default.date_dim
Output [28]: [d_date_sk#102, d_date_id#103, d_date#104, d_month_seq#105, d_week_seq#106, d_quarter_seq#107, d_year#108, d_dow#109, d_moy#110, d_dom#111, d_qoy#112, d_fy_year#113, d_fy_quarter_seq#114, d_fy_week_seq#115, d_day_name#116, d_quarter_name#117, d_holiday#118, d_weekend#119, d_following_holiday#120, d_first_dom#121, d_last_dom#122, d_same_day_ly#123, d_same_day_lq#124, d_current_day#125, d_current_week#126, d_current_month#127, d_current_quarter#128, d_current_year#129]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(110) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#102, d_date_id#103, d_date#104, d_month_seq#105, d_week_seq#106, d_quarter_seq#107, d_year#108, d_dow#109, d_moy#110, d_dom#111, d_qoy#112, d_fy_year#113, d_fy_quarter_seq#114, d_fy_week_seq#115, d_day_name#116, d_quarter_name#117, d_holiday#118, d_weekend#119, d_following_holiday#120, d_first_dom#121, d_last_dom#122, d_same_day_ly#123, d_same_day_lq#124, d_current_day#125, d_current_week#126, d_current_month#127, d_current_quarter#128, d_current_year#129]

(111) Filter [codegen id : 1]
Input [28]: [d_date_sk#102, d_date_id#103, d_date#104, d_month_seq#105, d_week_seq#106, d_quarter_seq#107, d_year#108, d_dow#109, d_moy#110, d_dom#111, d_qoy#112, d_fy_year#113, d_fy_quarter_seq#114, d_fy_week_seq#115, d_day_name#116, d_quarter_name#117, d_holiday#118, d_weekend#119, d_following_holiday#120, d_first_dom#121, d_last_dom#122, d_same_day_ly#123, d_same_day_lq#124, d_current_day#125, d_current_week#126, d_current_month#127, d_current_quarter#128, d_current_year#129]
Condition : ((((isnotnull(d_qoy#112) AND isnotnull(d_year#108)) AND (d_qoy#112 = 2)) AND (d_year#108 = 2000)) AND isnotnull(d_date_sk#102))

(112) BroadcastExchange
Input [28]: [d_date_sk#102, d_date_id#103, d_date#104, d_month_seq#105, d_week_seq#106, d_quarter_seq#107, d_year#108, d_dow#109, d_moy#110, d_dom#111, d_qoy#112, d_fy_year#113, d_fy_quarter_seq#114, d_fy_week_seq#115, d_day_name#116, d_quarter_name#117, d_holiday#118, d_weekend#119, d_following_holiday#120, d_first_dom#121, d_last_dom#122, d_same_day_ly#123, d_same_day_lq#124, d_current_day#125, d_current_week#126, d_current_month#127, d_current_quarter#128, d_current_year#129]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#440]

Subquery:3 Hosting operator id = 36 Hosting Expression = ss_sold_date_sk#165 IN dynamicpruning#166
BroadcastExchange (116)
+- * Filter (115)
   +- * ColumnarToRow (114)
      +- Scan parquet default.date_dim (113)


(113) Scan parquet default.date_dim
Output [28]: [d_date_sk#167, d_date_id#168, d_date#169, d_month_seq#170, d_week_seq#171, d_quarter_seq#172, d_year#173, d_dow#174, d_moy#175, d_dom#176, d_qoy#177, d_fy_year#178, d_fy_quarter_seq#179, d_fy_week_seq#180, d_day_name#181, d_quarter_name#182, d_holiday#183, d_weekend#184, d_following_holiday#185, d_first_dom#186, d_last_dom#187, d_same_day_ly#188, d_same_day_lq#189, d_current_day#190, d_current_week#191, d_current_month#192, d_current_quarter#193, d_current_year#194]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(114) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#167, d_date_id#168, d_date#169, d_month_seq#170, d_week_seq#171, d_quarter_seq#172, d_year#173, d_dow#174, d_moy#175, d_dom#176, d_qoy#177, d_fy_year#178, d_fy_quarter_seq#179, d_fy_week_seq#180, d_day_name#181, d_quarter_name#182, d_holiday#183, d_weekend#184, d_following_holiday#185, d_first_dom#186, d_last_dom#187, d_same_day_ly#188, d_same_day_lq#189, d_current_day#190, d_current_week#191, d_current_month#192, d_current_quarter#193, d_current_year#194]

(115) Filter [codegen id : 1]
Input [28]: [d_date_sk#167, d_date_id#168, d_date#169, d_month_seq#170, d_week_seq#171, d_quarter_seq#172, d_year#173, d_dow#174, d_moy#175, d_dom#176, d_qoy#177, d_fy_year#178, d_fy_quarter_seq#179, d_fy_week_seq#180, d_day_name#181, d_quarter_name#182, d_holiday#183, d_weekend#184, d_following_holiday#185, d_first_dom#186, d_last_dom#187, d_same_day_ly#188, d_same_day_lq#189, d_current_day#190, d_current_week#191, d_current_month#192, d_current_quarter#193, d_current_year#194]
Condition : ((((isnotnull(d_qoy#177) AND isnotnull(d_year#173)) AND (d_qoy#177 = 3)) AND (d_year#173 = 2000)) AND isnotnull(d_date_sk#167))

(116) BroadcastExchange
Input [28]: [d_date_sk#167, d_date_id#168, d_date#169, d_month_seq#170, d_week_seq#171, d_quarter_seq#172, d_year#173, d_dow#174, d_moy#175, d_dom#176, d_qoy#177, d_fy_year#178, d_fy_quarter_seq#179, d_fy_week_seq#180, d_day_name#181, d_quarter_name#182, d_holiday#183, d_weekend#184, d_following_holiday#185, d_first_dom#186, d_last_dom#187, d_same_day_ly#188, d_same_day_lq#189, d_current_day#190, d_current_week#191, d_current_month#192, d_current_quarter#193, d_current_year#194]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#441]

Subquery:4 Hosting operator id = 53 Hosting Expression = ws_sold_date_sk#241 IN dynamicpruning#24

Subquery:5 Hosting operator id = 69 Hosting Expression = ws_sold_date_sk#317 IN dynamicpruning#101

Subquery:6 Hosting operator id = 86 Hosting Expression = ws_sold_date_sk#392 IN dynamicpruning#166


