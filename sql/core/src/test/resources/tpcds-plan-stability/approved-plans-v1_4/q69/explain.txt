== Physical Plan ==
TakeOrderedAndProject (45)
+- * HashAggregate (44)
   +- Exchange (43)
      +- * HashAggregate (42)
         +- * Project (41)
            +- * BroadcastHashJoin Inner BuildRight (40)
               :- * Project (35)
               :  +- * BroadcastHashJoin Inner BuildRight (34)
               :     :- * Project (28)
               :     :  +- * BroadcastHashJoin LeftAnti BuildRight (27)
               :     :     :- * BroadcastHashJoin LeftAnti BuildRight (19)
               :     :     :  :- * BroadcastHashJoin LeftSemi BuildRight (11)
               :     :     :  :  :- * Filter (3)
               :     :     :  :  :  +- * ColumnarToRow (2)
               :     :     :  :  :     +- Scan parquet default.customer (1)
               :     :     :  :  +- BroadcastExchange (10)
               :     :     :  :     +- * HashAggregate (9)
               :     :     :  :        +- * Project (8)
               :     :     :  :           +- * BroadcastHashJoin Inner BuildRight (7)
               :     :     :  :              :- * ColumnarToRow (5)
               :     :     :  :              :  +- Scan parquet default.store_sales (4)
               :     :     :  :              +- ReusedExchange (6)
               :     :     :  +- BroadcastExchange (18)
               :     :     :     +- * HashAggregate (17)
               :     :     :        +- * Project (16)
               :     :     :           +- * BroadcastHashJoin Inner BuildRight (15)
               :     :     :              :- * ColumnarToRow (13)
               :     :     :              :  +- Scan parquet default.web_sales (12)
               :     :     :              +- ReusedExchange (14)
               :     :     +- BroadcastExchange (26)
               :     :        +- * HashAggregate (25)
               :     :           +- * Project (24)
               :     :              +- * BroadcastHashJoin Inner BuildRight (23)
               :     :                 :- * ColumnarToRow (21)
               :     :                 :  +- Scan parquet default.catalog_sales (20)
               :     :                 +- ReusedExchange (22)
               :     +- BroadcastExchange (33)
               :        +- * Project (32)
               :           +- * Filter (31)
               :              +- * ColumnarToRow (30)
               :                 +- Scan parquet default.customer_address (29)
               +- BroadcastExchange (39)
                  +- * Filter (38)
                     +- * ColumnarToRow (37)
                        +- Scan parquet default.customer_demographics (36)


(1) Scan parquet default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) ColumnarToRow [codegen id : 9]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(3) Filter [codegen id : 9]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : (isnotnull(c_current_addr_sk#3) AND isnotnull(c_current_cdemo_sk#2))

(4) Scan parquet default.store_sales
Output [2]: [ss_customer_sk#4, ss_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#5), dynamicpruningexpression(ss_sold_date_sk#5 IN dynamicpruning#6)]
ReadSchema: struct<ss_customer_sk:int>

(5) ColumnarToRow [codegen id : 2]
Input [2]: [ss_customer_sk#4, ss_sold_date_sk#5]

(6) ReusedExchange [Reuses operator id: 50]
Output [1]: [d_date_sk#7]

(7) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_sold_date_sk#5]
Right keys [1]: [d_date_sk#7]
Join condition: None

(8) Project [codegen id : 2]
Output [1]: [ss_customer_sk#4]
Input [3]: [ss_customer_sk#4, ss_sold_date_sk#5, d_date_sk#7]

(9) HashAggregate [codegen id : 2]
Input [1]: [ss_customer_sk#4]
Keys [1]: [ss_customer_sk#4]
Functions: []
Aggregate Attributes: []
Results [1]: [ss_customer_sk#4]

(10) BroadcastExchange
Input [1]: [ss_customer_sk#4]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#8]

(11) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ss_customer_sk#4]
Join condition: None

(12) Scan parquet default.web_sales
Output [2]: [ws_bill_customer_sk#9, ws_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#10), dynamicpruningexpression(ws_sold_date_sk#10 IN dynamicpruning#6)]
ReadSchema: struct<ws_bill_customer_sk:int>

(13) ColumnarToRow [codegen id : 4]
Input [2]: [ws_bill_customer_sk#9, ws_sold_date_sk#10]

(14) ReusedExchange [Reuses operator id: 50]
Output [1]: [d_date_sk#11]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ws_sold_date_sk#10]
Right keys [1]: [d_date_sk#11]
Join condition: None

(16) Project [codegen id : 4]
Output [1]: [ws_bill_customer_sk#9]
Input [3]: [ws_bill_customer_sk#9, ws_sold_date_sk#10, d_date_sk#11]

(17) HashAggregate [codegen id : 4]
Input [1]: [ws_bill_customer_sk#9]
Keys [1]: [ws_bill_customer_sk#9]
Functions: []
Aggregate Attributes: []
Results [1]: [ws_bill_customer_sk#9]

(18) BroadcastExchange
Input [1]: [ws_bill_customer_sk#9]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#12]

(19) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ws_bill_customer_sk#9]
Join condition: None

(20) Scan parquet default.catalog_sales
Output [2]: [cs_ship_customer_sk#13, cs_sold_date_sk#14]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#14), dynamicpruningexpression(cs_sold_date_sk#14 IN dynamicpruning#6)]
ReadSchema: struct<cs_ship_customer_sk:int>

(21) ColumnarToRow [codegen id : 6]
Input [2]: [cs_ship_customer_sk#13, cs_sold_date_sk#14]

(22) ReusedExchange [Reuses operator id: 50]
Output [1]: [d_date_sk#15]

(23) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_sold_date_sk#14]
Right keys [1]: [d_date_sk#15]
Join condition: None

(24) Project [codegen id : 6]
Output [1]: [cs_ship_customer_sk#13]
Input [3]: [cs_ship_customer_sk#13, cs_sold_date_sk#14, d_date_sk#15]

(25) HashAggregate [codegen id : 6]
Input [1]: [cs_ship_customer_sk#13]
Keys [1]: [cs_ship_customer_sk#13]
Functions: []
Aggregate Attributes: []
Results [1]: [cs_ship_customer_sk#13]

(26) BroadcastExchange
Input [1]: [cs_ship_customer_sk#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#16]

(27) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [cs_ship_customer_sk#13]
Join condition: None

(28) Project [codegen id : 9]
Output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(29) Scan parquet default.customer_address
Output [2]: [ca_address_sk#17, ca_state#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_state, [GA,KY,NM]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(30) ColumnarToRow [codegen id : 7]
Input [2]: [ca_address_sk#17, ca_state#18]

(31) Filter [codegen id : 7]
Input [2]: [ca_address_sk#17, ca_state#18]
Condition : (ca_state#18 IN (KY,GA,NM) AND isnotnull(ca_address_sk#17))

(32) Project [codegen id : 7]
Output [1]: [ca_address_sk#17]
Input [2]: [ca_address_sk#17, ca_state#18]

(33) BroadcastExchange
Input [1]: [ca_address_sk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#19]

(34) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [c_current_addr_sk#3]
Right keys [1]: [ca_address_sk#17]
Join condition: None

(35) Project [codegen id : 9]
Output [1]: [c_current_cdemo_sk#2]
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#17]

(36) Scan parquet default.customer_demographics
Output [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string>

(37) ColumnarToRow [codegen id : 8]
Input [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]

(38) Filter [codegen id : 8]
Input [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Condition : isnotnull(cd_demo_sk#20)

(39) BroadcastExchange
Input [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#26]

(40) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [c_current_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#20]
Join condition: None

(41) Project [codegen id : 9]
Output [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Input [7]: [c_current_cdemo_sk#2, cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]

(42) HashAggregate [codegen id : 9]
Input [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Keys [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#27]
Results [6]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, count#28]

(43) Exchange
Input [6]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, count#28]
Arguments: hashpartitioning(cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, 5), ENSURE_REQUIREMENTS, [id=#29]

(44) HashAggregate [codegen id : 10]
Input [6]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, count#28]
Keys [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#30]
Results [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, count(1)#30 AS cnt1#31, cd_purchase_estimate#24, count(1)#30 AS cnt2#32, cd_credit_rating#25, count(1)#30 AS cnt3#33]

(45) TakeOrderedAndProject
Input [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cnt1#31, cd_purchase_estimate#24, cnt2#32, cd_credit_rating#25, cnt3#33]
Arguments: 100, [cd_gender#21 ASC NULLS FIRST, cd_marital_status#22 ASC NULLS FIRST, cd_education_status#23 ASC NULLS FIRST, cd_purchase_estimate#24 ASC NULLS FIRST, cd_credit_rating#25 ASC NULLS FIRST], [cd_gender#21, cd_marital_status#22, cd_education_status#23, cnt1#31, cd_purchase_estimate#24, cnt2#32, cd_credit_rating#25, cnt3#33]

===== Subqueries =====

Subquery:1 Hosting operator id = 4 Hosting Expression = ss_sold_date_sk#5 IN dynamicpruning#6
BroadcastExchange (50)
+- * Project (49)
   +- * Filter (48)
      +- * ColumnarToRow (47)
         +- Scan parquet default.date_dim (46)


(46) Scan parquet default.date_dim
Output [3]: [d_date_sk#7, d_year#34, d_moy#35]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,6), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(47) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#7, d_year#34, d_moy#35]

(48) Filter [codegen id : 1]
Input [3]: [d_date_sk#7, d_year#34, d_moy#35]
Condition : (((((isnotnull(d_year#34) AND isnotnull(d_moy#35)) AND (d_year#34 = 2001)) AND (d_moy#35 >= 4)) AND (d_moy#35 <= 6)) AND isnotnull(d_date_sk#7))

(49) Project [codegen id : 1]
Output [1]: [d_date_sk#7]
Input [3]: [d_date_sk#7, d_year#34, d_moy#35]

(50) BroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#36]

Subquery:2 Hosting operator id = 12 Hosting Expression = ws_sold_date_sk#10 IN dynamicpruning#6

Subquery:3 Hosting operator id = 20 Hosting Expression = cs_sold_date_sk#14 IN dynamicpruning#6


