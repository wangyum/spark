== Physical Plan ==
TakeOrderedAndProject (49)
+- * Project (48)
   +- * BroadcastHashJoin Inner BuildRight (47)
      :- * Project (32)
      :  +- * BroadcastHashJoin Inner BuildRight (31)
      :     :- * HashAggregate (16)
      :     :  +- Exchange (15)
      :     :     +- * HashAggregate (14)
      :     :        +- * Project (13)
      :     :           +- * BroadcastHashJoin Inner BuildRight (12)
      :     :              :- * Project (10)
      :     :              :  +- * HashAggregate (9)
      :     :              :     +- * BroadcastHashJoin Inner BuildRight (8)
      :     :              :        :- * Filter (3)
      :     :              :        :  +- * ColumnarToRow (2)
      :     :              :        :     +- Scan parquet default.store_returns (1)
      :     :              :        +- BroadcastExchange (7)
      :     :              :           +- * Filter (6)
      :     :              :              +- * ColumnarToRow (5)
      :     :              :                 +- Scan parquet default.item (4)
      :     :              +- ReusedExchange (11)
      :     +- BroadcastExchange (30)
      :        +- * HashAggregate (29)
      :           +- Exchange (28)
      :              +- * HashAggregate (27)
      :                 +- * Project (26)
      :                    +- * BroadcastHashJoin Inner BuildRight (25)
      :                       :- * Project (23)
      :                       :  +- * HashAggregate (22)
      :                       :     +- * BroadcastHashJoin Inner BuildRight (21)
      :                       :        :- * Filter (19)
      :                       :        :  +- * ColumnarToRow (18)
      :                       :        :     +- Scan parquet default.catalog_returns (17)
      :                       :        +- ReusedExchange (20)
      :                       +- ReusedExchange (24)
      +- BroadcastExchange (46)
         +- * HashAggregate (45)
            +- Exchange (44)
               +- * HashAggregate (43)
                  +- * Project (42)
                     +- * BroadcastHashJoin Inner BuildRight (41)
                        :- * Project (39)
                        :  +- * HashAggregate (38)
                        :     +- * BroadcastHashJoin Inner BuildRight (37)
                        :        :- * Filter (35)
                        :        :  +- * ColumnarToRow (34)
                        :        :     +- Scan parquet default.web_returns (33)
                        :        +- ReusedExchange (36)
                        +- ReusedExchange (40)


(1) Scan parquet default.store_returns
Output [20]: [sr_return_time_sk#1, sr_item_sk#2, sr_customer_sk#3, sr_cdemo_sk#4, sr_hdemo_sk#5, sr_addr_sk#6, sr_store_sk#7, sr_reason_sk#8, sr_ticket_number#9, sr_return_quantity#10, sr_return_amt#11, sr_return_tax#12, sr_return_amt_inc_tax#13, sr_fee#14, sr_return_ship_cost#15, sr_refunded_cash#16, sr_reversed_charge#17, sr_store_credit#18, sr_net_loss#19, sr_returned_date_sk#20]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#20), dynamicpruningexpression(sr_returned_date_sk#20 IN dynamicpruning#21)]
PushedFilters: [IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_return_time_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_cdemo_sk:int,sr_hdemo_sk:int,sr_addr_sk:int,sr_store_sk:int,sr_reason_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2),sr_return_tax:decimal(7,2),sr_return_amt_inc_tax:decimal(7,2),sr_fee:decimal(7,2),sr_return_ship_cost:decimal(7,2),sr_refunded_cash:decimal(7,2),sr_reversed_charge:decimal(7,2),sr_store_credit:decimal(7,2),sr_net_loss:decimal(7,2)>

(2) ColumnarToRow [codegen id : 5]
Input [20]: [sr_return_time_sk#1, sr_item_sk#2, sr_customer_sk#3, sr_cdemo_sk#4, sr_hdemo_sk#5, sr_addr_sk#6, sr_store_sk#7, sr_reason_sk#8, sr_ticket_number#9, sr_return_quantity#10, sr_return_amt#11, sr_return_tax#12, sr_return_amt_inc_tax#13, sr_fee#14, sr_return_ship_cost#15, sr_refunded_cash#16, sr_reversed_charge#17, sr_store_credit#18, sr_net_loss#19, sr_returned_date_sk#20]

(3) Filter [codegen id : 5]
Input [20]: [sr_return_time_sk#1, sr_item_sk#2, sr_customer_sk#3, sr_cdemo_sk#4, sr_hdemo_sk#5, sr_addr_sk#6, sr_store_sk#7, sr_reason_sk#8, sr_ticket_number#9, sr_return_quantity#10, sr_return_amt#11, sr_return_tax#12, sr_return_amt_inc_tax#13, sr_fee#14, sr_return_ship_cost#15, sr_refunded_cash#16, sr_reversed_charge#17, sr_store_credit#18, sr_net_loss#19, sr_returned_date_sk#20]
Condition : isnotnull(sr_item_sk#2)

(4) Scan parquet default.item
Output [22]: [i_item_sk#22, i_item_id#23, i_rec_start_date#24, i_rec_end_date#25, i_item_desc#26, i_current_price#27, i_wholesale_cost#28, i_brand_id#29, i_brand#30, i_class_id#31, i_class#32, i_category_id#33, i_category#34, i_manufact_id#35, i_manufact#36, i_size#37, i_formulation#38, i_color#39, i_units#40, i_container#41, i_manager_id#42, i_product_name#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(5) ColumnarToRow [codegen id : 1]
Input [22]: [i_item_sk#22, i_item_id#23, i_rec_start_date#24, i_rec_end_date#25, i_item_desc#26, i_current_price#27, i_wholesale_cost#28, i_brand_id#29, i_brand#30, i_class_id#31, i_class#32, i_category_id#33, i_category#34, i_manufact_id#35, i_manufact#36, i_size#37, i_formulation#38, i_color#39, i_units#40, i_container#41, i_manager_id#42, i_product_name#43]

(6) Filter [codegen id : 1]
Input [22]: [i_item_sk#22, i_item_id#23, i_rec_start_date#24, i_rec_end_date#25, i_item_desc#26, i_current_price#27, i_wholesale_cost#28, i_brand_id#29, i_brand#30, i_class_id#31, i_class#32, i_category_id#33, i_category#34, i_manufact_id#35, i_manufact#36, i_size#37, i_formulation#38, i_color#39, i_units#40, i_container#41, i_manager_id#42, i_product_name#43]
Condition : (isnotnull(i_item_sk#22) AND isnotnull(i_item_id#23))

(7) BroadcastExchange
Input [22]: [i_item_sk#22, i_item_id#23, i_rec_start_date#24, i_rec_end_date#25, i_item_desc#26, i_current_price#27, i_wholesale_cost#28, i_brand_id#29, i_brand#30, i_class_id#31, i_class#32, i_category_id#33, i_category#34, i_manufact_id#35, i_manufact#36, i_size#37, i_formulation#38, i_color#39, i_units#40, i_container#41, i_manager_id#42, i_product_name#43]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#44]

(8) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [sr_item_sk#2]
Right keys [1]: [i_item_sk#22]
Join condition: None

(9) HashAggregate [codegen id : 5]
Input [42]: [sr_return_time_sk#1, sr_item_sk#2, sr_customer_sk#3, sr_cdemo_sk#4, sr_hdemo_sk#5, sr_addr_sk#6, sr_store_sk#7, sr_reason_sk#8, sr_ticket_number#9, sr_return_quantity#10, sr_return_amt#11, sr_return_tax#12, sr_return_amt_inc_tax#13, sr_fee#14, sr_return_ship_cost#15, sr_refunded_cash#16, sr_reversed_charge#17, sr_store_credit#18, sr_net_loss#19, sr_returned_date_sk#20, i_item_sk#22, i_item_id#23, i_rec_start_date#24, i_rec_end_date#25, i_item_desc#26, i_current_price#27, i_wholesale_cost#28, i_brand_id#29, i_brand#30, i_class_id#31, i_class#32, i_category_id#33, i_category#34, i_manufact_id#35, i_manufact#36, i_size#37, i_formulation#38, i_color#39, i_units#40, i_container#41, i_manager_id#42, i_product_name#43]
Keys [2]: [sr_returned_date_sk#20, i_item_id#23]
Functions [1]: [partial_sum(sr_return_quantity#10)]
Aggregate Attributes [1]: [sum#45]
Results [3]: [sr_returned_date_sk#20, i_item_id#23, sum#46]

(10) Project [codegen id : 5]
Output [3]: [sr_returned_date_sk#20, i_item_id#23, sum#46 AS _pushedexpression#47]
Input [3]: [sr_returned_date_sk#20, i_item_id#23, sum#46]

(11) ReusedExchange [Reuses operator id: 67]
Output [1]: [d_date_sk#48]

(12) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [sr_returned_date_sk#20]
Right keys [1]: [d_date_sk#48]
Join condition: None

(13) Project [codegen id : 5]
Output [2]: [i_item_id#23, _pushedexpression#47]
Input [4]: [sr_returned_date_sk#20, i_item_id#23, _pushedexpression#47, d_date_sk#48]

(14) HashAggregate [codegen id : 5]
Input [2]: [i_item_id#23, _pushedexpression#47]
Keys [1]: [i_item_id#23]
Functions [1]: [partial_sum(_pushedexpression#47)]
Aggregate Attributes [1]: [sum#49]
Results [2]: [i_item_id#23, sum#50]

(15) Exchange
Input [2]: [i_item_id#23, sum#50]
Arguments: hashpartitioning(i_item_id#23, 5), ENSURE_REQUIREMENTS, [id=#51]

(16) HashAggregate [codegen id : 18]
Input [2]: [i_item_id#23, sum#50]
Keys [1]: [i_item_id#23]
Functions [1]: [sum(_pushedexpression#47)]
Aggregate Attributes [1]: [sum(_pushedexpression#47)#52]
Results [2]: [i_item_id#23 AS item_id#53, sum(_pushedexpression#47)#52 AS sr_item_qty#54]

(17) Scan parquet default.catalog_returns
Output [27]: [cr_returned_time_sk#55, cr_item_sk#56, cr_refunded_customer_sk#57, cr_refunded_cdemo_sk#58, cr_refunded_hdemo_sk#59, cr_refunded_addr_sk#60, cr_returning_customer_sk#61, cr_returning_cdemo_sk#62, cr_returning_hdemo_sk#63, cr_returning_addr_sk#64, cr_call_center_sk#65, cr_catalog_page_sk#66, cr_ship_mode_sk#67, cr_warehouse_sk#68, cr_reason_sk#69, cr_order_number#70, cr_return_quantity#71, cr_return_amount#72, cr_return_tax#73, cr_return_amt_inc_tax#74, cr_fee#75, cr_return_ship_cost#76, cr_refunded_cash#77, cr_reversed_charge#78, cr_store_credit#79, cr_net_loss#80, cr_returned_date_sk#81]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#81), dynamicpruningexpression(cr_returned_date_sk#81 IN dynamicpruning#21)]
PushedFilters: [IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_returned_time_sk:int,cr_item_sk:int,cr_refunded_customer_sk:int,cr_refunded_cdemo_sk:int,cr_refunded_hdemo_sk:int,cr_refunded_addr_sk:int,cr_returning_customer_sk:int,cr_returning_cdemo_sk:int,cr_returning_hdemo_sk:int,cr_returning_addr_sk:int,cr_call_center_sk:int,cr_catalog_page_sk:int,cr_ship_mode_sk:int,cr_warehouse_sk:int,cr_reason_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2),cr_return_tax:decimal(7,2),cr_return_amt_inc_tax:decimal(7,2),cr_fee:decimal(7,2),cr_return_ship_cost:decimal(7,2),cr_refunded_cash:decimal(7,2),cr_reversed_charge:decimal(7,2),cr_store_credit:decimal(7,2),cr_net_loss:decimal(7,2)>

(18) ColumnarToRow [codegen id : 10]
Input [27]: [cr_returned_time_sk#55, cr_item_sk#56, cr_refunded_customer_sk#57, cr_refunded_cdemo_sk#58, cr_refunded_hdemo_sk#59, cr_refunded_addr_sk#60, cr_returning_customer_sk#61, cr_returning_cdemo_sk#62, cr_returning_hdemo_sk#63, cr_returning_addr_sk#64, cr_call_center_sk#65, cr_catalog_page_sk#66, cr_ship_mode_sk#67, cr_warehouse_sk#68, cr_reason_sk#69, cr_order_number#70, cr_return_quantity#71, cr_return_amount#72, cr_return_tax#73, cr_return_amt_inc_tax#74, cr_fee#75, cr_return_ship_cost#76, cr_refunded_cash#77, cr_reversed_charge#78, cr_store_credit#79, cr_net_loss#80, cr_returned_date_sk#81]

(19) Filter [codegen id : 10]
Input [27]: [cr_returned_time_sk#55, cr_item_sk#56, cr_refunded_customer_sk#57, cr_refunded_cdemo_sk#58, cr_refunded_hdemo_sk#59, cr_refunded_addr_sk#60, cr_returning_customer_sk#61, cr_returning_cdemo_sk#62, cr_returning_hdemo_sk#63, cr_returning_addr_sk#64, cr_call_center_sk#65, cr_catalog_page_sk#66, cr_ship_mode_sk#67, cr_warehouse_sk#68, cr_reason_sk#69, cr_order_number#70, cr_return_quantity#71, cr_return_amount#72, cr_return_tax#73, cr_return_amt_inc_tax#74, cr_fee#75, cr_return_ship_cost#76, cr_refunded_cash#77, cr_reversed_charge#78, cr_store_credit#79, cr_net_loss#80, cr_returned_date_sk#81]
Condition : isnotnull(cr_item_sk#56)

(20) ReusedExchange [Reuses operator id: 7]
Output [22]: [i_item_sk#82, i_item_id#83, i_rec_start_date#84, i_rec_end_date#85, i_item_desc#86, i_current_price#87, i_wholesale_cost#88, i_brand_id#89, i_brand#90, i_class_id#91, i_class#92, i_category_id#93, i_category#94, i_manufact_id#95, i_manufact#96, i_size#97, i_formulation#98, i_color#99, i_units#100, i_container#101, i_manager_id#102, i_product_name#103]

(21) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cr_item_sk#56]
Right keys [1]: [i_item_sk#82]
Join condition: None

(22) HashAggregate [codegen id : 10]
Input [49]: [cr_returned_time_sk#55, cr_item_sk#56, cr_refunded_customer_sk#57, cr_refunded_cdemo_sk#58, cr_refunded_hdemo_sk#59, cr_refunded_addr_sk#60, cr_returning_customer_sk#61, cr_returning_cdemo_sk#62, cr_returning_hdemo_sk#63, cr_returning_addr_sk#64, cr_call_center_sk#65, cr_catalog_page_sk#66, cr_ship_mode_sk#67, cr_warehouse_sk#68, cr_reason_sk#69, cr_order_number#70, cr_return_quantity#71, cr_return_amount#72, cr_return_tax#73, cr_return_amt_inc_tax#74, cr_fee#75, cr_return_ship_cost#76, cr_refunded_cash#77, cr_reversed_charge#78, cr_store_credit#79, cr_net_loss#80, cr_returned_date_sk#81, i_item_sk#82, i_item_id#83, i_rec_start_date#84, i_rec_end_date#85, i_item_desc#86, i_current_price#87, i_wholesale_cost#88, i_brand_id#89, i_brand#90, i_class_id#91, i_class#92, i_category_id#93, i_category#94, i_manufact_id#95, i_manufact#96, i_size#97, i_formulation#98, i_color#99, i_units#100, i_container#101, i_manager_id#102, i_product_name#103]
Keys [2]: [cr_returned_date_sk#81, i_item_id#83]
Functions [1]: [partial_sum(cr_return_quantity#71)]
Aggregate Attributes [1]: [sum#104]
Results [3]: [cr_returned_date_sk#81, i_item_id#83, sum#105]

(23) Project [codegen id : 10]
Output [3]: [cr_returned_date_sk#81, i_item_id#83, sum#105 AS _pushedexpression#106]
Input [3]: [cr_returned_date_sk#81, i_item_id#83, sum#105]

(24) ReusedExchange [Reuses operator id: 67]
Output [1]: [d_date_sk#107]

(25) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cr_returned_date_sk#81]
Right keys [1]: [d_date_sk#107]
Join condition: None

(26) Project [codegen id : 10]
Output [2]: [i_item_id#83, _pushedexpression#106]
Input [4]: [cr_returned_date_sk#81, i_item_id#83, _pushedexpression#106, d_date_sk#107]

(27) HashAggregate [codegen id : 10]
Input [2]: [i_item_id#83, _pushedexpression#106]
Keys [1]: [i_item_id#83]
Functions [1]: [partial_sum(_pushedexpression#106)]
Aggregate Attributes [1]: [sum#108]
Results [2]: [i_item_id#83, sum#109]

(28) Exchange
Input [2]: [i_item_id#83, sum#109]
Arguments: hashpartitioning(i_item_id#83, 5), ENSURE_REQUIREMENTS, [id=#110]

(29) HashAggregate [codegen id : 11]
Input [2]: [i_item_id#83, sum#109]
Keys [1]: [i_item_id#83]
Functions [1]: [sum(_pushedexpression#106)]
Aggregate Attributes [1]: [sum(_pushedexpression#106)#111]
Results [2]: [i_item_id#83 AS item_id#112, sum(_pushedexpression#106)#111 AS cr_item_qty#113]

(30) BroadcastExchange
Input [2]: [item_id#112, cr_item_qty#113]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#114]

(31) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [item_id#53]
Right keys [1]: [item_id#112]
Join condition: None

(32) Project [codegen id : 18]
Output [3]: [item_id#53, sr_item_qty#54, cr_item_qty#113]
Input [4]: [item_id#53, sr_item_qty#54, item_id#112, cr_item_qty#113]

(33) Scan parquet default.web_returns
Output [24]: [wr_returned_time_sk#115, wr_item_sk#116, wr_refunded_customer_sk#117, wr_refunded_cdemo_sk#118, wr_refunded_hdemo_sk#119, wr_refunded_addr_sk#120, wr_returning_customer_sk#121, wr_returning_cdemo_sk#122, wr_returning_hdemo_sk#123, wr_returning_addr_sk#124, wr_web_page_sk#125, wr_reason_sk#126, wr_order_number#127, wr_return_quantity#128, wr_return_amt#129, wr_return_tax#130, wr_return_amt_inc_tax#131, wr_fee#132, wr_return_ship_cost#133, wr_refunded_cash#134, wr_reversed_charge#135, wr_account_credit#136, wr_net_loss#137, wr_returned_date_sk#138]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#138), dynamicpruningexpression(wr_returned_date_sk#138 IN dynamicpruning#21)]
PushedFilters: [IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_hdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_customer_sk:int,wr_returning_cdemo_sk:int,wr_returning_hdemo_sk:int,wr_returning_addr_sk:int,wr_web_page_sk:int,wr_reason_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2),wr_return_tax:decimal(7,2),wr_return_amt_inc_tax:decimal(7,2),wr_fee:decimal(7,2),wr_return_ship_cost:decimal(7,2),wr_refunded_cash:decimal(7,2),wr_reversed_charge:decimal(7,2),wr_account_credit:decimal(7,2),wr_net_loss:decimal(7,2)>

(34) ColumnarToRow [codegen id : 16]
Input [24]: [wr_returned_time_sk#115, wr_item_sk#116, wr_refunded_customer_sk#117, wr_refunded_cdemo_sk#118, wr_refunded_hdemo_sk#119, wr_refunded_addr_sk#120, wr_returning_customer_sk#121, wr_returning_cdemo_sk#122, wr_returning_hdemo_sk#123, wr_returning_addr_sk#124, wr_web_page_sk#125, wr_reason_sk#126, wr_order_number#127, wr_return_quantity#128, wr_return_amt#129, wr_return_tax#130, wr_return_amt_inc_tax#131, wr_fee#132, wr_return_ship_cost#133, wr_refunded_cash#134, wr_reversed_charge#135, wr_account_credit#136, wr_net_loss#137, wr_returned_date_sk#138]

(35) Filter [codegen id : 16]
Input [24]: [wr_returned_time_sk#115, wr_item_sk#116, wr_refunded_customer_sk#117, wr_refunded_cdemo_sk#118, wr_refunded_hdemo_sk#119, wr_refunded_addr_sk#120, wr_returning_customer_sk#121, wr_returning_cdemo_sk#122, wr_returning_hdemo_sk#123, wr_returning_addr_sk#124, wr_web_page_sk#125, wr_reason_sk#126, wr_order_number#127, wr_return_quantity#128, wr_return_amt#129, wr_return_tax#130, wr_return_amt_inc_tax#131, wr_fee#132, wr_return_ship_cost#133, wr_refunded_cash#134, wr_reversed_charge#135, wr_account_credit#136, wr_net_loss#137, wr_returned_date_sk#138]
Condition : isnotnull(wr_item_sk#116)

(36) ReusedExchange [Reuses operator id: 7]
Output [22]: [i_item_sk#139, i_item_id#140, i_rec_start_date#141, i_rec_end_date#142, i_item_desc#143, i_current_price#144, i_wholesale_cost#145, i_brand_id#146, i_brand#147, i_class_id#148, i_class#149, i_category_id#150, i_category#151, i_manufact_id#152, i_manufact#153, i_size#154, i_formulation#155, i_color#156, i_units#157, i_container#158, i_manager_id#159, i_product_name#160]

(37) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [wr_item_sk#116]
Right keys [1]: [i_item_sk#139]
Join condition: None

(38) HashAggregate [codegen id : 16]
Input [46]: [wr_returned_time_sk#115, wr_item_sk#116, wr_refunded_customer_sk#117, wr_refunded_cdemo_sk#118, wr_refunded_hdemo_sk#119, wr_refunded_addr_sk#120, wr_returning_customer_sk#121, wr_returning_cdemo_sk#122, wr_returning_hdemo_sk#123, wr_returning_addr_sk#124, wr_web_page_sk#125, wr_reason_sk#126, wr_order_number#127, wr_return_quantity#128, wr_return_amt#129, wr_return_tax#130, wr_return_amt_inc_tax#131, wr_fee#132, wr_return_ship_cost#133, wr_refunded_cash#134, wr_reversed_charge#135, wr_account_credit#136, wr_net_loss#137, wr_returned_date_sk#138, i_item_sk#139, i_item_id#140, i_rec_start_date#141, i_rec_end_date#142, i_item_desc#143, i_current_price#144, i_wholesale_cost#145, i_brand_id#146, i_brand#147, i_class_id#148, i_class#149, i_category_id#150, i_category#151, i_manufact_id#152, i_manufact#153, i_size#154, i_formulation#155, i_color#156, i_units#157, i_container#158, i_manager_id#159, i_product_name#160]
Keys [2]: [wr_returned_date_sk#138, i_item_id#140]
Functions [1]: [partial_sum(wr_return_quantity#128)]
Aggregate Attributes [1]: [sum#161]
Results [3]: [wr_returned_date_sk#138, i_item_id#140, sum#162]

(39) Project [codegen id : 16]
Output [3]: [wr_returned_date_sk#138, i_item_id#140, sum#162 AS _pushedexpression#163]
Input [3]: [wr_returned_date_sk#138, i_item_id#140, sum#162]

(40) ReusedExchange [Reuses operator id: 67]
Output [1]: [d_date_sk#164]

(41) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [wr_returned_date_sk#138]
Right keys [1]: [d_date_sk#164]
Join condition: None

(42) Project [codegen id : 16]
Output [2]: [i_item_id#140, _pushedexpression#163]
Input [4]: [wr_returned_date_sk#138, i_item_id#140, _pushedexpression#163, d_date_sk#164]

(43) HashAggregate [codegen id : 16]
Input [2]: [i_item_id#140, _pushedexpression#163]
Keys [1]: [i_item_id#140]
Functions [1]: [partial_sum(_pushedexpression#163)]
Aggregate Attributes [1]: [sum#165]
Results [2]: [i_item_id#140, sum#166]

(44) Exchange
Input [2]: [i_item_id#140, sum#166]
Arguments: hashpartitioning(i_item_id#140, 5), ENSURE_REQUIREMENTS, [id=#167]

(45) HashAggregate [codegen id : 17]
Input [2]: [i_item_id#140, sum#166]
Keys [1]: [i_item_id#140]
Functions [1]: [sum(_pushedexpression#163)]
Aggregate Attributes [1]: [sum(_pushedexpression#163)#168]
Results [2]: [i_item_id#140 AS item_id#169, sum(_pushedexpression#163)#168 AS wr_item_qty#170]

(46) BroadcastExchange
Input [2]: [item_id#169, wr_item_qty#170]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#171]

(47) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [item_id#53]
Right keys [1]: [item_id#169]
Join condition: None

(48) Project [codegen id : 18]
Output [8]: [item_id#53, sr_item_qty#54, (((cast(sr_item_qty#54 as double) / cast(((sr_item_qty#54 + cr_item_qty#113) + wr_item_qty#170) as double)) / 3.0) * 100.0) AS sr_dev#172, cr_item_qty#113, (((cast(cr_item_qty#113 as double) / cast(((sr_item_qty#54 + cr_item_qty#113) + wr_item_qty#170) as double)) / 3.0) * 100.0) AS cr_dev#173, wr_item_qty#170, (((cast(wr_item_qty#170 as double) / cast(((sr_item_qty#54 + cr_item_qty#113) + wr_item_qty#170) as double)) / 3.0) * 100.0) AS wr_dev#174, CheckOverflow((promote_precision(cast(((sr_item_qty#54 + cr_item_qty#113) + wr_item_qty#170) as decimal(21,1))) / 3.0), DecimalType(27,6)) AS average#175]
Input [5]: [item_id#53, sr_item_qty#54, cr_item_qty#113, item_id#169, wr_item_qty#170]

(49) TakeOrderedAndProject
Input [8]: [item_id#53, sr_item_qty#54, sr_dev#172, cr_item_qty#113, cr_dev#173, wr_item_qty#170, wr_dev#174, average#175]
Arguments: 100, [item_id#53 ASC NULLS FIRST, sr_item_qty#54 ASC NULLS FIRST], [item_id#53, sr_item_qty#54, sr_dev#172, cr_item_qty#113, cr_dev#173, wr_item_qty#170, wr_dev#174, average#175]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = sr_returned_date_sk#20 IN dynamicpruning#21
BroadcastExchange (67)
+- * HashAggregate (66)
   +- * BroadcastHashJoin LeftSemi BuildRight (65)
      :- * Filter (52)
      :  +- * ColumnarToRow (51)
      :     +- Scan parquet default.date_dim (50)
      +- BroadcastExchange (64)
         +- * HashAggregate (63)
            +- * Project (62)
               +- * BroadcastHashJoin LeftSemi BuildRight (61)
                  :- * ColumnarToRow (54)
                  :  +- Scan parquet default.date_dim (53)
                  +- BroadcastExchange (60)
                     +- * HashAggregate (59)
                        +- * Project (58)
                           +- * Filter (57)
                              +- * ColumnarToRow (56)
                                 +- Scan parquet default.date_dim (55)


(50) Scan parquet default.date_dim
Output [28]: [d_date_sk#48, d_date_id#176, d_date#177, d_month_seq#178, d_week_seq#179, d_quarter_seq#180, d_year#181, d_dow#182, d_moy#183, d_dom#184, d_qoy#185, d_fy_year#186, d_fy_quarter_seq#187, d_fy_week_seq#188, d_day_name#189, d_quarter_name#190, d_holiday#191, d_weekend#192, d_following_holiday#193, d_first_dom#194, d_last_dom#195, d_same_day_ly#196, d_same_day_lq#197, d_current_day#198, d_current_week#199, d_current_month#200, d_current_quarter#201, d_current_year#202]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(51) ColumnarToRow [codegen id : 3]
Input [28]: [d_date_sk#48, d_date_id#176, d_date#177, d_month_seq#178, d_week_seq#179, d_quarter_seq#180, d_year#181, d_dow#182, d_moy#183, d_dom#184, d_qoy#185, d_fy_year#186, d_fy_quarter_seq#187, d_fy_week_seq#188, d_day_name#189, d_quarter_name#190, d_holiday#191, d_weekend#192, d_following_holiday#193, d_first_dom#194, d_last_dom#195, d_same_day_ly#196, d_same_day_lq#197, d_current_day#198, d_current_week#199, d_current_month#200, d_current_quarter#201, d_current_year#202]

(52) Filter [codegen id : 3]
Input [28]: [d_date_sk#48, d_date_id#176, d_date#177, d_month_seq#178, d_week_seq#179, d_quarter_seq#180, d_year#181, d_dow#182, d_moy#183, d_dom#184, d_qoy#185, d_fy_year#186, d_fy_quarter_seq#187, d_fy_week_seq#188, d_day_name#189, d_quarter_name#190, d_holiday#191, d_weekend#192, d_following_holiday#193, d_first_dom#194, d_last_dom#195, d_same_day_ly#196, d_same_day_lq#197, d_current_day#198, d_current_week#199, d_current_month#200, d_current_quarter#201, d_current_year#202]
Condition : isnotnull(d_date_sk#48)

(53) Scan parquet default.date_dim
Output [2]: [d_date#203, d_week_seq#204]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(54) ColumnarToRow [codegen id : 2]
Input [2]: [d_date#203, d_week_seq#204]

(55) Scan parquet default.date_dim
Output [2]: [d_date#205, d_week_seq#206]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(56) ColumnarToRow [codegen id : 1]
Input [2]: [d_date#205, d_week_seq#206]

(57) Filter [codegen id : 1]
Input [2]: [d_date#205, d_week_seq#206]
Condition : cast(d_date#205 as string) IN (2000-06-30,2000-09-27,2000-11-17)

(58) Project [codegen id : 1]
Output [1]: [d_week_seq#206]
Input [2]: [d_date#205, d_week_seq#206]

(59) HashAggregate [codegen id : 1]
Input [1]: [d_week_seq#206]
Keys [1]: [d_week_seq#206]
Functions: []
Aggregate Attributes: []
Results [1]: [d_week_seq#206]

(60) BroadcastExchange
Input [1]: [d_week_seq#206]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#207]

(61) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [d_week_seq#204]
Right keys [1]: [d_week_seq#206]
Join condition: None

(62) Project [codegen id : 2]
Output [1]: [d_date#203]
Input [2]: [d_date#203, d_week_seq#204]

(63) HashAggregate [codegen id : 2]
Input [1]: [d_date#203]
Keys [1]: [d_date#203]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date#203]

(64) BroadcastExchange
Input [1]: [d_date#203]
Arguments: HashedRelationBroadcastMode(List(input[0, date, true]),false), [id=#208]

(65) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [d_date#177]
Right keys [1]: [d_date#203]
Join condition: None

(66) HashAggregate [codegen id : 3]
Input [28]: [d_date_sk#48, d_date_id#176, d_date#177, d_month_seq#178, d_week_seq#179, d_quarter_seq#180, d_year#181, d_dow#182, d_moy#183, d_dom#184, d_qoy#185, d_fy_year#186, d_fy_quarter_seq#187, d_fy_week_seq#188, d_day_name#189, d_quarter_name#190, d_holiday#191, d_weekend#192, d_following_holiday#193, d_first_dom#194, d_last_dom#195, d_same_day_ly#196, d_same_day_lq#197, d_current_day#198, d_current_week#199, d_current_month#200, d_current_quarter#201, d_current_year#202]
Keys [1]: [d_date_sk#48]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#48]

(67) BroadcastExchange
Input [1]: [d_date_sk#48]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#209]

Subquery:2 Hosting operator id = 17 Hosting Expression = cr_returned_date_sk#81 IN dynamicpruning#21

Subquery:3 Hosting operator id = 33 Hosting Expression = wr_returned_date_sk#138 IN dynamicpruning#21


