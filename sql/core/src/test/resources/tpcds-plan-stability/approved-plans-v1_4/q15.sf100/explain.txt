== Physical Plan ==
TakeOrderedAndProject (29)
+- * HashAggregate (28)
   +- Exchange (27)
      +- * HashAggregate (26)
         +- * Project (25)
            +- * BroadcastHashJoin Inner BuildRight (24)
               :- * Project (22)
               :  +- * HashAggregate (21)
               :     +- * Project (20)
               :        +- * SortMergeJoin Inner (19)
               :           :- * Sort (13)
               :           :  +- Exchange (12)
               :           :     +- * SortMergeJoin Inner (11)
               :           :        :- * Sort (5)
               :           :        :  +- Exchange (4)
               :           :        :     +- * Filter (3)
               :           :        :        +- * ColumnarToRow (2)
               :           :        :           +- Scan parquet default.customer (1)
               :           :        +- * Sort (10)
               :           :           +- Exchange (9)
               :           :              +- * Filter (8)
               :           :                 +- * ColumnarToRow (7)
               :           :                    +- Scan parquet default.customer_address (6)
               :           +- * Sort (18)
               :              +- Exchange (17)
               :                 +- * Filter (16)
               :                    +- * ColumnarToRow (15)
               :                       +- Scan parquet default.catalog_sales (14)
               +- ReusedExchange (23)


(1) Scan parquet default.customer
Output [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(2) ColumnarToRow [codegen id : 1]
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]

(3) Filter [codegen id : 1]
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(c_current_addr_sk#5))

(4) Exchange
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Arguments: hashpartitioning(c_current_addr_sk#5, 5), ENSURE_REQUIREMENTS, [id=#19]

(5) Sort [codegen id : 2]
Input [18]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18]
Arguments: [c_current_addr_sk#5 ASC NULLS FIRST], false, 0

(6) Scan parquet default.customer_address
Output [13]: [ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_address_id:string,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string>

(7) ColumnarToRow [codegen id : 3]
Input [13]: [ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]

(8) Filter [codegen id : 3]
Input [13]: [ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Condition : isnotnull(ca_address_sk#20)

(9) Exchange
Input [13]: [ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Arguments: hashpartitioning(ca_address_sk#20, 5), ENSURE_REQUIREMENTS, [id=#33]

(10) Sort [codegen id : 4]
Input [13]: [ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Arguments: [ca_address_sk#20 ASC NULLS FIRST], false, 0

(11) SortMergeJoin [codegen id : 5]
Left keys [1]: [c_current_addr_sk#5]
Right keys [1]: [ca_address_sk#20]
Join condition: None

(12) Exchange
Input [31]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18, ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Arguments: hashpartitioning(c_customer_sk#1, 5), ENSURE_REQUIREMENTS, [id=#34]

(13) Sort [codegen id : 6]
Input [31]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18, ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Arguments: [c_customer_sk#1 ASC NULLS FIRST], false, 0

(14) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#68), dynamicpruningexpression(cs_sold_date_sk#68 IN dynamicpruning#69)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(15) ColumnarToRow [codegen id : 7]
Input [34]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68]

(16) Filter [codegen id : 7]
Input [34]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68]
Condition : isnotnull(cs_bill_customer_sk#37)

(17) Exchange
Input [34]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68]
Arguments: hashpartitioning(cs_bill_customer_sk#37, 5), ENSURE_REQUIREMENTS, [id=#70]

(18) Sort [codegen id : 8]
Input [34]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68]
Arguments: [cs_bill_customer_sk#37 ASC NULLS FIRST], false, 0

(19) SortMergeJoin [codegen id : 10]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [cs_bill_customer_sk#37]
Join condition: ((substr(ca_zip#29, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#28 IN (CA,WA,GA)) OR (cs_sales_price#55 > 500.00))

(20) Project [codegen id : 10]
Output [65]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68, c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18, ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Input [65]: [c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18, ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32, cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68]

(21) HashAggregate [codegen id : 10]
Input [65]: [cs_sold_time_sk#35, cs_ship_date_sk#36, cs_bill_customer_sk#37, cs_bill_cdemo_sk#38, cs_bill_hdemo_sk#39, cs_bill_addr_sk#40, cs_ship_customer_sk#41, cs_ship_cdemo_sk#42, cs_ship_hdemo_sk#43, cs_ship_addr_sk#44, cs_call_center_sk#45, cs_catalog_page_sk#46, cs_ship_mode_sk#47, cs_warehouse_sk#48, cs_item_sk#49, cs_promo_sk#50, cs_order_number#51, cs_quantity#52, cs_wholesale_cost#53, cs_list_price#54, cs_sales_price#55, cs_ext_discount_amt#56, cs_ext_sales_price#57, cs_ext_wholesale_cost#58, cs_ext_list_price#59, cs_ext_tax#60, cs_coupon_amt#61, cs_ext_ship_cost#62, cs_net_paid#63, cs_net_paid_inc_tax#64, cs_net_paid_inc_ship#65, cs_net_paid_inc_ship_tax#66, cs_net_profit#67, cs_sold_date_sk#68, c_customer_sk#1, c_customer_id#2, c_current_cdemo_sk#3, c_current_hdemo_sk#4, c_current_addr_sk#5, c_first_shipto_date_sk#6, c_first_sales_date_sk#7, c_salutation#8, c_first_name#9, c_last_name#10, c_preferred_cust_flag#11, c_birth_day#12, c_birth_month#13, c_birth_year#14, c_birth_country#15, c_login#16, c_email_address#17, c_last_review_date#18, ca_address_sk#20, ca_address_id#21, ca_street_number#22, ca_street_name#23, ca_street_type#24, ca_suite_number#25, ca_city#26, ca_county#27, ca_state#28, ca_zip#29, ca_country#30, ca_gmt_offset#31, ca_location_type#32]
Keys [2]: [cs_sold_date_sk#68, ca_zip#29]
Functions [1]: [partial_sum(UnscaledValue(cs_sales_price#55))]
Aggregate Attributes [1]: [sum#71]
Results [3]: [cs_sold_date_sk#68, ca_zip#29, sum#72]

(22) Project [codegen id : 10]
Output [3]: [cs_sold_date_sk#68, ca_zip#29, sum#72 AS _pushedexpression#73]
Input [3]: [cs_sold_date_sk#68, ca_zip#29, sum#72]

(23) ReusedExchange [Reuses operator id: 34]
Output [1]: [d_date_sk#74]

(24) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_sold_date_sk#68]
Right keys [1]: [d_date_sk#74]
Join condition: None

(25) Project [codegen id : 10]
Output [2]: [ca_zip#29, _pushedexpression#75]
Input [4]: [cs_sold_date_sk#68, ca_zip#29, _pushedexpression#73, d_date_sk#74]

(26) HashAggregate [codegen id : 10]
Input [2]: [ca_zip#29, _pushedexpression#75]
Keys [1]: [ca_zip#29]
Functions [1]: [partial_sum(_pushedexpression#75)]
Aggregate Attributes [2]: [sum#76, isEmpty#77]
Results [3]: [ca_zip#29, sum#78, isEmpty#79]

(27) Exchange
Input [3]: [ca_zip#29, sum#78, isEmpty#79]
Arguments: hashpartitioning(ca_zip#29, 5), ENSURE_REQUIREMENTS, [id=#80]

(28) HashAggregate [codegen id : 11]
Input [3]: [ca_zip#29, sum#78, isEmpty#79]
Keys [1]: [ca_zip#29]
Functions [1]: [sum(_pushedexpression#75)]
Aggregate Attributes [1]: [sum(_pushedexpression#75)#81]
Results [2]: [ca_zip#29, cast(sum(_pushedexpression#75)#81 as decimal(17,2)) AS sum(cs_sales_price)#82]

(29) TakeOrderedAndProject
Input [2]: [ca_zip#29, sum(cs_sales_price)#82]
Arguments: 100, [ca_zip#29 ASC NULLS FIRST], [ca_zip#29, sum(cs_sales_price)#82]

===== Subqueries =====

Subquery:1 Hosting operator id = 14 Hosting Expression = cs_sold_date_sk#68 IN dynamicpruning#69
BroadcastExchange (34)
+- * HashAggregate (33)
   +- * Filter (32)
      +- * ColumnarToRow (31)
         +- Scan parquet default.date_dim (30)


(30) Scan parquet default.date_dim
Output [28]: [d_date_sk#74, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(31) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#74, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]

(32) Filter [codegen id : 1]
Input [28]: [d_date_sk#74, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]
Condition : ((((isnotnull(d_qoy#92) AND isnotnull(d_year#88)) AND (d_qoy#92 = 2)) AND (d_year#88 = 2001)) AND isnotnull(d_date_sk#74))

(33) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#74, d_date_id#83, d_date#84, d_month_seq#85, d_week_seq#86, d_quarter_seq#87, d_year#88, d_dow#89, d_moy#90, d_dom#91, d_qoy#92, d_fy_year#93, d_fy_quarter_seq#94, d_fy_week_seq#95, d_day_name#96, d_quarter_name#97, d_holiday#98, d_weekend#99, d_following_holiday#100, d_first_dom#101, d_last_dom#102, d_same_day_ly#103, d_same_day_lq#104, d_current_day#105, d_current_week#106, d_current_month#107, d_current_quarter#108, d_current_year#109]
Keys [1]: [d_date_sk#74]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#74]

(34) BroadcastExchange
Input [1]: [d_date_sk#74]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#110]


