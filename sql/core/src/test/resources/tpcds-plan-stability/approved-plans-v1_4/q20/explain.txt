== Physical Plan ==
TakeOrderedAndProject (21)
+- * Project (20)
   +- Window (19)
      +- * Sort (18)
         +- Exchange (17)
            +- * HashAggregate (16)
               +- Exchange (15)
                  +- * HashAggregate (14)
                     +- * Project (13)
                        +- * BroadcastHashJoin Inner BuildRight (12)
                           :- * Project (10)
                           :  +- * HashAggregate (9)
                           :     +- * BroadcastHashJoin Inner BuildRight (8)
                           :        :- * Filter (3)
                           :        :  +- * ColumnarToRow (2)
                           :        :     +- Scan parquet default.catalog_sales (1)
                           :        +- BroadcastExchange (7)
                           :           +- * Filter (6)
                           :              +- * ColumnarToRow (5)
                           :                 +- Scan parquet default.item (4)
                           +- ReusedExchange (11)


(1) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#34), dynamicpruningexpression(cs_sold_date_sk#34 IN dynamicpruning#35)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [34]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34]

(3) Filter [codegen id : 3]
Input [34]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34]
Condition : isnotnull(cs_item_sk#15)

(4) Scan parquet default.item
Output [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_category, [Books                                             ,Home                                              ,Sports                                            ]), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(5) ColumnarToRow [codegen id : 1]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]

(6) Filter [codegen id : 1]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Condition : (i_category#48 IN (Sports                                            ,Books                                             ,Home                                              ) AND isnotnull(i_item_sk#36))

(7) BroadcastExchange
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#58]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [cs_item_sk#15]
Right keys [1]: [i_item_sk#36]
Join condition: None

(9) HashAggregate [codegen id : 3]
Input [56]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34, i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Keys [6]: [cs_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#23))]
Aggregate Attributes [1]: [sum#59]
Results [7]: [cs_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#60]

(10) Project [codegen id : 3]
Output [7]: [cs_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#60 AS _pushedexpression#61]
Input [7]: [cs_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#60]

(11) ReusedExchange [Reuses operator id: 26]
Output [1]: [d_date_sk#62]

(12) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [cs_sold_date_sk#34]
Right keys [1]: [d_date_sk#62]
Join condition: None

(13) Project [codegen id : 3]
Output [6]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#63]
Input [8]: [cs_sold_date_sk#34, i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#61, d_date_sk#62]

(14) HashAggregate [codegen id : 3]
Input [6]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, _pushedexpression#63]
Keys [5]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41]
Functions [1]: [partial_sum(_pushedexpression#63)]
Aggregate Attributes [2]: [sum#64, isEmpty#65]
Results [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#66, isEmpty#67]

(15) Exchange
Input [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#66, isEmpty#67]
Arguments: hashpartitioning(i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, 5), ENSURE_REQUIREMENTS, [id=#68]

(16) HashAggregate [codegen id : 4]
Input [7]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41, sum#66, isEmpty#67]
Keys [5]: [i_item_id#37, i_item_desc#40, i_category#48, i_class#46, i_current_price#41]
Functions [1]: [sum(_pushedexpression#63)]
Aggregate Attributes [1]: [sum(_pushedexpression#63)#69]
Results [8]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, cast(sum(_pushedexpression#63)#69 as decimal(17,2)) AS itemrevenue#70, cast(sum(_pushedexpression#63)#69 as decimal(17,2)) AS _w0#71, cast(sum(_pushedexpression#63)#69 as decimal(17,2)) AS _w1#72, i_item_id#37]

(17) Exchange
Input [8]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, _w0#71, _w1#72, i_item_id#37]
Arguments: hashpartitioning(i_class#46, 5), ENSURE_REQUIREMENTS, [id=#73]

(18) Sort [codegen id : 5]
Input [8]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, _w0#71, _w1#72, i_item_id#37]
Arguments: [i_class#46 ASC NULLS FIRST], false, 0

(19) Window
Input [8]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, _w0#71, _w1#72, i_item_id#37]
Arguments: [sum(_w1#72) windowspecdefinition(i_class#46, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#74], [i_class#46]

(20) Project [codegen id : 6]
Output [7]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#71) * 100.00), DecimalType(21,2)) as decimal(27,2))) / promote_precision(_we0#74)), DecimalType(38,17)) AS revenueratio#75, i_item_id#37]
Input [9]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, _w0#71, _w1#72, i_item_id#37, _we0#74]

(21) TakeOrderedAndProject
Input [7]: [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, revenueratio#75, i_item_id#37]
Arguments: 100, [i_category#48 ASC NULLS FIRST, i_class#46 ASC NULLS FIRST, i_item_id#37 ASC NULLS FIRST, i_item_desc#40 ASC NULLS FIRST, revenueratio#75 ASC NULLS FIRST], [i_item_desc#40, i_category#48, i_class#46, i_current_price#41, itemrevenue#70, revenueratio#75]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#34 IN dynamicpruning#35
BroadcastExchange (26)
+- * HashAggregate (25)
   +- * Filter (24)
      +- * ColumnarToRow (23)
         +- Scan parquet default.date_dim (22)


(22) Scan parquet default.date_dim
Output [28]: [d_date_sk#62, d_date_id#76, d_date#77, d_month_seq#78, d_week_seq#79, d_quarter_seq#80, d_year#81, d_dow#82, d_moy#83, d_dom#84, d_qoy#85, d_fy_year#86, d_fy_quarter_seq#87, d_fy_week_seq#88, d_day_name#89, d_quarter_name#90, d_holiday#91, d_weekend#92, d_following_holiday#93, d_first_dom#94, d_last_dom#95, d_same_day_ly#96, d_same_day_lq#97, d_current_day#98, d_current_week#99, d_current_month#100, d_current_quarter#101, d_current_year#102]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(23) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#62, d_date_id#76, d_date#77, d_month_seq#78, d_week_seq#79, d_quarter_seq#80, d_year#81, d_dow#82, d_moy#83, d_dom#84, d_qoy#85, d_fy_year#86, d_fy_quarter_seq#87, d_fy_week_seq#88, d_day_name#89, d_quarter_name#90, d_holiday#91, d_weekend#92, d_following_holiday#93, d_first_dom#94, d_last_dom#95, d_same_day_ly#96, d_same_day_lq#97, d_current_day#98, d_current_week#99, d_current_month#100, d_current_quarter#101, d_current_year#102]

(24) Filter [codegen id : 1]
Input [28]: [d_date_sk#62, d_date_id#76, d_date#77, d_month_seq#78, d_week_seq#79, d_quarter_seq#80, d_year#81, d_dow#82, d_moy#83, d_dom#84, d_qoy#85, d_fy_year#86, d_fy_quarter_seq#87, d_fy_week_seq#88, d_day_name#89, d_quarter_name#90, d_holiday#91, d_weekend#92, d_following_holiday#93, d_first_dom#94, d_last_dom#95, d_same_day_ly#96, d_same_day_lq#97, d_current_day#98, d_current_week#99, d_current_month#100, d_current_quarter#101, d_current_year#102]
Condition : (((isnotnull(d_date#77) AND (d_date#77 >= 1999-02-22)) AND (d_date#77 <= 1999-03-24)) AND isnotnull(d_date_sk#62))

(25) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#62, d_date_id#76, d_date#77, d_month_seq#78, d_week_seq#79, d_quarter_seq#80, d_year#81, d_dow#82, d_moy#83, d_dom#84, d_qoy#85, d_fy_year#86, d_fy_quarter_seq#87, d_fy_week_seq#88, d_day_name#89, d_quarter_name#90, d_holiday#91, d_weekend#92, d_following_holiday#93, d_first_dom#94, d_last_dom#95, d_same_day_ly#96, d_same_day_lq#97, d_current_day#98, d_current_week#99, d_current_month#100, d_current_quarter#101, d_current_year#102]
Keys [1]: [d_date_sk#62]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#62]

(26) BroadcastExchange
Input [1]: [d_date_sk#62]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#103]


