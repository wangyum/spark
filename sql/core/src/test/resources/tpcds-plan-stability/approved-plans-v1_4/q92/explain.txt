== Physical Plan ==
* HashAggregate (31)
+- Exchange (30)
   +- * HashAggregate (29)
      +- * Project (28)
         +- * BroadcastHashJoin Inner BuildRight (27)
            :- * HashAggregate (25)
            :  +- * Project (24)
            :     +- * HashAggregate (23)
            :        +- * Project (22)
            :           +- * BroadcastHashJoin Inner BuildRight (21)
            :              :- * BroadcastHashJoin Inner BuildRight (8)
            :              :  :- * Filter (3)
            :              :  :  +- * ColumnarToRow (2)
            :              :  :     +- Scan parquet default.web_sales (1)
            :              :  +- BroadcastExchange (7)
            :              :     +- * Filter (6)
            :              :        +- * ColumnarToRow (5)
            :              :           +- Scan parquet default.item (4)
            :              +- BroadcastExchange (20)
            :                 +- * Filter (19)
            :                    +- * HashAggregate (18)
            :                       +- Exchange (17)
            :                          +- * HashAggregate (16)
            :                             +- * Project (15)
            :                                +- * BroadcastHashJoin Inner BuildRight (14)
            :                                   :- * HashAggregate (12)
            :                                   :  +- * Filter (11)
            :                                   :     +- * ColumnarToRow (10)
            :                                   :        +- Scan parquet default.web_sales (9)
            :                                   +- ReusedExchange (13)
            +- ReusedExchange (26)


(1) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#35)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_ext_discount_amt)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 6]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]

(3) Filter [codegen id : 6]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Condition : (isnotnull(ws_item_sk#3) AND isnotnull(ws_ext_discount_amt#22))

(4) Scan parquet default.item
Output [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,350), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_rec_start_date:date,i_rec_end_date:date,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2),i_brand_id:int,i_brand:string,i_class_id:int,i_class:string,i_category_id:int,i_category:string,i_manufact_id:int,i_manufact:string,i_size:string,i_formulation:string,i_color:string,i_units:string,i_container:string,i_manager_id:int,i_product_name:string>

(5) ColumnarToRow [codegen id : 1]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]

(6) Filter [codegen id : 1]
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Condition : ((isnotnull(i_manufact_id#49) AND (i_manufact_id#49 = 350)) AND isnotnull(i_item_sk#36))

(7) BroadcastExchange
Input [22]: [i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#58]

(8) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_item_sk#3]
Right keys [1]: [i_item_sk#36]
Join condition: None

(9) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#59, ws_ship_date_sk#60, ws_item_sk#61, ws_bill_customer_sk#62, ws_bill_cdemo_sk#63, ws_bill_hdemo_sk#64, ws_bill_addr_sk#65, ws_ship_customer_sk#66, ws_ship_cdemo_sk#67, ws_ship_hdemo_sk#68, ws_ship_addr_sk#69, ws_web_page_sk#70, ws_web_site_sk#71, ws_ship_mode_sk#72, ws_warehouse_sk#73, ws_promo_sk#74, ws_order_number#75, ws_quantity#76, ws_wholesale_cost#77, ws_list_price#78, ws_sales_price#79, ws_ext_discount_amt#80, ws_ext_sales_price#81, ws_ext_wholesale_cost#82, ws_ext_list_price#83, ws_ext_tax#84, ws_coupon_amt#85, ws_ext_ship_cost#86, ws_net_paid#87, ws_net_paid_inc_tax#88, ws_net_paid_inc_ship#89, ws_net_paid_inc_ship_tax#90, ws_net_profit#91, ws_sold_date_sk#92]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#92), dynamicpruningexpression(ws_sold_date_sk#92 IN dynamicpruning#93)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(10) ColumnarToRow [codegen id : 3]
Input [34]: [ws_sold_time_sk#59, ws_ship_date_sk#60, ws_item_sk#61, ws_bill_customer_sk#62, ws_bill_cdemo_sk#63, ws_bill_hdemo_sk#64, ws_bill_addr_sk#65, ws_ship_customer_sk#66, ws_ship_cdemo_sk#67, ws_ship_hdemo_sk#68, ws_ship_addr_sk#69, ws_web_page_sk#70, ws_web_site_sk#71, ws_ship_mode_sk#72, ws_warehouse_sk#73, ws_promo_sk#74, ws_order_number#75, ws_quantity#76, ws_wholesale_cost#77, ws_list_price#78, ws_sales_price#79, ws_ext_discount_amt#80, ws_ext_sales_price#81, ws_ext_wholesale_cost#82, ws_ext_list_price#83, ws_ext_tax#84, ws_coupon_amt#85, ws_ext_ship_cost#86, ws_net_paid#87, ws_net_paid_inc_tax#88, ws_net_paid_inc_ship#89, ws_net_paid_inc_ship_tax#90, ws_net_profit#91, ws_sold_date_sk#92]

(11) Filter [codegen id : 3]
Input [34]: [ws_sold_time_sk#59, ws_ship_date_sk#60, ws_item_sk#61, ws_bill_customer_sk#62, ws_bill_cdemo_sk#63, ws_bill_hdemo_sk#64, ws_bill_addr_sk#65, ws_ship_customer_sk#66, ws_ship_cdemo_sk#67, ws_ship_hdemo_sk#68, ws_ship_addr_sk#69, ws_web_page_sk#70, ws_web_site_sk#71, ws_ship_mode_sk#72, ws_warehouse_sk#73, ws_promo_sk#74, ws_order_number#75, ws_quantity#76, ws_wholesale_cost#77, ws_list_price#78, ws_sales_price#79, ws_ext_discount_amt#80, ws_ext_sales_price#81, ws_ext_wholesale_cost#82, ws_ext_list_price#83, ws_ext_tax#84, ws_coupon_amt#85, ws_ext_ship_cost#86, ws_net_paid#87, ws_net_paid_inc_tax#88, ws_net_paid_inc_ship#89, ws_net_paid_inc_ship_tax#90, ws_net_profit#91, ws_sold_date_sk#92]
Condition : isnotnull(ws_item_sk#61)

(12) HashAggregate [codegen id : 3]
Input [34]: [ws_sold_time_sk#59, ws_ship_date_sk#60, ws_item_sk#61, ws_bill_customer_sk#62, ws_bill_cdemo_sk#63, ws_bill_hdemo_sk#64, ws_bill_addr_sk#65, ws_ship_customer_sk#66, ws_ship_cdemo_sk#67, ws_ship_hdemo_sk#68, ws_ship_addr_sk#69, ws_web_page_sk#70, ws_web_site_sk#71, ws_ship_mode_sk#72, ws_warehouse_sk#73, ws_promo_sk#74, ws_order_number#75, ws_quantity#76, ws_wholesale_cost#77, ws_list_price#78, ws_sales_price#79, ws_ext_discount_amt#80, ws_ext_sales_price#81, ws_ext_wholesale_cost#82, ws_ext_list_price#83, ws_ext_tax#84, ws_coupon_amt#85, ws_ext_ship_cost#86, ws_net_paid#87, ws_net_paid_inc_tax#88, ws_net_paid_inc_ship#89, ws_net_paid_inc_ship_tax#90, ws_net_profit#91, ws_sold_date_sk#92]
Keys [2]: [ws_sold_date_sk#92, ws_item_sk#61]
Functions: []
Aggregate Attributes: []
Results [2]: [ws_sold_date_sk#92, ws_item_sk#61]

(13) ReusedExchange [Reuses operator id: 43]
Output [1]: [d_date_sk#94]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#92]
Right keys [1]: [d_date_sk#94]
Join condition: None

(15) Project [codegen id : 3]
Output [1]: [ws_item_sk#61]
Input [3]: [ws_sold_date_sk#92, ws_item_sk#61, d_date_sk#94]

(16) HashAggregate [codegen id : 3]
Input [1]: [ws_item_sk#61]
Keys [1]: [ws_item_sk#61]
Functions [1]: [partial_avg(UnscaledValue(ws_ext_discount_amt#80))]
Aggregate Attributes [2]: [sum#95, count#96]
Results [3]: [ws_item_sk#61, sum#97, count#98]

(17) Exchange
Input [3]: [ws_item_sk#61, sum#97, count#98]
Arguments: hashpartitioning(ws_item_sk#61, 5), ENSURE_REQUIREMENTS, [id=#99]

(18) HashAggregate [codegen id : 4]
Input [3]: [ws_item_sk#61, sum#97, count#98]
Keys [1]: [ws_item_sk#61]
Functions [1]: [avg(UnscaledValue(ws_ext_discount_amt#80))]
Aggregate Attributes [1]: [avg(UnscaledValue(ws_ext_discount_amt#80))#100]
Results [2]: [CheckOverflow((1.300000 * promote_precision(cast((avg(UnscaledValue(ws_ext_discount_amt#80))#100 / 100.0) as decimal(11,6)))), DecimalType(14,7)) AS (1.3 * avg(ws_ext_discount_amt))#101, ws_item_sk#61]

(19) Filter [codegen id : 4]
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#101, ws_item_sk#61]
Condition : isnotnull((1.3 * avg(ws_ext_discount_amt))#101)

(20) BroadcastExchange
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#101, ws_item_sk#61]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [id=#102]

(21) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [i_item_sk#36]
Right keys [1]: [ws_item_sk#61]
Join condition: (cast(ws_ext_discount_amt#22 as decimal(14,7)) > (1.3 * avg(ws_ext_discount_amt))#101)

(22) Project [codegen id : 6]
Output [56]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34, i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Input [58]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34, i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57, (1.3 * avg(ws_ext_discount_amt))#101, ws_item_sk#61]

(23) HashAggregate [codegen id : 6]
Input [56]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34, i_item_sk#36, i_item_id#37, i_rec_start_date#38, i_rec_end_date#39, i_item_desc#40, i_current_price#41, i_wholesale_cost#42, i_brand_id#43, i_brand#44, i_class_id#45, i_class#46, i_category_id#47, i_category#48, i_manufact_id#49, i_manufact#50, i_size#51, i_formulation#52, i_color#53, i_units#54, i_container#55, i_manager_id#56, i_product_name#57]
Keys [1]: [ws_sold_date_sk#34]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_discount_amt#22))]
Aggregate Attributes [1]: [sum#103]
Results [2]: [ws_sold_date_sk#34, sum#104]

(24) Project [codegen id : 6]
Output [2]: [ws_sold_date_sk#34, sum#104 AS _pushedexpression#105]
Input [2]: [ws_sold_date_sk#34, sum#104]

(25) HashAggregate [codegen id : 6]
Input [2]: [ws_sold_date_sk#34, _pushedexpression#105]
Keys [1]: [ws_sold_date_sk#34]
Functions: []
Aggregate Attributes: []
Results [1]: [ws_sold_date_sk#34]

(26) ReusedExchange [Reuses operator id: 38]
Output [1]: [d_date_sk#106]

(27) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ws_sold_date_sk#34]
Right keys [1]: [d_date_sk#106]
Join condition: None

(28) Project [codegen id : 6]
Output: []
Input [2]: [ws_sold_date_sk#34, d_date_sk#106]

(29) HashAggregate [codegen id : 6]
Input: []
Keys: []
Functions [1]: [partial_sum(_pushedexpression#107)]
Aggregate Attributes [2]: [sum#108, isEmpty#109]
Results [2]: [sum#110, isEmpty#111]

(30) Exchange
Input [2]: [sum#110, isEmpty#111]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#112]

(31) HashAggregate [codegen id : 7]
Input [2]: [sum#110, isEmpty#111]
Keys: []
Functions [1]: [sum(_pushedexpression#107)]
Aggregate Attributes [1]: [sum(_pushedexpression#107)#113]
Results [1]: [cast(sum(_pushedexpression#107)#113 as decimal(17,2)) AS Excess Discount Amount #114]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#34 IN dynamicpruning#35
BroadcastExchange (38)
+- * HashAggregate (37)
   +- * Project (36)
      +- * HashAggregate (35)
         +- * Filter (34)
            +- * ColumnarToRow (33)
               +- Scan parquet default.date_dim (32)


(32) Scan parquet default.date_dim
Output [2]: [d_date_sk#106, d_date#115]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(33) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#106, d_date#115]

(34) Filter [codegen id : 1]
Input [2]: [d_date_sk#106, d_date#115]
Condition : (((isnotnull(d_date#115) AND (d_date#115 >= 2000-01-27)) AND (d_date#115 <= 2000-04-26)) AND isnotnull(d_date_sk#106))

(35) HashAggregate [codegen id : 1]
Input [2]: [d_date_sk#106, d_date#115]
Keys [2]: [d_date#115, d_date_sk#106]
Functions: []
Aggregate Attributes: []
Results [2]: [d_date#115, d_date_sk#106]

(36) Project [codegen id : 1]
Output [1]: [d_date_sk#106]
Input [2]: [d_date#115, d_date_sk#106]

(37) HashAggregate [codegen id : 1]
Input [1]: [d_date_sk#106]
Keys [1]: [d_date_sk#106]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#106]

(38) BroadcastExchange
Input [1]: [d_date_sk#106]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#116]

Subquery:2 Hosting operator id = 9 Hosting Expression = ws_sold_date_sk#92 IN dynamicpruning#93
BroadcastExchange (43)
+- * HashAggregate (42)
   +- * Filter (41)
      +- * ColumnarToRow (40)
         +- Scan parquet default.date_dim (39)


(39) Scan parquet default.date_dim
Output [28]: [d_date_sk#94, d_date_id#117, d_date#118, d_month_seq#119, d_week_seq#120, d_quarter_seq#121, d_year#122, d_dow#123, d_moy#124, d_dom#125, d_qoy#126, d_fy_year#127, d_fy_quarter_seq#128, d_fy_week_seq#129, d_day_name#130, d_quarter_name#131, d_holiday#132, d_weekend#133, d_following_holiday#134, d_first_dom#135, d_last_dom#136, d_same_day_ly#137, d_same_day_lq#138, d_current_day#139, d_current_week#140, d_current_month#141, d_current_quarter#142, d_current_year#143]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(40) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#94, d_date_id#117, d_date#118, d_month_seq#119, d_week_seq#120, d_quarter_seq#121, d_year#122, d_dow#123, d_moy#124, d_dom#125, d_qoy#126, d_fy_year#127, d_fy_quarter_seq#128, d_fy_week_seq#129, d_day_name#130, d_quarter_name#131, d_holiday#132, d_weekend#133, d_following_holiday#134, d_first_dom#135, d_last_dom#136, d_same_day_ly#137, d_same_day_lq#138, d_current_day#139, d_current_week#140, d_current_month#141, d_current_quarter#142, d_current_year#143]

(41) Filter [codegen id : 1]
Input [28]: [d_date_sk#94, d_date_id#117, d_date#118, d_month_seq#119, d_week_seq#120, d_quarter_seq#121, d_year#122, d_dow#123, d_moy#124, d_dom#125, d_qoy#126, d_fy_year#127, d_fy_quarter_seq#128, d_fy_week_seq#129, d_day_name#130, d_quarter_name#131, d_holiday#132, d_weekend#133, d_following_holiday#134, d_first_dom#135, d_last_dom#136, d_same_day_ly#137, d_same_day_lq#138, d_current_day#139, d_current_week#140, d_current_month#141, d_current_quarter#142, d_current_year#143]
Condition : (((isnotnull(d_date#118) AND (d_date#118 >= 2000-01-27)) AND (d_date#118 <= 2000-04-26)) AND isnotnull(d_date_sk#94))

(42) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#94, d_date_id#117, d_date#118, d_month_seq#119, d_week_seq#120, d_quarter_seq#121, d_year#122, d_dow#123, d_moy#124, d_dom#125, d_qoy#126, d_fy_year#127, d_fy_quarter_seq#128, d_fy_week_seq#129, d_day_name#130, d_quarter_name#131, d_holiday#132, d_weekend#133, d_following_holiday#134, d_first_dom#135, d_last_dom#136, d_same_day_ly#137, d_same_day_lq#138, d_current_day#139, d_current_week#140, d_current_month#141, d_current_quarter#142, d_current_year#143]
Keys [1]: [d_date_sk#94]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#94]

(43) BroadcastExchange
Input [1]: [d_date_sk#94]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#144]


