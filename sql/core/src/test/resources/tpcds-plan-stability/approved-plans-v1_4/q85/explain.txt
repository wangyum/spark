== Physical Plan ==
TakeOrderedAndProject (43)
+- * HashAggregate (42)
   +- Exchange (41)
      +- * HashAggregate (40)
         +- * Project (39)
            +- * BroadcastHashJoin Inner BuildRight (38)
               :- * Project (32)
               :  +- HashAggregate (31)
               :     +- BroadcastHashJoin Inner BuildRight (30)
               :        :- BroadcastHashJoin Inner BuildRight (28)
               :        :  :- * BroadcastHashJoin Inner BuildRight (23)
               :        :  :  :- * BroadcastHashJoin Inner BuildRight (18)
               :        :  :  :  :- * BroadcastHashJoin Inner BuildRight (13)
               :        :  :  :  :  :- * BroadcastHashJoin Inner BuildLeft (8)
               :        :  :  :  :  :  :- BroadcastExchange (4)
               :        :  :  :  :  :  :  +- * Filter (3)
               :        :  :  :  :  :  :     +- * ColumnarToRow (2)
               :        :  :  :  :  :  :        +- Scan parquet default.web_sales (1)
               :        :  :  :  :  :  +- * Filter (7)
               :        :  :  :  :  :     +- * ColumnarToRow (6)
               :        :  :  :  :  :        +- Scan parquet default.web_returns (5)
               :        :  :  :  :  +- BroadcastExchange (12)
               :        :  :  :  :     +- * Filter (11)
               :        :  :  :  :        +- * ColumnarToRow (10)
               :        :  :  :  :           +- Scan parquet default.web_page (9)
               :        :  :  :  +- BroadcastExchange (17)
               :        :  :  :     +- * Filter (16)
               :        :  :  :        +- * ColumnarToRow (15)
               :        :  :  :           +- Scan parquet default.customer_demographics (14)
               :        :  :  +- BroadcastExchange (22)
               :        :  :     +- * Filter (21)
               :        :  :        +- * ColumnarToRow (20)
               :        :  :           +- Scan parquet default.customer_demographics (19)
               :        :  +- BroadcastExchange (27)
               :        :     +- * Filter (26)
               :        :        +- * ColumnarToRow (25)
               :        :           +- Scan parquet default.customer_address (24)
               :        +- ReusedExchange (29)
               +- BroadcastExchange (37)
                  +- * HashAggregate (36)
                     +- * Filter (35)
                        +- * ColumnarToRow (34)
                           +- Scan parquet default.reason (33)


(1) Scan parquet default.web_sales
Output [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#35)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_page_sk), Or(Or(And(GreaterThanOrEqual(ws_sales_price,100.00),LessThanOrEqual(ws_sales_price,150.00)),And(GreaterThanOrEqual(ws_sales_price,50.00),LessThanOrEqual(ws_sales_price,100.00))),And(GreaterThanOrEqual(ws_sales_price,150.00),LessThanOrEqual(ws_sales_price,200.00))), Or(Or(And(GreaterThanOrEqual(ws_net_profit,100.00),LessThanOrEqual(ws_net_profit,200.00)),And(GreaterThanOrEqual(ws_net_profit,150.00),LessThanOrEqual(ws_net_profit,300.00))),And(GreaterThanOrEqual(ws_net_profit,50.00),LessThanOrEqual(ws_net_profit,250.00)))]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cdemo_sk:int,ws_bill_hdemo_sk:int,ws_bill_addr_sk:int,ws_ship_customer_sk:int,ws_ship_cdemo_sk:int,ws_ship_hdemo_sk:int,ws_ship_addr_sk:int,ws_web_page_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_promo_sk:int,ws_order_number:int,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_list_price:decimal(7,2),ws_sales_price:decimal(7,2),ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2),ws_ext_tax:decimal(7,2),ws_coupon_amt:decimal(7,2),ws_ext_ship_cost:decimal(7,2),ws_net_paid:decimal(7,2),ws_net_paid_inc_tax:decimal(7,2),ws_net_paid_inc_ship:decimal(7,2),ws_net_paid_inc_ship_tax:decimal(7,2),ws_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]

(3) Filter [codegen id : 1]
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Condition : ((((isnotnull(ws_item_sk#3) AND isnotnull(ws_order_number#17)) AND isnotnull(ws_web_page_sk#12)) AND ((((ws_sales_price#21 >= 100.00) AND (ws_sales_price#21 <= 150.00)) OR ((ws_sales_price#21 >= 50.00) AND (ws_sales_price#21 <= 100.00))) OR ((ws_sales_price#21 >= 150.00) AND (ws_sales_price#21 <= 200.00)))) AND ((((ws_net_profit#33 >= 100.00) AND (ws_net_profit#33 <= 200.00)) OR ((ws_net_profit#33 >= 150.00) AND (ws_net_profit#33 <= 300.00))) OR ((ws_net_profit#33 >= 50.00) AND (ws_net_profit#33 <= 250.00))))

(4) BroadcastExchange
Input [34]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[2, int, false] as bigint), 32) | (cast(input[16, int, false] as bigint) & 4294967295))),false), [id=#36]

(5) Scan parquet default.web_returns
Output [24]: [wr_returned_time_sk#37, wr_item_sk#38, wr_refunded_customer_sk#39, wr_refunded_cdemo_sk#40, wr_refunded_hdemo_sk#41, wr_refunded_addr_sk#42, wr_returning_customer_sk#43, wr_returning_cdemo_sk#44, wr_returning_hdemo_sk#45, wr_returning_addr_sk#46, wr_web_page_sk#47, wr_reason_sk#48, wr_order_number#49, wr_return_quantity#50, wr_return_amt#51, wr_return_tax#52, wr_return_amt_inc_tax#53, wr_fee#54, wr_return_ship_cost#55, wr_refunded_cash#56, wr_reversed_charge#57, wr_account_credit#58, wr_net_loss#59, wr_returned_date_sk#60]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_returns]
PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number), IsNotNull(wr_reason_sk), IsNotNull(wr_refunded_cdemo_sk), IsNotNull(wr_returning_cdemo_sk), IsNotNull(wr_refunded_addr_sk)]
ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_hdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_customer_sk:int,wr_returning_cdemo_sk:int,wr_returning_hdemo_sk:int,wr_returning_addr_sk:int,wr_web_page_sk:int,wr_reason_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2),wr_return_tax:decimal(7,2),wr_return_amt_inc_tax:decimal(7,2),wr_fee:decimal(7,2),wr_return_ship_cost:decimal(7,2),wr_refunded_cash:decimal(7,2),wr_reversed_charge:decimal(7,2),wr_account_credit:decimal(7,2),wr_net_loss:decimal(7,2)>

(6) ColumnarToRow
Input [24]: [wr_returned_time_sk#37, wr_item_sk#38, wr_refunded_customer_sk#39, wr_refunded_cdemo_sk#40, wr_refunded_hdemo_sk#41, wr_refunded_addr_sk#42, wr_returning_customer_sk#43, wr_returning_cdemo_sk#44, wr_returning_hdemo_sk#45, wr_returning_addr_sk#46, wr_web_page_sk#47, wr_reason_sk#48, wr_order_number#49, wr_return_quantity#50, wr_return_amt#51, wr_return_tax#52, wr_return_amt_inc_tax#53, wr_fee#54, wr_return_ship_cost#55, wr_refunded_cash#56, wr_reversed_charge#57, wr_account_credit#58, wr_net_loss#59, wr_returned_date_sk#60]

(7) Filter
Input [24]: [wr_returned_time_sk#37, wr_item_sk#38, wr_refunded_customer_sk#39, wr_refunded_cdemo_sk#40, wr_refunded_hdemo_sk#41, wr_refunded_addr_sk#42, wr_returning_customer_sk#43, wr_returning_cdemo_sk#44, wr_returning_hdemo_sk#45, wr_returning_addr_sk#46, wr_web_page_sk#47, wr_reason_sk#48, wr_order_number#49, wr_return_quantity#50, wr_return_amt#51, wr_return_tax#52, wr_return_amt_inc_tax#53, wr_fee#54, wr_return_ship_cost#55, wr_refunded_cash#56, wr_reversed_charge#57, wr_account_credit#58, wr_net_loss#59, wr_returned_date_sk#60]
Condition : (((((isnotnull(wr_item_sk#38) AND isnotnull(wr_order_number#49)) AND isnotnull(wr_reason_sk#48)) AND isnotnull(wr_refunded_cdemo_sk#40)) AND isnotnull(wr_returning_cdemo_sk#44)) AND isnotnull(wr_refunded_addr_sk#42))

(8) BroadcastHashJoin [codegen id : 5]
Left keys [2]: [ws_item_sk#3, ws_order_number#17]
Right keys [2]: [wr_item_sk#38, wr_order_number#49]
Join condition: None

(9) Scan parquet default.web_page
Output [14]: [wp_web_page_sk#61, wp_web_page_id#62, wp_rec_start_date#63, wp_rec_end_date#64, wp_creation_date_sk#65, wp_access_date_sk#66, wp_autogen_flag#67, wp_customer_sk#68, wp_url#69, wp_type#70, wp_char_count#71, wp_link_count#72, wp_image_count#73, wp_max_ad_count#74]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_page]
PushedFilters: [IsNotNull(wp_web_page_sk)]
ReadSchema: struct<wp_web_page_sk:int,wp_web_page_id:string,wp_rec_start_date:date,wp_rec_end_date:date,wp_creation_date_sk:int,wp_access_date_sk:int,wp_autogen_flag:string,wp_customer_sk:int,wp_url:string,wp_type:string,wp_char_count:int,wp_link_count:int,wp_image_count:int,wp_max_ad_count:int>

(10) ColumnarToRow [codegen id : 2]
Input [14]: [wp_web_page_sk#61, wp_web_page_id#62, wp_rec_start_date#63, wp_rec_end_date#64, wp_creation_date_sk#65, wp_access_date_sk#66, wp_autogen_flag#67, wp_customer_sk#68, wp_url#69, wp_type#70, wp_char_count#71, wp_link_count#72, wp_image_count#73, wp_max_ad_count#74]

(11) Filter [codegen id : 2]
Input [14]: [wp_web_page_sk#61, wp_web_page_id#62, wp_rec_start_date#63, wp_rec_end_date#64, wp_creation_date_sk#65, wp_access_date_sk#66, wp_autogen_flag#67, wp_customer_sk#68, wp_url#69, wp_type#70, wp_char_count#71, wp_link_count#72, wp_image_count#73, wp_max_ad_count#74]
Condition : isnotnull(wp_web_page_sk#61)

(12) BroadcastExchange
Input [14]: [wp_web_page_sk#61, wp_web_page_id#62, wp_rec_start_date#63, wp_rec_end_date#64, wp_creation_date_sk#65, wp_access_date_sk#66, wp_autogen_flag#67, wp_customer_sk#68, wp_url#69, wp_type#70, wp_char_count#71, wp_link_count#72, wp_image_count#73, wp_max_ad_count#74]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#75]

(13) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_web_page_sk#12]
Right keys [1]: [wp_web_page_sk#61]
Join condition: None

(14) Scan parquet default.customer_demographics
Output [9]: [cd_demo_sk#76, cd_gender#77, cd_marital_status#78, cd_education_status#79, cd_purchase_estimate#80, cd_credit_rating#81, cd_dep_count#82, cd_dep_employed_count#83, cd_dep_college_count#84]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), Or(Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Advanced Degree     )),And(EqualTo(cd_marital_status,S),EqualTo(cd_education_status,College             ))),And(EqualTo(cd_marital_status,W),EqualTo(cd_education_status,2 yr Degree         )))]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(15) ColumnarToRow [codegen id : 3]
Input [9]: [cd_demo_sk#76, cd_gender#77, cd_marital_status#78, cd_education_status#79, cd_purchase_estimate#80, cd_credit_rating#81, cd_dep_count#82, cd_dep_employed_count#83, cd_dep_college_count#84]

(16) Filter [codegen id : 3]
Input [9]: [cd_demo_sk#76, cd_gender#77, cd_marital_status#78, cd_education_status#79, cd_purchase_estimate#80, cd_credit_rating#81, cd_dep_count#82, cd_dep_employed_count#83, cd_dep_college_count#84]
Condition : (((isnotnull(cd_demo_sk#76) AND isnotnull(cd_marital_status#78)) AND isnotnull(cd_education_status#79)) AND ((((cd_marital_status#78 = M) AND (cd_education_status#79 = Advanced Degree     )) OR ((cd_marital_status#78 = S) AND (cd_education_status#79 = College             ))) OR ((cd_marital_status#78 = W) AND (cd_education_status#79 = 2 yr Degree         ))))

(17) BroadcastExchange
Input [9]: [cd_demo_sk#76, cd_gender#77, cd_marital_status#78, cd_education_status#79, cd_purchase_estimate#80, cd_credit_rating#81, cd_dep_count#82, cd_dep_employed_count#83, cd_dep_college_count#84]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#85]

(18) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [wr_refunded_cdemo_sk#40]
Right keys [1]: [cd_demo_sk#76]
Join condition: ((((((cd_marital_status#78 = M) AND (cd_education_status#79 = Advanced Degree     )) AND (ws_sales_price#21 >= 100.00)) AND (ws_sales_price#21 <= 150.00)) OR ((((cd_marital_status#78 = S) AND (cd_education_status#79 = College             )) AND (ws_sales_price#21 >= 50.00)) AND (ws_sales_price#21 <= 100.00))) OR ((((cd_marital_status#78 = W) AND (cd_education_status#79 = 2 yr Degree         )) AND (ws_sales_price#21 >= 150.00)) AND (ws_sales_price#21 <= 200.00)))

(19) Scan parquet default.customer_demographics
Output [9]: [cd_demo_sk#86, cd_gender#87, cd_marital_status#88, cd_education_status#89, cd_purchase_estimate#90, cd_credit_rating#91, cd_dep_count#92, cd_dep_employed_count#93, cd_dep_college_count#94]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), Or(Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Advanced Degree     )),And(EqualTo(cd_marital_status,S),EqualTo(cd_education_status,College             ))),And(EqualTo(cd_marital_status,W),EqualTo(cd_education_status,2 yr Degree         )))]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(20) ColumnarToRow [codegen id : 4]
Input [9]: [cd_demo_sk#86, cd_gender#87, cd_marital_status#88, cd_education_status#89, cd_purchase_estimate#90, cd_credit_rating#91, cd_dep_count#92, cd_dep_employed_count#93, cd_dep_college_count#94]

(21) Filter [codegen id : 4]
Input [9]: [cd_demo_sk#86, cd_gender#87, cd_marital_status#88, cd_education_status#89, cd_purchase_estimate#90, cd_credit_rating#91, cd_dep_count#92, cd_dep_employed_count#93, cd_dep_college_count#94]
Condition : (((isnotnull(cd_demo_sk#86) AND isnotnull(cd_marital_status#88)) AND isnotnull(cd_education_status#89)) AND ((((cd_marital_status#88 = M) AND (cd_education_status#89 = Advanced Degree     )) OR ((cd_marital_status#88 = S) AND (cd_education_status#89 = College             ))) OR ((cd_marital_status#88 = W) AND (cd_education_status#89 = 2 yr Degree         ))))

(22) BroadcastExchange
Input [9]: [cd_demo_sk#86, cd_gender#87, cd_marital_status#88, cd_education_status#89, cd_purchase_estimate#90, cd_credit_rating#91, cd_dep_count#92, cd_dep_employed_count#93, cd_dep_college_count#94]
Arguments: HashedRelationBroadcastMode(List(input[0, int, false], input[2, string, false], input[3, string, false]),false), [id=#95]

(23) BroadcastHashJoin [codegen id : 5]
Left keys [3]: [wr_returning_cdemo_sk#44, cd_marital_status#78, cd_education_status#79]
Right keys [3]: [cd_demo_sk#86, cd_marital_status#88, cd_education_status#89]
Join condition: ((((((cd_marital_status#88 = M) AND (cd_education_status#89 = Advanced Degree     )) AND (ws_sales_price#21 >= 100.00)) AND (ws_sales_price#21 <= 150.00)) OR ((((cd_marital_status#88 = S) AND (cd_education_status#89 = College             )) AND (ws_sales_price#21 >= 50.00)) AND (ws_sales_price#21 <= 100.00))) OR ((((cd_marital_status#88 = W) AND (cd_education_status#89 = 2 yr Degree         )) AND (ws_sales_price#21 >= 150.00)) AND (ws_sales_price#21 <= 200.00)))

(24) Scan parquet default.customer_address
Output [13]: [ca_address_sk#96, ca_address_id#97, ca_street_number#98, ca_street_name#99, ca_street_type#100, ca_suite_number#101, ca_city#102, ca_county#103, ca_state#104, ca_zip#105, ca_country#106, ca_gmt_offset#107, ca_location_type#108]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_state, [IN,NJ,OH]),In(ca_state, [CT,KY,WI])),In(ca_state, [AR,IA,LA]))]
ReadSchema: struct<ca_address_sk:int,ca_address_id:string,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string>

(25) ColumnarToRow [codegen id : 6]
Input [13]: [ca_address_sk#96, ca_address_id#97, ca_street_number#98, ca_street_name#99, ca_street_type#100, ca_suite_number#101, ca_city#102, ca_county#103, ca_state#104, ca_zip#105, ca_country#106, ca_gmt_offset#107, ca_location_type#108]

(26) Filter [codegen id : 6]
Input [13]: [ca_address_sk#96, ca_address_id#97, ca_street_number#98, ca_street_name#99, ca_street_type#100, ca_suite_number#101, ca_city#102, ca_county#103, ca_state#104, ca_zip#105, ca_country#106, ca_gmt_offset#107, ca_location_type#108]
Condition : (((isnotnull(ca_country#106) AND (ca_country#106 = United States)) AND isnotnull(ca_address_sk#96)) AND ((ca_state#104 IN (IN,OH,NJ) OR ca_state#104 IN (WI,CT,KY)) OR ca_state#104 IN (LA,IA,AR)))

(27) BroadcastExchange
Input [13]: [ca_address_sk#96, ca_address_id#97, ca_street_number#98, ca_street_name#99, ca_street_type#100, ca_suite_number#101, ca_city#102, ca_county#103, ca_state#104, ca_zip#105, ca_country#106, ca_gmt_offset#107, ca_location_type#108]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#109]

(28) BroadcastHashJoin
Left keys [1]: [wr_refunded_addr_sk#42]
Right keys [1]: [ca_address_sk#96]
Join condition: ((((ca_state#104 IN (IN,OH,NJ) AND (ws_net_profit#33 >= 100.00)) AND (ws_net_profit#33 <= 200.00)) OR ((ca_state#104 IN (WI,CT,KY) AND (ws_net_profit#33 >= 150.00)) AND (ws_net_profit#33 <= 300.00))) OR ((ca_state#104 IN (LA,IA,AR) AND (ws_net_profit#33 >= 50.00)) AND (ws_net_profit#33 <= 250.00)))

(29) ReusedExchange [Reuses operator id: 47]
Output [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]

(30) BroadcastHashJoin
Left keys [1]: [ws_sold_date_sk#34]
Right keys [1]: [d_date_sk#110]
Join condition: None

(31) HashAggregate
Input [131]: [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ws_ext_list_price#25, ws_ext_tax#26, ws_coupon_amt#27, ws_ext_ship_cost#28, ws_net_paid#29, ws_net_paid_inc_tax#30, ws_net_paid_inc_ship#31, ws_net_paid_inc_ship_tax#32, ws_net_profit#33, ws_sold_date_sk#34, wr_returned_time_sk#37, wr_item_sk#38, wr_refunded_customer_sk#39, wr_refunded_cdemo_sk#40, wr_refunded_hdemo_sk#41, wr_refunded_addr_sk#42, wr_returning_customer_sk#43, wr_returning_cdemo_sk#44, wr_returning_hdemo_sk#45, wr_returning_addr_sk#46, wr_web_page_sk#47, wr_reason_sk#48, wr_order_number#49, wr_return_quantity#50, wr_return_amt#51, wr_return_tax#52, wr_return_amt_inc_tax#53, wr_fee#54, wr_return_ship_cost#55, wr_refunded_cash#56, wr_reversed_charge#57, wr_account_credit#58, wr_net_loss#59, wr_returned_date_sk#60, wp_web_page_sk#61, wp_web_page_id#62, wp_rec_start_date#63, wp_rec_end_date#64, wp_creation_date_sk#65, wp_access_date_sk#66, wp_autogen_flag#67, wp_customer_sk#68, wp_url#69, wp_type#70, wp_char_count#71, wp_link_count#72, wp_image_count#73, wp_max_ad_count#74, cd_demo_sk#76, cd_gender#77, cd_marital_status#78, cd_education_status#79, cd_purchase_estimate#80, cd_credit_rating#81, cd_dep_count#82, cd_dep_employed_count#83, cd_dep_college_count#84, cd_demo_sk#86, cd_gender#87, cd_marital_status#88, cd_education_status#89, cd_purchase_estimate#90, cd_credit_rating#91, cd_dep_count#92, cd_dep_employed_count#93, cd_dep_college_count#94, ca_address_sk#96, ca_address_id#97, ca_street_number#98, ca_street_name#99, ca_street_type#100, ca_suite_number#101, ca_city#102, ca_county#103, ca_state#104, ca_zip#105, ca_country#106, ca_gmt_offset#107, ca_location_type#108, d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Keys [1]: [wr_reason_sk#48]
Functions [3]: [partial_avg(ws_quantity#18), partial_avg(UnscaledValue(wr_refunded_cash#56)), partial_avg(UnscaledValue(wr_fee#54))]
Aggregate Attributes [6]: [sum#138, count#139, sum#140, count#141, sum#142, count#143]
Results [7]: [wr_reason_sk#48, sum#144, count#145, sum#146, count#147, sum#148, count#149]

(32) Project [codegen id : 9]
Output [4]: [wr_reason_sk#48, sum#144 AS _pushedexpression#150, count#145 AS _pushedexpression#151, sum#146 AS _pushedexpression#152]
Input [7]: [wr_reason_sk#48, sum#144, count#145, sum#146, count#147, sum#148, count#149]

(33) Scan parquet default.reason
Output [3]: [r_reason_sk#153, r_reason_id#154, r_reason_desc#155]
Batched: true
Location [not included in comparison]/{warehouse_dir}/reason]
PushedFilters: [IsNotNull(r_reason_sk)]
ReadSchema: struct<r_reason_sk:int,r_reason_id:string,r_reason_desc:string>

(34) ColumnarToRow [codegen id : 8]
Input [3]: [r_reason_sk#153, r_reason_id#154, r_reason_desc#155]

(35) Filter [codegen id : 8]
Input [3]: [r_reason_sk#153, r_reason_id#154, r_reason_desc#155]
Condition : isnotnull(r_reason_sk#153)

(36) HashAggregate [codegen id : 8]
Input [3]: [r_reason_sk#153, r_reason_id#154, r_reason_desc#155]
Keys [2]: [r_reason_sk#153, r_reason_desc#155]
Functions: []
Aggregate Attributes: []
Results [2]: [r_reason_sk#153, r_reason_desc#155]

(37) BroadcastExchange
Input [2]: [r_reason_sk#153, r_reason_desc#155]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#156]

(38) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [wr_reason_sk#48]
Right keys [1]: [r_reason_sk#153]
Join condition: None

(39) Project [codegen id : 9]
Output [4]: [_pushedexpression#150, _pushedexpression#157, _pushedexpression#152, r_reason_desc#155]
Input [6]: [wr_reason_sk#48, _pushedexpression#150, _pushedexpression#151, _pushedexpression#152, r_reason_sk#153, r_reason_desc#155]

(40) HashAggregate [codegen id : 9]
Input [4]: [_pushedexpression#150, _pushedexpression#157, _pushedexpression#152, r_reason_desc#155]
Keys [1]: [r_reason_desc#155]
Functions [3]: [partial_avg(_pushedexpression#150), partial_avg(UnscaledValue(_pushedexpression#157)), partial_avg(UnscaledValue(_pushedexpression#152))]
Aggregate Attributes [6]: [sum#158, count#159, sum#160, count#161, sum#162, count#163]
Results [7]: [r_reason_desc#155, sum#164, count#165, sum#166, count#167, sum#168, count#169]

(41) Exchange
Input [7]: [r_reason_desc#155, sum#164, count#165, sum#166, count#167, sum#168, count#169]
Arguments: hashpartitioning(r_reason_desc#155, 5), ENSURE_REQUIREMENTS, [id=#170]

(42) HashAggregate [codegen id : 10]
Input [7]: [r_reason_desc#155, sum#164, count#165, sum#166, count#167, sum#168, count#169]
Keys [1]: [r_reason_desc#155]
Functions [3]: [avg(_pushedexpression#150), avg(UnscaledValue(_pushedexpression#157)), avg(UnscaledValue(_pushedexpression#152))]
Aggregate Attributes [3]: [avg(_pushedexpression#150)#171, avg(UnscaledValue(_pushedexpression#157))#172, avg(UnscaledValue(_pushedexpression#152))#173]
Results [4]: [substr(r_reason_desc#155, 1, 20) AS substr(r_reason_desc, 1, 20)#174, avg(_pushedexpression#150)#171 AS avg(ws_quantity)#175, cast(cast((avg(UnscaledValue(_pushedexpression#157))#172 / 1000000.0) as decimal(15,10)) as decimal(11,6)) AS avg(wr_refunded_cash)#176, cast(cast((avg(UnscaledValue(_pushedexpression#152))#173 / 1000000.0) as decimal(15,10)) as decimal(11,6)) AS avg(wr_fee)#177]

(43) TakeOrderedAndProject
Input [4]: [substr(r_reason_desc, 1, 20)#174, avg(ws_quantity)#175, avg(wr_refunded_cash)#176, avg(wr_fee)#177]
Arguments: 100, [substr(r_reason_desc, 1, 20)#174 ASC NULLS FIRST, avg(ws_quantity)#175 ASC NULLS FIRST, avg(wr_refunded_cash)#176 ASC NULLS FIRST, avg(wr_fee)#177 ASC NULLS FIRST], [substr(r_reason_desc, 1, 20)#174, avg(ws_quantity)#175, avg(wr_refunded_cash)#176, avg(wr_fee)#177]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#34 IN dynamicpruning#35
BroadcastExchange (47)
+- * Filter (46)
   +- * ColumnarToRow (45)
      +- Scan parquet default.date_dim (44)


(44) Scan parquet default.date_dim
Output [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(45) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]

(46) Filter [codegen id : 1]
Input [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Condition : ((isnotnull(d_year#116) AND (d_year#116 = 2000)) AND isnotnull(d_date_sk#110))

(47) BroadcastExchange
Input [28]: [d_date_sk#110, d_date_id#111, d_date#112, d_month_seq#113, d_week_seq#114, d_quarter_seq#115, d_year#116, d_dow#117, d_moy#118, d_dom#119, d_qoy#120, d_fy_year#121, d_fy_quarter_seq#122, d_fy_week_seq#123, d_day_name#124, d_quarter_name#125, d_holiday#126, d_weekend#127, d_following_holiday#128, d_first_dom#129, d_last_dom#130, d_same_day_ly#131, d_same_day_lq#132, d_current_day#133, d_current_week#134, d_current_month#135, d_current_quarter#136, d_current_year#137]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#178]


