== Physical Plan ==
TakeOrderedAndProject (22)
+- * HashAggregate (21)
   +- Exchange (20)
      +- * HashAggregate (19)
         +- * Project (18)
            +- * BroadcastHashJoin Inner BuildRight (17)
               :- * Project (15)
               :  +- * HashAggregate (14)
               :     +- * BroadcastHashJoin Inner BuildRight (13)
               :        :- * BroadcastHashJoin Inner BuildRight (8)
               :        :  :- * Filter (3)
               :        :  :  +- * ColumnarToRow (2)
               :        :  :     +- Scan parquet default.catalog_sales (1)
               :        :  +- BroadcastExchange (7)
               :        :     +- * Filter (6)
               :        :        +- * ColumnarToRow (5)
               :        :           +- Scan parquet default.customer (4)
               :        +- BroadcastExchange (12)
               :           +- * Filter (11)
               :              +- * ColumnarToRow (10)
               :                 +- Scan parquet default.customer_address (9)
               +- ReusedExchange (16)


(1) Scan parquet default.catalog_sales
Output [34]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#34), dynamicpruningexpression(cs_sold_date_sk#34 IN dynamicpruning#35)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_bill_addr_sk:int,cs_ship_customer_sk:int,cs_ship_cdemo_sk:int,cs_ship_hdemo_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_catalog_page_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2),cs_ext_tax:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_ext_ship_cost:decimal(7,2),cs_net_paid:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2),cs_net_paid_inc_ship:decimal(7,2),cs_net_paid_inc_ship_tax:decimal(7,2),cs_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 4]
Input [34]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34]

(3) Filter [codegen id : 4]
Input [34]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34]
Condition : isnotnull(cs_bill_customer_sk#3)

(4) Scan parquet default.customer
Output [18]: [c_customer_sk#36, c_customer_id#37, c_current_cdemo_sk#38, c_current_hdemo_sk#39, c_current_addr_sk#40, c_first_shipto_date_sk#41, c_first_sales_date_sk#42, c_salutation#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_day#47, c_birth_month#48, c_birth_year#49, c_birth_country#50, c_login#51, c_email_address#52, c_last_review_date#53]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(5) ColumnarToRow [codegen id : 1]
Input [18]: [c_customer_sk#36, c_customer_id#37, c_current_cdemo_sk#38, c_current_hdemo_sk#39, c_current_addr_sk#40, c_first_shipto_date_sk#41, c_first_sales_date_sk#42, c_salutation#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_day#47, c_birth_month#48, c_birth_year#49, c_birth_country#50, c_login#51, c_email_address#52, c_last_review_date#53]

(6) Filter [codegen id : 1]
Input [18]: [c_customer_sk#36, c_customer_id#37, c_current_cdemo_sk#38, c_current_hdemo_sk#39, c_current_addr_sk#40, c_first_shipto_date_sk#41, c_first_sales_date_sk#42, c_salutation#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_day#47, c_birth_month#48, c_birth_year#49, c_birth_country#50, c_login#51, c_email_address#52, c_last_review_date#53]
Condition : (isnotnull(c_customer_sk#36) AND isnotnull(c_current_addr_sk#40))

(7) BroadcastExchange
Input [18]: [c_customer_sk#36, c_customer_id#37, c_current_cdemo_sk#38, c_current_hdemo_sk#39, c_current_addr_sk#40, c_first_shipto_date_sk#41, c_first_sales_date_sk#42, c_salutation#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_day#47, c_birth_month#48, c_birth_year#49, c_birth_country#50, c_login#51, c_email_address#52, c_last_review_date#53]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#54]

(8) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_bill_customer_sk#3]
Right keys [1]: [c_customer_sk#36]
Join condition: None

(9) Scan parquet default.customer_address
Output [13]: [ca_address_sk#55, ca_address_id#56, ca_street_number#57, ca_street_name#58, ca_street_type#59, ca_suite_number#60, ca_city#61, ca_county#62, ca_state#63, ca_zip#64, ca_country#65, ca_gmt_offset#66, ca_location_type#67]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_address_id:string,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string>

(10) ColumnarToRow [codegen id : 2]
Input [13]: [ca_address_sk#55, ca_address_id#56, ca_street_number#57, ca_street_name#58, ca_street_type#59, ca_suite_number#60, ca_city#61, ca_county#62, ca_state#63, ca_zip#64, ca_country#65, ca_gmt_offset#66, ca_location_type#67]

(11) Filter [codegen id : 2]
Input [13]: [ca_address_sk#55, ca_address_id#56, ca_street_number#57, ca_street_name#58, ca_street_type#59, ca_suite_number#60, ca_city#61, ca_county#62, ca_state#63, ca_zip#64, ca_country#65, ca_gmt_offset#66, ca_location_type#67]
Condition : isnotnull(ca_address_sk#55)

(12) BroadcastExchange
Input [13]: [ca_address_sk#55, ca_address_id#56, ca_street_number#57, ca_street_name#58, ca_street_type#59, ca_suite_number#60, ca_city#61, ca_county#62, ca_state#63, ca_zip#64, ca_country#65, ca_gmt_offset#66, ca_location_type#67]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#68]

(13) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [c_current_addr_sk#40]
Right keys [1]: [ca_address_sk#55]
Join condition: ((substr(ca_zip#64, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#63 IN (CA,WA,GA)) OR (cs_sales_price#21 > 500.00))

(14) HashAggregate [codegen id : 4]
Input [65]: [cs_sold_time_sk#1, cs_ship_date_sk#2, cs_bill_customer_sk#3, cs_bill_cdemo_sk#4, cs_bill_hdemo_sk#5, cs_bill_addr_sk#6, cs_ship_customer_sk#7, cs_ship_cdemo_sk#8, cs_ship_hdemo_sk#9, cs_ship_addr_sk#10, cs_call_center_sk#11, cs_catalog_page_sk#12, cs_ship_mode_sk#13, cs_warehouse_sk#14, cs_item_sk#15, cs_promo_sk#16, cs_order_number#17, cs_quantity#18, cs_wholesale_cost#19, cs_list_price#20, cs_sales_price#21, cs_ext_discount_amt#22, cs_ext_sales_price#23, cs_ext_wholesale_cost#24, cs_ext_list_price#25, cs_ext_tax#26, cs_coupon_amt#27, cs_ext_ship_cost#28, cs_net_paid#29, cs_net_paid_inc_tax#30, cs_net_paid_inc_ship#31, cs_net_paid_inc_ship_tax#32, cs_net_profit#33, cs_sold_date_sk#34, c_customer_sk#36, c_customer_id#37, c_current_cdemo_sk#38, c_current_hdemo_sk#39, c_current_addr_sk#40, c_first_shipto_date_sk#41, c_first_sales_date_sk#42, c_salutation#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_day#47, c_birth_month#48, c_birth_year#49, c_birth_country#50, c_login#51, c_email_address#52, c_last_review_date#53, ca_address_sk#55, ca_address_id#56, ca_street_number#57, ca_street_name#58, ca_street_type#59, ca_suite_number#60, ca_city#61, ca_county#62, ca_state#63, ca_zip#64, ca_country#65, ca_gmt_offset#66, ca_location_type#67]
Keys [2]: [cs_sold_date_sk#34, ca_zip#64]
Functions [1]: [partial_sum(UnscaledValue(cs_sales_price#21))]
Aggregate Attributes [1]: [sum#69]
Results [3]: [cs_sold_date_sk#34, ca_zip#64, sum#70]

(15) Project [codegen id : 4]
Output [3]: [cs_sold_date_sk#34, ca_zip#64, sum#70 AS _pushedexpression#71]
Input [3]: [cs_sold_date_sk#34, ca_zip#64, sum#70]

(16) ReusedExchange [Reuses operator id: 27]
Output [1]: [d_date_sk#72]

(17) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_sold_date_sk#34]
Right keys [1]: [d_date_sk#72]
Join condition: None

(18) Project [codegen id : 4]
Output [2]: [ca_zip#64, _pushedexpression#73]
Input [4]: [cs_sold_date_sk#34, ca_zip#64, _pushedexpression#71, d_date_sk#72]

(19) HashAggregate [codegen id : 4]
Input [2]: [ca_zip#64, _pushedexpression#73]
Keys [1]: [ca_zip#64]
Functions [1]: [partial_sum(_pushedexpression#73)]
Aggregate Attributes [2]: [sum#74, isEmpty#75]
Results [3]: [ca_zip#64, sum#76, isEmpty#77]

(20) Exchange
Input [3]: [ca_zip#64, sum#76, isEmpty#77]
Arguments: hashpartitioning(ca_zip#64, 5), ENSURE_REQUIREMENTS, [id=#78]

(21) HashAggregate [codegen id : 5]
Input [3]: [ca_zip#64, sum#76, isEmpty#77]
Keys [1]: [ca_zip#64]
Functions [1]: [sum(_pushedexpression#73)]
Aggregate Attributes [1]: [sum(_pushedexpression#73)#79]
Results [2]: [ca_zip#64, cast(sum(_pushedexpression#73)#79 as decimal(17,2)) AS sum(cs_sales_price)#80]

(22) TakeOrderedAndProject
Input [2]: [ca_zip#64, sum(cs_sales_price)#80]
Arguments: 100, [ca_zip#64 ASC NULLS FIRST], [ca_zip#64, sum(cs_sales_price)#80]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#34 IN dynamicpruning#35
BroadcastExchange (27)
+- * HashAggregate (26)
   +- * Filter (25)
      +- * ColumnarToRow (24)
         +- Scan parquet default.date_dim (23)


(23) Scan parquet default.date_dim
Output [28]: [d_date_sk#72, d_date_id#81, d_date#82, d_month_seq#83, d_week_seq#84, d_quarter_seq#85, d_year#86, d_dow#87, d_moy#88, d_dom#89, d_qoy#90, d_fy_year#91, d_fy_quarter_seq#92, d_fy_week_seq#93, d_day_name#94, d_quarter_name#95, d_holiday#96, d_weekend#97, d_following_holiday#98, d_first_dom#99, d_last_dom#100, d_same_day_ly#101, d_same_day_lq#102, d_current_day#103, d_current_week#104, d_current_month#105, d_current_quarter#106, d_current_year#107]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:int,d_year:int,d_dow:int,d_moy:int,d_dom:int,d_qoy:int,d_fy_year:int,d_fy_quarter_seq:int,d_fy_week_seq:int,d_day_name:string,d_quarter_name:string,d_holiday:string,d_weekend:string,d_following_holiday:string,d_first_dom:int,d_last_dom:int,d_same_day_ly:int,d_same_day_lq:int,d_current_day:string,d_current_week:string,d_current_month:string,d_current_quarter:string,d_current_year:string>

(24) ColumnarToRow [codegen id : 1]
Input [28]: [d_date_sk#72, d_date_id#81, d_date#82, d_month_seq#83, d_week_seq#84, d_quarter_seq#85, d_year#86, d_dow#87, d_moy#88, d_dom#89, d_qoy#90, d_fy_year#91, d_fy_quarter_seq#92, d_fy_week_seq#93, d_day_name#94, d_quarter_name#95, d_holiday#96, d_weekend#97, d_following_holiday#98, d_first_dom#99, d_last_dom#100, d_same_day_ly#101, d_same_day_lq#102, d_current_day#103, d_current_week#104, d_current_month#105, d_current_quarter#106, d_current_year#107]

(25) Filter [codegen id : 1]
Input [28]: [d_date_sk#72, d_date_id#81, d_date#82, d_month_seq#83, d_week_seq#84, d_quarter_seq#85, d_year#86, d_dow#87, d_moy#88, d_dom#89, d_qoy#90, d_fy_year#91, d_fy_quarter_seq#92, d_fy_week_seq#93, d_day_name#94, d_quarter_name#95, d_holiday#96, d_weekend#97, d_following_holiday#98, d_first_dom#99, d_last_dom#100, d_same_day_ly#101, d_same_day_lq#102, d_current_day#103, d_current_week#104, d_current_month#105, d_current_quarter#106, d_current_year#107]
Condition : ((((isnotnull(d_qoy#90) AND isnotnull(d_year#86)) AND (d_qoy#90 = 2)) AND (d_year#86 = 2001)) AND isnotnull(d_date_sk#72))

(26) HashAggregate [codegen id : 1]
Input [28]: [d_date_sk#72, d_date_id#81, d_date#82, d_month_seq#83, d_week_seq#84, d_quarter_seq#85, d_year#86, d_dow#87, d_moy#88, d_dom#89, d_qoy#90, d_fy_year#91, d_fy_quarter_seq#92, d_fy_week_seq#93, d_day_name#94, d_quarter_name#95, d_holiday#96, d_weekend#97, d_following_holiday#98, d_first_dom#99, d_last_dom#100, d_same_day_ly#101, d_same_day_lq#102, d_current_day#103, d_current_week#104, d_current_month#105, d_current_quarter#106, d_current_year#107]
Keys [1]: [d_date_sk#72]
Functions: []
Aggregate Attributes: []
Results [1]: [d_date_sk#72]

(27) BroadcastExchange
Input [1]: [d_date_sk#72]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#108]


