== Physical Plan ==
TakeOrderedAndProject (56)
+- * Project (55)
   +- * BroadcastHashJoin Inner BuildRight (54)
      :- * Project (48)
      :  +- * BroadcastHashJoin Inner BuildRight (47)
      :     :- * Project (42)
      :     :  +- * BroadcastHashJoin Inner BuildRight (41)
      :     :     :- * Project (39)
      :     :     :  +- * BroadcastHashJoin Inner BuildRight (38)
      :     :     :     :- * Project (10)
      :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (9)
      :     :     :     :     :- * Project (4)
      :     :     :     :     :  +- * Filter (3)
      :     :     :     :     :     +- * ColumnarToRow (2)
      :     :     :     :     :        +- Scan parquet default.part (1)
      :     :     :     :     +- BroadcastExchange (8)
      :     :     :     :        +- * Filter (7)
      :     :     :     :           +- * ColumnarToRow (6)
      :     :     :     :              +- Scan parquet default.partsupp (5)
      :     :     :     +- BroadcastExchange (37)
      :     :     :        +- * Filter (36)
      :     :     :           +- * HashAggregate (35)
      :     :     :              +- Exchange (34)
      :     :     :                 +- * HashAggregate (33)
      :     :     :                    +- * Project (32)
      :     :     :                       +- * BroadcastHashJoin Inner BuildRight (31)
      :     :     :                          :- * Project (25)
      :     :     :                          :  +- * HashAggregate (24)
      :     :     :                          :     +- * BroadcastHashJoin Inner BuildRight (23)
      :     :     :                          :        :- * BroadcastHashJoin Inner BuildRight (18)
      :     :     :                          :        :  :- * Filter (13)
      :     :     :                          :        :  :  +- * ColumnarToRow (12)
      :     :     :                          :        :  :     +- Scan parquet default.partsupp (11)
      :     :     :                          :        :  +- BroadcastExchange (17)
      :     :     :                          :        :     +- * Filter (16)
      :     :     :                          :        :        +- * ColumnarToRow (15)
      :     :     :                          :        :           +- Scan parquet default.supplier (14)
      :     :     :                          :        +- BroadcastExchange (22)
      :     :     :                          :           +- * Filter (21)
      :     :     :                          :              +- * ColumnarToRow (20)
      :     :     :                          :                 +- Scan parquet default.nation (19)
      :     :     :                          +- BroadcastExchange (30)
      :     :     :                             +- * HashAggregate (29)
      :     :     :                                +- * Filter (28)
      :     :     :                                   +- * ColumnarToRow (27)
      :     :     :                                      +- Scan parquet default.region (26)
      :     :     +- ReusedExchange (40)
      :     +- BroadcastExchange (46)
      :        +- * Filter (45)
      :           +- * ColumnarToRow (44)
      :              +- Scan parquet default.nation (43)
      +- BroadcastExchange (53)
         +- * Project (52)
            +- * Filter (51)
               +- * ColumnarToRow (50)
                  +- Scan parquet default.region (49)


(1) Scan parquet default.part
Output [4]: [p_partkey#1, p_mfgr#2, p_type#3, p_size#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/part]
PushedFilters: [IsNotNull(p_size), IsNotNull(p_type), EqualTo(p_size,15), StringEndsWith(p_type,BRASS), IsNotNull(p_partkey)]
ReadSchema: struct<p_partkey:bigint,p_mfgr:string,p_type:string,p_size:int>

(2) ColumnarToRow [codegen id : 10]
Input [4]: [p_partkey#1, p_mfgr#2, p_type#3, p_size#4]

(3) Filter [codegen id : 10]
Input [4]: [p_partkey#1, p_mfgr#2, p_type#3, p_size#4]
Condition : ((((isnotnull(p_size#4) AND isnotnull(p_type#3)) AND (p_size#4 = 15)) AND EndsWith(p_type#3, BRASS)) AND isnotnull(p_partkey#1))

(4) Project [codegen id : 10]
Output [2]: [p_partkey#1, p_mfgr#2]
Input [4]: [p_partkey#1, p_mfgr#2, p_type#3, p_size#4]

(5) Scan parquet default.partsupp
Output [3]: [ps_partkey#5, ps_suppkey#6, ps_supplycost#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/partsupp]
PushedFilters: [IsNotNull(ps_partkey), IsNotNull(ps_supplycost), IsNotNull(ps_suppkey)]
ReadSchema: struct<ps_partkey:bigint,ps_suppkey:bigint,ps_supplycost:decimal(10,0)>

(6) ColumnarToRow [codegen id : 1]
Input [3]: [ps_partkey#5, ps_suppkey#6, ps_supplycost#7]

(7) Filter [codegen id : 1]
Input [3]: [ps_partkey#5, ps_suppkey#6, ps_supplycost#7]
Condition : ((isnotnull(ps_partkey#5) AND isnotnull(ps_supplycost#7)) AND isnotnull(ps_suppkey#6))

(8) BroadcastExchange
Input [3]: [ps_partkey#5, ps_suppkey#6, ps_supplycost#7]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#8]

(9) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [p_partkey#1]
Right keys [1]: [ps_partkey#5]
Join condition: None

(10) Project [codegen id : 10]
Output [4]: [p_partkey#1, p_mfgr#2, ps_suppkey#6, ps_supplycost#7]
Input [5]: [p_partkey#1, p_mfgr#2, ps_partkey#5, ps_suppkey#6, ps_supplycost#7]

(11) Scan parquet default.partsupp
Output [5]: [ps_partkey#9, ps_suppkey#10, ps_availqty#11, ps_supplycost#12, ps_comment#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/partsupp]
PushedFilters: [IsNotNull(ps_suppkey), IsNotNull(ps_partkey)]
ReadSchema: struct<ps_partkey:bigint,ps_suppkey:bigint,ps_availqty:int,ps_supplycost:decimal(10,0),ps_comment:string>

(12) ColumnarToRow [codegen id : 5]
Input [5]: [ps_partkey#9, ps_suppkey#10, ps_availqty#11, ps_supplycost#12, ps_comment#13]

(13) Filter [codegen id : 5]
Input [5]: [ps_partkey#9, ps_suppkey#10, ps_availqty#11, ps_supplycost#12, ps_comment#13]
Condition : (isnotnull(ps_suppkey#10) AND isnotnull(ps_partkey#9))

(14) Scan parquet default.supplier
Output [7]: [s_suppkey#14, s_name#15, s_address#16, s_nationkey#17, s_phone#18, s_acctbal#19, s_comment#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/supplier]
PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)]
ReadSchema: struct<s_suppkey:bigint,s_name:string,s_address:string,s_nationkey:bigint,s_phone:string,s_acctbal:decimal(10,0),s_comment:string>

(15) ColumnarToRow [codegen id : 2]
Input [7]: [s_suppkey#14, s_name#15, s_address#16, s_nationkey#17, s_phone#18, s_acctbal#19, s_comment#20]

(16) Filter [codegen id : 2]
Input [7]: [s_suppkey#14, s_name#15, s_address#16, s_nationkey#17, s_phone#18, s_acctbal#19, s_comment#20]
Condition : (isnotnull(s_suppkey#14) AND isnotnull(s_nationkey#17))

(17) BroadcastExchange
Input [7]: [s_suppkey#14, s_name#15, s_address#16, s_nationkey#17, s_phone#18, s_acctbal#19, s_comment#20]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#21]

(18) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ps_suppkey#10]
Right keys [1]: [s_suppkey#14]
Join condition: None

(19) Scan parquet default.nation
Output [4]: [n_nationkey#22, n_name#23, n_regionkey#24, n_comment#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/nation]
PushedFilters: [IsNotNull(n_nationkey), IsNotNull(n_regionkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string,n_regionkey:bigint,n_comment:string>

(20) ColumnarToRow [codegen id : 3]
Input [4]: [n_nationkey#22, n_name#23, n_regionkey#24, n_comment#25]

(21) Filter [codegen id : 3]
Input [4]: [n_nationkey#22, n_name#23, n_regionkey#24, n_comment#25]
Condition : (isnotnull(n_nationkey#22) AND isnotnull(n_regionkey#24))

(22) BroadcastExchange
Input [4]: [n_nationkey#22, n_name#23, n_regionkey#24, n_comment#25]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#26]

(23) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [s_nationkey#17]
Right keys [1]: [n_nationkey#22]
Join condition: None

(24) HashAggregate [codegen id : 5]
Input [16]: [ps_partkey#9, ps_suppkey#10, ps_availqty#11, ps_supplycost#12, ps_comment#13, s_suppkey#14, s_name#15, s_address#16, s_nationkey#17, s_phone#18, s_acctbal#19, s_comment#20, n_nationkey#22, n_name#23, n_regionkey#24, n_comment#25]
Keys [2]: [n_regionkey#24, ps_partkey#9]
Functions [1]: [partial_min(ps_supplycost#12)]
Aggregate Attributes [1]: [min#27]
Results [3]: [n_regionkey#24, ps_partkey#9, min#28]

(25) Project [codegen id : 5]
Output [3]: [n_regionkey#24, ps_partkey#9, min#28 AS _pushedexpression#29]
Input [3]: [n_regionkey#24, ps_partkey#9, min#28]

(26) Scan parquet default.region
Output [3]: [r_regionkey#30, r_name#31, r_comment#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/region]
PushedFilters: [IsNotNull(r_name), EqualTo(r_name,EUROPE), IsNotNull(r_regionkey)]
ReadSchema: struct<r_regionkey:bigint,r_name:string,r_comment:string>

(27) ColumnarToRow [codegen id : 4]
Input [3]: [r_regionkey#30, r_name#31, r_comment#32]

(28) Filter [codegen id : 4]
Input [3]: [r_regionkey#30, r_name#31, r_comment#32]
Condition : ((isnotnull(r_name#31) AND (r_name#31 = EUROPE)) AND isnotnull(r_regionkey#30))

(29) HashAggregate [codegen id : 4]
Input [3]: [r_regionkey#30, r_name#31, r_comment#32]
Keys [1]: [r_regionkey#30]
Functions: []
Aggregate Attributes: []
Results [1]: [r_regionkey#30]

(30) BroadcastExchange
Input [1]: [r_regionkey#30]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#33]

(31) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [n_regionkey#24]
Right keys [1]: [r_regionkey#30]
Join condition: None

(32) Project [codegen id : 5]
Output [2]: [ps_partkey#9, _pushedexpression#29]
Input [4]: [n_regionkey#24, ps_partkey#9, _pushedexpression#29, r_regionkey#30]

(33) HashAggregate [codegen id : 5]
Input [2]: [ps_partkey#9, _pushedexpression#29]
Keys [1]: [ps_partkey#9]
Functions [1]: [partial_min(_pushedexpression#29)]
Aggregate Attributes [1]: [min#34]
Results [2]: [ps_partkey#9, min#35]

(34) Exchange
Input [2]: [ps_partkey#9, min#35]
Arguments: hashpartitioning(ps_partkey#9, 5), ENSURE_REQUIREMENTS, [id=#36]

(35) HashAggregate [codegen id : 6]
Input [2]: [ps_partkey#9, min#35]
Keys [1]: [ps_partkey#9]
Functions [1]: [min(_pushedexpression#29)]
Aggregate Attributes [1]: [min(_pushedexpression#29)#37]
Results [2]: [min(_pushedexpression#29)#37 AS min(ps_supplycost)#38, ps_partkey#9]

(36) Filter [codegen id : 6]
Input [2]: [min(ps_supplycost)#38, ps_partkey#9]
Condition : isnotnull(min(ps_supplycost)#38)

(37) BroadcastExchange
Input [2]: [min(ps_supplycost)#38, ps_partkey#9]
Arguments: HashedRelationBroadcastMode(List(input[0, decimal(10,0), false], input[1, bigint, true]),false), [id=#39]

(38) BroadcastHashJoin [codegen id : 10]
Left keys [2]: [ps_supplycost#7, p_partkey#1]
Right keys [2]: [min(ps_supplycost)#38, ps_partkey#9]
Join condition: None

(39) Project [codegen id : 10]
Output [3]: [p_partkey#1, p_mfgr#2, ps_suppkey#6]
Input [6]: [p_partkey#1, p_mfgr#2, ps_suppkey#6, ps_supplycost#7, min(ps_supplycost)#38, ps_partkey#9]

(40) ReusedExchange [Reuses operator id: 17]
Output [7]: [s_suppkey#40, s_name#41, s_address#42, s_nationkey#43, s_phone#44, s_acctbal#45, s_comment#46]

(41) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ps_suppkey#6]
Right keys [1]: [s_suppkey#40]
Join condition: None

(42) Project [codegen id : 10]
Output [8]: [p_partkey#1, p_mfgr#2, s_name#41, s_address#42, s_nationkey#43, s_phone#44, s_acctbal#45, s_comment#46]
Input [10]: [p_partkey#1, p_mfgr#2, ps_suppkey#6, s_suppkey#40, s_name#41, s_address#42, s_nationkey#43, s_phone#44, s_acctbal#45, s_comment#46]

(43) Scan parquet default.nation
Output [3]: [n_nationkey#47, n_name#48, n_regionkey#49]
Batched: true
Location [not included in comparison]/{warehouse_dir}/nation]
PushedFilters: [IsNotNull(n_nationkey), IsNotNull(n_regionkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string,n_regionkey:bigint>

(44) ColumnarToRow [codegen id : 8]
Input [3]: [n_nationkey#47, n_name#48, n_regionkey#49]

(45) Filter [codegen id : 8]
Input [3]: [n_nationkey#47, n_name#48, n_regionkey#49]
Condition : (isnotnull(n_nationkey#47) AND isnotnull(n_regionkey#49))

(46) BroadcastExchange
Input [3]: [n_nationkey#47, n_name#48, n_regionkey#49]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#50]

(47) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [s_nationkey#43]
Right keys [1]: [n_nationkey#47]
Join condition: None

(48) Project [codegen id : 10]
Output [9]: [p_partkey#1, p_mfgr#2, s_name#41, s_address#42, s_phone#44, s_acctbal#45, s_comment#46, n_name#48, n_regionkey#49]
Input [11]: [p_partkey#1, p_mfgr#2, s_name#41, s_address#42, s_nationkey#43, s_phone#44, s_acctbal#45, s_comment#46, n_nationkey#47, n_name#48, n_regionkey#49]

(49) Scan parquet default.region
Output [2]: [r_regionkey#51, r_name#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/region]
PushedFilters: [IsNotNull(r_name), EqualTo(r_name,EUROPE), IsNotNull(r_regionkey)]
ReadSchema: struct<r_regionkey:bigint,r_name:string>

(50) ColumnarToRow [codegen id : 9]
Input [2]: [r_regionkey#51, r_name#52]

(51) Filter [codegen id : 9]
Input [2]: [r_regionkey#51, r_name#52]
Condition : ((isnotnull(r_name#52) AND (r_name#52 = EUROPE)) AND isnotnull(r_regionkey#51))

(52) Project [codegen id : 9]
Output [1]: [r_regionkey#51]
Input [2]: [r_regionkey#51, r_name#52]

(53) BroadcastExchange
Input [1]: [r_regionkey#51]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#53]

(54) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [n_regionkey#49]
Right keys [1]: [r_regionkey#51]
Join condition: None

(55) Project [codegen id : 10]
Output [8]: [s_acctbal#45, s_name#41, n_name#48, p_partkey#1, p_mfgr#2, s_address#42, s_phone#44, s_comment#46]
Input [10]: [p_partkey#1, p_mfgr#2, s_name#41, s_address#42, s_phone#44, s_acctbal#45, s_comment#46, n_name#48, n_regionkey#49, r_regionkey#51]

(56) TakeOrderedAndProject
Input [8]: [s_acctbal#45, s_name#41, n_name#48, p_partkey#1, p_mfgr#2, s_address#42, s_phone#44, s_comment#46]
Arguments: 100, [s_acctbal#45 DESC NULLS LAST, n_name#48 ASC NULLS FIRST, s_name#41 ASC NULLS FIRST, p_partkey#1 ASC NULLS FIRST], [s_acctbal#45, s_name#41, n_name#48, p_partkey#1, p_mfgr#2, s_address#42, s_phone#44, s_comment#46]

