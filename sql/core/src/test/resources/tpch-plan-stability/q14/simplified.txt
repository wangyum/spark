WholeStageCodegen (3)
  HashAggregate [sum,isEmpty,sum,isEmpty] [sum(CASE WHEN StartsWith(p_type, PROMO) THEN CheckOverflow((promote_precision(cast(l_extendedprice as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0)) ELSE 0 END),sum(CheckOverflow((promote_precision(cast(l_extendedprice as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0))),promo_revenue,sum,isEmpty,sum,isEmpty]
    InputAdapter
      Exchange #1
        WholeStageCodegen (2)
          HashAggregate [p_type,l_extendedprice,l_discount] [sum,isEmpty,sum,isEmpty,sum,isEmpty,sum,isEmpty]
            Project
              BroadcastHashJoin [l_partkey,p_partkey]
                HashAggregate [l_partkey]
                  Filter [l_shipdate,l_partkey]
                    ColumnarToRow
                      InputAdapter
                        Scan parquet default.lineitem [l_orderkey,l_partkey,l_suppkey,l_linenumber,l_quantity,l_extendedprice,l_discount,l_tax,l_returnflag,l_linestatus,l_shipdate,l_commitdate,l_receiptdate,l_shipinstruct,l_shipmode,l_comment]
                InputAdapter
                  BroadcastExchange #2
                    WholeStageCodegen (1)
                      HashAggregate [p_partkey]
                        Filter [p_partkey]
                          ColumnarToRow
                            InputAdapter
                              Scan parquet default.part [p_partkey,p_name,p_mfgr,p_brand,p_type,p_size,p_container,p_retailprice,p_comment]
